(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    369229,       7290]
NotebookOptionsPosition[    366355,       7191]
NotebookOutlinePosition[    366736,       7208]
CellTagsIndexPosition[    366693,       7205]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[StyleBox["Visualizations of qubit driving beyond the RWA", \
"Title"]], "Text",
 CellChangeTimes->{{3.720415856469101*^9, 3.720415908146785*^9}}],

Cell[CellGroupData[{

Cell["Original Hamiltonian & Magnus effective Hamiltonians", "Section",
 CellChangeTimes->{{3.721110029398683*^9, 3.721110049653016*^9}}],

Cell["\<\

Define original Hamiltonian in the rotating frame\
\>", "Text",
 CellChangeTimes->{{3.7196436607136917`*^9, 3.7196436919140244`*^9}, 
   3.719657744467873*^9, {3.720244319005018*^9, 3.7202443210489607`*^9}, 
   3.720415852398018*^9}],

Cell[BoxData[
 RowBox[{"Horig", ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"H1", "/", "4"}], "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "phi", "]"}], "*", "sx"}], "+", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"2", "*", "ww", "*", "t"}], "+", "phi"}], "]"}], "sx"}], "+", 
      RowBox[{
       RowBox[{"Sin", "[", "phi", "]"}], "sy"}], "-", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"2", "*", "ww", "*", "t"}], "+", "phi"}], "]"}], "*", 
       "sy"}]}], ")"}]}], "+", 
   RowBox[{
    RowBox[{"Delta", "/", "2"}], "*", "sz"}]}]}]], "Input",
 CellChangeTimes->{{3.719643473500388*^9, 3.7196436036867323`*^9}, {
   3.719643650553937*^9, 3.7196436528412933`*^9}, {3.720244552513276*^9, 
   3.720244588137054*^9}, {3.720244629147169*^9, 3.720244667635796*^9}, 
   3.7203341327742767`*^9}],

Cell["Define Magnus approximation Hamiltonians", "Text",
 CellChangeTimes->{{3.71964340444093*^9, 3.719643433346612*^9}, {
  3.720245446605926*^9, 3.72024544741252*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gtermHww0", "=", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", "Delta", " ", "sz"}], "+", 
      RowBox[{"H1", " ", "sx", " ", 
       RowBox[{"Cos", "[", "phi", "]"}]}], "+", 
      RowBox[{"H1", " ", "sy", " ", 
       RowBox[{"Sin", "[", "phi", "]"}]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gtermHwwM1", "=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"32", " ", "ww"}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["H1", "2"], " ", "sz"}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["H1", "2"], " ", "sz", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"phi", "+", "\[Alpha]0"}], ")"}]}], "]"}]}], "+", 
      RowBox[{"4", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Delta", " ", "H1", " ", "sx"}], "+", 
         RowBox[{"H1D", " ", "sy"}]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"phi", "+", 
         RowBox[{"2", " ", "\[Alpha]0"}]}], "]"}]}], "+", 
      RowBox[{"4", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"H1D", " ", "sx"}], "-", 
         RowBox[{"Delta", " ", "H1", " ", "sy"}]}], ")"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"phi", "+", 
         RowBox[{"2", " ", "\[Alpha]0"}]}], "]"}]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gtermHwwM2", "=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"256", " ", 
      SuperscriptBox["ww", "2"]}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "8"}], " ", "Delta", " ", 
       SuperscriptBox["H1", "2"], " ", "sz"}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["H1", "3"], " ", "sx", " ", 
       RowBox[{"Cos", "[", "phi", "]"}]}], "+", 
      RowBox[{"8", " ", "Delta", " ", 
       SuperscriptBox["H1", "2"], " ", "sz", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"phi", "+", "\[Alpha]0"}], ")"}]}], "]"}]}], "-", 
      RowBox[{"16", " ", 
       SuperscriptBox["Delta", "2"], " ", "H1", " ", "sx", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"phi", "+", 
         RowBox[{"2", " ", "\[Alpha]0"}]}], "]"}]}], "+", 
      RowBox[{"16", " ", "H1DD", " ", "sx", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"phi", "+", 
         RowBox[{"2", " ", "\[Alpha]0"}]}], "]"}]}], "-", 
      RowBox[{"32", " ", "Delta", " ", "H1D", " ", "sy", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"phi", "+", 
         RowBox[{"2", " ", "\[Alpha]0"}]}], "]"}]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["H1", "3"], " ", "sx", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"3", " ", "phi"}], "+", 
         RowBox[{"2", " ", "\[Alpha]0"}]}], "]"}]}], "-", 
      RowBox[{
       SuperscriptBox["H1", "3"], " ", "sx", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"3", " ", "phi"}], "+", 
         RowBox[{"4", " ", "\[Alpha]0"}]}], "]"}]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["H1", "3"], " ", "sy", " ", 
       RowBox[{"Sin", "[", "phi", "]"}]}], "+", 
      RowBox[{"24", " ", "H1", " ", "H1D", " ", "sz", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"phi", "+", "\[Alpha]0"}], ")"}]}], "]"}]}], "-", 
      RowBox[{"32", " ", "Delta", " ", "H1D", " ", "sx", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"phi", "+", 
         RowBox[{"2", " ", "\[Alpha]0"}]}], "]"}]}], "+", 
      RowBox[{"16", " ", 
       SuperscriptBox["Delta", "2"], " ", "H1", " ", "sy", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"phi", "+", 
         RowBox[{"2", " ", "\[Alpha]0"}]}], "]"}]}], "-", 
      RowBox[{"16", " ", "H1DD", " ", "sy", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"phi", "+", 
         RowBox[{"2", " ", "\[Alpha]0"}]}], "]"}]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["H1", "3"], " ", "sy", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"3", " ", "phi"}], "+", 
         RowBox[{"2", " ", "\[Alpha]0"}]}], "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["H1", "3"], " ", "sy", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"3", " ", "phi"}], "+", 
         RowBox[{"4", " ", "\[Alpha]0"}]}], "]"}]}]}], ")"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.719643381072638*^9, 3.719643396752432*^9}, {
  3.7196434965181017`*^9, 3.7196434980195923`*^9}, {3.7202442779699717`*^9, 
  3.720244309855783*^9}, {3.720245964623187*^9, 3.720246063536854*^9}, {
  3.7202461644283943`*^9, 3.720246231240554*^9}, {3.720248708864814*^9, 
  3.7202487111749573`*^9}, {3.720268371550209*^9, 3.720268372408391*^9}, {
  3.721630558881887*^9, 3.7216305612585297`*^9}, {3.721630600180681*^9, 
  3.721630619508255*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"termHww0", "=", 
  RowBox[{"gtermHww0", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Delta", "\[Rule]", "0"}], ",", 
     RowBox[{"phi", "\[Rule]", "0"}]}], "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"termHwwM1", "=", 
  RowBox[{
   RowBox[{"gtermHwwM1", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Delta", "\[Rule]", "0"}], ",", 
      RowBox[{"phi", "\[Rule]", "0"}]}], "}"}]}], "//", 
   "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"uglyHeff", "=", 
   RowBox[{
    RowBox[{
     FractionBox["1", "4"], " ", "sx", " ", "H1"}], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"H1D", " ", "sy", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Alpha]0"}], "]"}]}], "+", 
      RowBox[{"H1D", " ", "sx", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", "\[Alpha]0"}], "]"}]}]}], 
     RowBox[{"8", " ", "ww"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"termHwwM2", "=", 
   RowBox[{
    RowBox[{"gtermHwwM2", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Delta", "\[Rule]", "0"}], ",", 
       RowBox[{"phi", "\[Rule]", "0"}]}], "}"}]}], "//", "FullSimplify"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ApproxHList", "=", 
  RowBox[{"Join", "[", 
   RowBox[{
    RowBox[{"Accumulate", "[", 
     RowBox[{"{", 
      RowBox[{"termHww0", ",", "termHwwM1"}], "}"}], "]"}], ",", 
    RowBox[{"{", "uglyHeff", "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.721630576292171*^9, 3.7216306582925253`*^9}, {
  3.721630818347034*^9, 3.721630838874868*^9}, {3.721633033746441*^9, 
  3.721633046281035*^9}, {3.721633123332355*^9, 3.721633143495358*^9}, {
  3.721652597168684*^9, 3.7216527163450727`*^9}, {3.721652886913437*^9, 
  3.721652888024048*^9}, {3.722079978596731*^9, 3.722080016845483*^9}, {
  3.722080120760275*^9, 3.7220801747542562`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"H1", " ", "sx"}], "4"]], "Output",
 CellChangeTimes->{3.722079942968807*^9, 3.722081162295978*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    SuperscriptBox["H1", "2"], " ", "sz"}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"4", " ", "H1D", " ", "sy"}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["H1", "2"], " ", "sz"}]}], ")"}], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "\[Alpha]0"}], "]"}]}], "+", 
   RowBox[{"4", " ", "H1D", " ", "sx", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "\[Alpha]0"}], "]"}]}]}], 
  RowBox[{"32", " ", "ww"}]]], "Output",
 CellChangeTimes->{3.722079942968807*^9, 3.7220811626238127`*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"-", "2"}], " ", 
    SuperscriptBox["H1", "3"], " ", "sx"}], "+", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["H1", "3"], "+", 
      RowBox[{"8", " ", "H1DD"}]}], ")"}], " ", "sx", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "\[Alpha]0"}], "]"}]}], "-", 
   RowBox[{
    SuperscriptBox["H1", "3"], " ", "sx", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"4", " ", "\[Alpha]0"}], "]"}]}], "+", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["H1", "3"], " ", "sy"}], "-", 
      RowBox[{"8", " ", "H1DD", " ", "sy"}], "+", 
      RowBox[{"12", " ", "H1", " ", "H1D", " ", "sz"}]}], ")"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "\[Alpha]0"}], "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["H1", "3"], " ", "sy", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"4", " ", "\[Alpha]0"}], "]"}]}]}], 
  RowBox[{"256", " ", 
   SuperscriptBox["ww", "2"]}]]], "Output",
 CellChangeTimes->{3.722079942968807*^9, 3.722081162630776*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"H1", " ", "sx"}], "4"], ",", 
   RowBox[{
    FractionBox[
     RowBox[{"H1", " ", "sx"}], "4"], "+", 
    FractionBox[
     RowBox[{
      RowBox[{
       SuperscriptBox["H1", "2"], " ", "sz"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", " ", "H1D", " ", "sy"}], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["H1", "2"], " ", "sz"}]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Alpha]0"}], "]"}]}], "+", 
      RowBox[{"4", " ", "H1D", " ", "sx", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Alpha]0"}], "]"}]}]}], 
     RowBox[{"32", " ", "ww"}]]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{"H1", " ", "sx"}], "4"], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"H1D", " ", "sy", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Alpha]0"}], "]"}]}], "+", 
      RowBox[{"H1D", " ", "sx", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Alpha]0"}], "]"}]}]}], 
     RowBox[{"8", " ", "ww"}]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.722079942968807*^9, 3.722081162637412*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gtermHwwM1", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"phi", "\[Rule]", "0"}], ",", 
    RowBox[{"Delta", "\[Rule]", "0"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7220800451843653`*^9, 3.722080059717025*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    SuperscriptBox["H1", "2"], " ", "sz"}], "+", 
   RowBox[{"4", " ", "H1D", " ", "sy", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "\[Alpha]0"}], "]"}]}], "-", 
   RowBox[{"2", " ", 
    SuperscriptBox["H1", "2"], " ", "sz", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "\[Alpha]0"}], "]"}]}], "+", 
   RowBox[{"4", " ", "H1D", " ", "sx", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "\[Alpha]0"}], "]"}]}]}], 
  RowBox[{"32", " ", "ww"}]]], "Output",
 CellChangeTimes->{3.722080060058091*^9, 3.722081162712495*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition of the driving envelopes", "Section",
 CellChangeTimes->{{3.719753983824387*^9, 3.7197539861273727`*^9}, {
  3.7202683776598577`*^9, 3.720268378498946*^9}, {3.720349085146244*^9, 
  3.7203490888034067`*^9}, {3.720416056449759*^9, 3.720416062111112*^9}}],

Cell["\<\
All jump operators are defined from the real Hamiltonian to the effective \
Hamiltonian\
\>", "Text",
 CellChangeTimes->{{3.7210486335397673`*^9, 3.7210487094598923`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"id2", "=", 
   RowBox[{"IdentityMatrix", "[", "2", "]"}]}], ";"}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{
   RowBox[{"ones2", "=", 
    RowBox[{"ConstantArray", "[", 
     RowBox[{"1", ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "2"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"constantH1p", "=", 
    RowBox[{"Function", "[", 
     RowBox[{"t", ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"constantJmp", "=", 
     RowBox[{"Accumulate", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"0", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", 
           RowBox[{"4", "ww"}]]}], " ", "\[ImaginaryI]", " ", "H1", " ", 
         RowBox[{"Sin", "[", "\[Alpha]0", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"sx", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"phi", "+", "\[Alpha]0"}], "]"}]}], "-", 
           RowBox[{"sy", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"phi", "+", "\[Alpha]0"}], "]"}]}]}], ")"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"+", 
          FractionBox["1", 
           RowBox[{"32", 
            SuperscriptBox["ww", "2"]}]]}], " ", "\[ImaginaryI]", " ", "H1", 
         " ", 
         RowBox[{"Sin", "[", "\[Alpha]0", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"H1", " ", "sz", " ", 
            RowBox[{"Cos", "[", "\[Alpha]0", "]"}]}], "+", 
           RowBox[{"4", " ", "Delta", " ", "sx", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"phi", "+", "\[Alpha]0"}], "]"}]}], "-", 
           RowBox[{"2", " ", "H1", " ", "sz", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{
              RowBox[{"2", " ", "phi"}], "+", "\[Alpha]0"}], "]"}]}], "-", 
           RowBox[{"4", " ", "Delta", " ", "sy", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"phi", "+", "\[Alpha]0"}], "]"}]}]}], ")"}]}]}], 
       "\[IndentingNewLine]", "}"}], "]"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"constantJmp", "=", 
    RowBox[{"Accumulate", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"0", ",", "\[IndentingNewLine]", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"4", "ww"}]], " ", "\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"HA", "-", "HB"}], ")"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Alpha]0", "-", "\[Alpha]j"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"sx", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"phi", "+", "\[Alpha]0", "+", "\[Alpha]j"}], "]"}]}], "-", 
          RowBox[{"sy", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"phi", "+", "\[Alpha]0", "+", "\[Alpha]j"}], "]"}]}]}], 
         ")"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", 
          RowBox[{"32", 
           SuperscriptBox["ww", "2"]}]]}], " ", "\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"HA", "-", "HB"}], ")"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Alpha]0", "-", "\[Alpha]j"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"HA", "+", "HB"}], ")"}], " ", "sz", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Alpha]0", "-", "\[Alpha]j"}], "]"}], "-", 
             RowBox[{"2", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{
                RowBox[{"2", " ", "phi"}], "+", "\[Alpha]0", "+", 
                "\[Alpha]j"}], "]"}]}]}], ")"}]}], "+", 
          RowBox[{"4", " ", "Delta", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"sx", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"phi", "+", "\[Alpha]0", "+", "\[Alpha]j"}], "]"}]}], 
             "-", 
             RowBox[{"sy", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"phi", "+", "\[Alpha]0", "+", "\[Alpha]j"}], "]"}]}]}],
             ")"}]}]}], ")"}]}]}], "\[IndentingNewLine]", "}"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"linearH1p", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"t", ",", 
     RowBox[{"2", "*", "t"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"linearJmp", "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H1pOptions", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[Rule]", "\"\<constant\>\""}], ",", 
     RowBox[{"2", "\[Rule]", "\"\<linear increase\>\""}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H1pList", "=", 
   RowBox[{"{", 
    RowBox[{"constantH1p", ",", "linearH1p"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"jmpList", "=", 
    RowBox[{"{", 
     RowBox[{"constantJmp", ",", "linearJmp"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"H1profile", "=", 
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"t", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"HeavisideTheta", "[", "t", "]"}], "-", 
            RowBox[{"HeavisideTheta", "[", 
             RowBox[{"t", "-", "tr"}], "]"}]}], ")"}], "*", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"1", "/", "2"}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"Pi", "*", 
                RowBox[{"t", "/", "tr"}]}], "]"}], "/", "2"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", "tr"}], ")"}]}]}], "\[IndentingNewLine]", "+", 
         " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"HeavisideTheta", "[", 
             RowBox[{"t", "-", "tr"}], "]"}], "-", 
            RowBox[{"HeavisideTheta", "[", 
             RowBox[{"t", "-", "1", "+", "tr"}], "]"}]}], ")"}], "*", 
          RowBox[{"(", 
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", "tr"}], ")"}]}], ")"}]}], 
         "\[IndentingNewLine]", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"HeavisideTheta", "[", 
             RowBox[{"t", "-", "1", "+", "tr"}], "]"}], "-", 
            RowBox[{"HeavisideTheta", "[", 
             RowBox[{"t", "-", "1"}], "]"}]}], ")"}], "*", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"1", "/", "2"}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"Pi", "*", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", "t"}], ")"}], "/", "tr"}]}], "]"}], "/", 
              "2"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", "tr"}], ")"}]}]}]}]}], "\[IndentingNewLine]", 
       "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{"tr", "\[Rule]", 
        RowBox[{"1", "/", "5"}]}], "}"}]}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"PopupMenu", "[", 
  RowBox[{
   RowBox[{"Dynamic", "[", "selprof", "]"}], ",", "H1pOptions"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Dynamic", "[", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"H1pList", "[", 
      RowBox[{"[", "selprof", "]"}], "]"}], "@", "t"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<t/t_max\>\"", ",", "\"\<H1/H1_avg\>\""}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<driving envelope H1(t)\>\""}]}], 
   "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.719813276104945*^9, 3.719813281352642*^9}, {
   3.720266739595523*^9, 3.72026680429106*^9}, {3.720266905183339*^9, 
   3.720266948230866*^9}, {3.720266981312031*^9, 3.7202670323321037`*^9}, {
   3.7202672274332438`*^9, 3.720267271592948*^9}, {3.72026741191917*^9, 
   3.720267453792047*^9}, {3.72026748825782*^9, 3.720267494673595*^9}, {
   3.720267547716856*^9, 3.720267592363762*^9}, {3.7202676239672947`*^9, 
   3.7202676798461857`*^9}, {3.720267721080347*^9, 3.720267721879774*^9}, {
   3.720267778205008*^9, 3.720267831172491*^9}, {3.720267861796727*^9, 
   3.720267877500526*^9}, {3.7202679107836437`*^9, 3.720267915478465*^9}, {
   3.720268076244336*^9, 3.720268190866675*^9}, {3.7202682248174877`*^9, 
   3.720268265328919*^9}, {3.720268301556294*^9, 3.7202683152184277`*^9}, {
   3.720268386543592*^9, 3.7202683871865396`*^9}, {3.720268639550334*^9, 
   3.720268721637198*^9}, {3.720331019478126*^9, 3.720331066261516*^9}, {
   3.720331196985037*^9, 3.720331201863633*^9}, {3.720333179408434*^9, 
   3.720333195835477*^9}, {3.720333499391531*^9, 3.7203335083590193`*^9}, {
   3.720333579743729*^9, 3.720333585223814*^9}, 3.720335455942601*^9, {
   3.720335545105612*^9, 3.72033555755285*^9}, 3.720355513649579*^9, {
   3.72035599041612*^9, 3.720356056575248*^9}, {3.720356088866191*^9, 
   3.7203564705029078`*^9}, {3.720356510495723*^9, 3.720356548256439*^9}, {
   3.720416517520042*^9, 3.720416517677897*^9}, {3.720416551520164*^9, 
   3.7204166948204193`*^9}, {3.72043353806583*^9, 3.720433555385394*^9}, {
   3.720438511996814*^9, 3.720438539773818*^9}, {3.720440701307568*^9, 
   3.720440714771039*^9}, {3.720502044311821*^9, 3.720502048941143*^9}, {
   3.720867840722589*^9, 3.720867850358924*^9}, {3.7208678940854187`*^9, 
   3.720867948418954*^9}, {3.720867980809053*^9, 3.7208679837721043`*^9}, {
   3.720868027730586*^9, 3.720868031525524*^9}, 3.7208682846405077`*^9, {
   3.720869871860929*^9, 3.7208698760412197`*^9}, 3.720870244286984*^9, {
   3.720958006863597*^9, 3.720958021225534*^9}, {3.7209589029969397`*^9, 
   3.7209589100928707`*^9}, {3.720959119094308*^9, 3.720959137306698*^9}, {
   3.721048456460091*^9, 3.721048491957863*^9}, {3.721048558010335*^9, 
   3.721048590953947*^9}, {3.7210487122930193`*^9, 3.721048721949877*^9}, 
   3.721053466540574*^9, {3.721053697368998*^9, 3.721053702986822*^9}, {
   3.7210537508197308`*^9, 3.721053755154134*^9}, {3.7211238108396463`*^9, 
   3.721123835186327*^9}, {3.721387646503743*^9, 3.721387658515223*^9}, {
   3.721387693950897*^9, 3.721387751614341*^9}, {3.721630940056131*^9, 
   3.7216309646410933`*^9}}],

Cell[BoxData[
 PopupMenuBox[Dynamic[$CellContext`selprof], {1->"\<\"constant\"\>", 
  2->"\<\"linear increase\"\>"}]], "Output",
 CellChangeTimes->{3.722079945968011*^9, 3.722081162796311*^9}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Plot[
    Part[$CellContext`H1pList, $CellContext`selprof][$CellContext`t], \
{$CellContext`t, 0, 1}, AxesLabel -> {"t/t_max", "H1/H1_avg"}, PlotLabel -> 
    "driving envelope H1(t)"], StandardForm],
  ImageSizeCache->{360., {112., 116.}}]], "Output",
 CellChangeTimes->{3.722079945968011*^9, 3.722081162806364*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Trajectory integration and coordinate transformations", "Section",
 CellChangeTimes->{{3.720416000990511*^9, 3.72041603102313*^9}, {
  3.720505805275112*^9, 3.720505808025489*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pms", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"si", "\[Rule]", 
      RowBox[{"PauliMatrix", "[", "0", "]"}]}], ",", 
     RowBox[{"sx", "\[Rule]", 
      RowBox[{"PauliMatrix", "[", "1", "]"}]}], ",", 
     RowBox[{"sy", "\[Rule]", 
      RowBox[{"PauliMatrix", "[", "2", "]"}]}], ",", 
     RowBox[{"sz", "\[Rule]", 
      RowBox[{"PauliMatrix", "[", "3", "]"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H1Dsubs", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"H1", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{"H1", "[", "t", "]"}], ")"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"H1D", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"H1", "[", "t", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "1"}], "}"}]}], "]"}], ")"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"H1DD", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"H1", "[", "t", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "2"}], "}"}]}], "]"}], ")"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"H1DDD", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"H1", "[", "t", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "3"}], "}"}]}], "]"}], ")"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"H1DDDD", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"H1", "[", "t", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "4"}], "}"}]}], "]"}], ")"}]}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AssembleH", "[", 
    RowBox[{"H_", ",", "H1f_", ",", "vals_"}], "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"H", "/.", "vals"}], "/.", "H1Dsubs"}], "/.", "pms"}], "/.", 
     RowBox[{"{", 
      RowBox[{"H1", "\[Rule]", "H1f"}], "}"}]}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ToHFunc", "[", "H_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t", ",", "\[Alpha]0"}], "}"}], ",", "func"}], "]"}], "/.", 
    RowBox[{"func", "\[Rule]", "H"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetHFunc", "[", 
    RowBox[{"H_", ",", "H1f_", ",", "vals_"}], "]"}], ":=", 
   RowBox[{"ToHFunc", "@", 
    RowBox[{"AssembleH", "[", 
     RowBox[{"H", ",", "H1f", ",", "vals"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.719643717851988*^9, 3.719643722578844*^9}, {
   3.7196445358476553`*^9, 3.719644645913954*^9}, 3.719644992270249*^9, {
   3.7196450874805927`*^9, 3.719645101937063*^9}, {3.719645166643141*^9, 
   3.719645174523979*^9}, {3.719646103414359*^9, 3.719646119832254*^9}, {
   3.719646168655179*^9, 3.7196461788069487`*^9}, {3.7196463846793957`*^9, 
   3.719646390557131*^9}, {3.719646450568348*^9, 3.719646468168521*^9}, {
   3.719646508600741*^9, 3.719646518312168*^9}, {3.7196465654593678`*^9, 
   3.719646574014278*^9}, {3.71964660406135*^9, 3.7196466172357883`*^9}, {
   3.7196467640886707`*^9, 3.719646784321706*^9}, {3.719651934490148*^9, 
   3.719651955486479*^9}, {3.7196520793437443`*^9, 3.719652080619643*^9}, {
   3.719652110886743*^9, 3.7196521323243837`*^9}, {3.719652912585964*^9, 
   3.7196529681193132`*^9}, {3.719653010339864*^9, 3.719653012248835*^9}, {
   3.719653562023431*^9, 3.71965359310808*^9}, 3.7197264696092863`*^9, {
   3.719726534188534*^9, 3.719726555250202*^9}, {3.7202444989299*^9, 
   3.720244499447023*^9}, {3.720245034401173*^9, 3.720245060520206*^9}, {
   3.720333881548126*^9, 3.720333916662674*^9}, {3.720334062056768*^9, 
   3.720334072368347*^9}, {3.72043352496012*^9, 3.72043353067106*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Numerically", " ", "compute", " ", "trajectory", " ", "from", " ", "any", 
    " ", "Hamiltonian"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"NTrajectory", "[", 
     RowBox[{"Hfunc_", ",", "tM_", ",", "\[Alpha]0_", ",", "\[Psi]0_", ",", 
      RowBox[{"tinit_:", "0"}]}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"First", "@", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"I", "*", 
               RowBox[{"D", "[", 
                RowBox[{
                 RowBox[{"\[Psi]", "[", "t", "]"}], ",", "t"}], "]"}]}], 
              "\[Equal]", 
              RowBox[{
               RowBox[{"Hfunc", "[", 
                RowBox[{"t", ",", "\[Alpha]0"}], "]"}], ".", 
               RowBox[{"\[Psi]", "[", "t", "]"}]}]}], ")"}], "/.", 
            RowBox[{"{", 
             RowBox[{"Indeterminate", "\[Rule]", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"\[Psi]", "[", "tinit", "]"}], "==", "\[Psi]0"}]}], "}"}],
          ",", "\[Psi]", ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "tM"}], "}"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Helper", " ", "functions", " ", "for", " ", "plotting"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Coordinate", " ", "transforms"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"BlochCoordinatesFromState", "=", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", "state", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Re", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"state", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "*", 
            RowBox[{
             RowBox[{"state", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "\[Conjugate]"}]}], "+", 
           RowBox[{
            RowBox[{
             RowBox[{"state", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[Conjugate]"}], 
            RowBox[{"state", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Im", "[", 
            RowBox[{
             RowBox[{"state", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "*", 
             RowBox[{
              RowBox[{"state", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "\[Conjugate]"}]}], "]"}]}], 
          "+", 
          RowBox[{"Im", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"state", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[Conjugate]"}], "*", 
            RowBox[{"state", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"state", "[", 
            RowBox[{"[", "1", "]"}], "]"}], 
           RowBox[{
            RowBox[{"state", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "\[Conjugate]"}]}], "-", 
          RowBox[{
           RowBox[{"state", "[", 
            RowBox[{"[", "2", "]"}], "]"}], 
           RowBox[{
            RowBox[{"state", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "\[Conjugate]"}]}]}]}], 
        "\[IndentingNewLine]", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RotationAxisFromHamiltonian", "=", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", "H", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Re", "[", 
          RowBox[{
           RowBox[{"Tr", "[", 
            RowBox[{"H", ".", 
             RowBox[{"PauliMatrix", "[", "i", "]"}]}], "]"}], "/", "2."}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Cartesian", " ", "Bloch", " ", "angles", " ", "transformations"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RestrictAngleMPiPPi", "=", 
     RowBox[{"Function", "[", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"Mod", "[", 
         RowBox[{
          RowBox[{"x", "+", "Pi"}], ",", 
          RowBox[{"2", "Pi"}]}], "]"}], "-", "Pi"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"BlochAngleCoordinatesFromState", "=", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", "state", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"RestrictAngleMPiPPi", "[", 
          RowBox[{
           RowBox[{"Arg", "[", 
            RowBox[{"state", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}], "-", 
           RowBox[{"Arg", "[", 
            RowBox[{"state", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"2", "*", 
          RowBox[{"ArcCos", "[", 
           RowBox[{"Abs", "[", 
            RowBox[{"state", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}]}], 
        "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}], ";"}],
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XBasisFromZBasis", "=", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", "state", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"state", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "+", 
            RowBox[{"state", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "/", 
          RowBox[{"Sqrt", "[", "2", "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"state", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "-", 
            RowBox[{"state", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "/", 
          RowBox[{"Sqrt", "[", "2", "]"}]}]}], "\[IndentingNewLine]", "}"}]}],
       "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Mercator", " ", "transformations"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MercatorCoordinatesFromBlochAngle", "=", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", "coords", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"coords", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"-", 
          RowBox[{"ArcTanh", "[", 
           RowBox[{"Cos", "[", 
            RowBox[{"coords", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}]}]}], 
        "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7196456313106613`*^9, 3.7196457882836943`*^9}, {
   3.7196458716288233`*^9, 3.719645911340754*^9}, {3.719645962519986*^9, 
   3.71964596967822*^9}, {3.7196533116293583`*^9, 3.7196534768806133`*^9}, {
   3.7196535952050047`*^9, 3.719653636196929*^9}, {3.719653924912017*^9, 
   3.719653952078833*^9}, {3.719653982641733*^9, 3.7196541434211063`*^9}, {
   3.719654220012231*^9, 3.719654233648473*^9}, {3.719654305510405*^9, 
   3.719654370261098*^9}, 3.7196545885118237`*^9, {3.7196546591842413`*^9, 
   3.71965466040137*^9}, {3.719656570585896*^9, 3.719656791159357*^9}, {
   3.7196568442729473`*^9, 3.719656851205359*^9}, {3.7196572565643587`*^9, 
   3.719657313018717*^9}, {3.7196573615194473`*^9, 3.719657362838056*^9}, {
   3.7196574060430803`*^9, 3.7196574386561003`*^9}, {3.719657472676058*^9, 
   3.719657498442898*^9}, {3.719657636218652*^9, 3.719657670184771*^9}, {
   3.7196577017151403`*^9, 3.719657703617139*^9}, {3.71966221613478*^9, 
   3.7196622280306664`*^9}, {3.719662480763899*^9, 3.7196625063999977`*^9}, {
   3.7196625619171677`*^9, 3.7196626002209387`*^9}, {3.71966267955975*^9, 
   3.719662715988278*^9}, {3.719662812997129*^9, 3.719662842149823*^9}, {
   3.719663093430153*^9, 3.719663101156107*^9}, {3.719663195553578*^9, 
   3.719663265292507*^9}, {3.7196633599608927`*^9, 3.719663372540359*^9}, {
   3.719663412348423*^9, 3.719663458141337*^9}, {3.719665537183547*^9, 
   3.7196655719879723`*^9}, {3.7197254052652473`*^9, 3.719725494833666*^9}, {
   3.719725681914853*^9, 3.719725715616377*^9}, {3.719725799333725*^9, 
   3.719725818220581*^9}, {3.719725877273431*^9, 3.7197259613612823`*^9}, {
   3.719726025691444*^9, 3.719726213112496*^9}, {3.719726444128738*^9, 
   3.719726456529598*^9}, {3.719727596190259*^9, 3.719727629362872*^9}, {
   3.719727806211677*^9, 3.719727934266852*^9}, {3.719727974230893*^9, 
   3.719727977229498*^9}, {3.719728097049365*^9, 3.719728100049505*^9}, {
   3.719729072077509*^9, 3.7197292151938267`*^9}, {3.7197320213069*^9, 
   3.719732028076088*^9}, {3.719732088790575*^9, 3.719732094917544*^9}, {
   3.7197321867243977`*^9, 3.719732209033658*^9}, {3.719732289478074*^9, 
   3.719732406489702*^9}, {3.7197326085787983`*^9, 3.71973261842257*^9}, {
   3.719732689954171*^9, 3.7197327314741783`*^9}, {3.719733471072098*^9, 
   3.719733472058918*^9}, {3.719733522645763*^9, 3.719733553157633*^9}, {
   3.719733584774048*^9, 3.719733735083021*^9}, {3.719737395185192*^9, 
   3.719737399408736*^9}, {3.71981940856663*^9, 3.719819411138315*^9}, {
   3.719843314063737*^9, 3.719843413670208*^9}, {3.719843528252864*^9, 
   3.719843533598009*^9}, {3.719843620978965*^9, 3.71984362210338*^9}, {
   3.720243519084482*^9, 3.7202435229175987`*^9}, {3.7202451043841333`*^9, 
   3.720245415885253*^9}, {3.720246273548353*^9, 3.720246474447229*^9}, {
   3.720248674427906*^9, 3.7202486815214987`*^9}, {3.720331115904566*^9, 
   3.7203311681436863`*^9}, {3.72033351656979*^9, 3.720333520463787*^9}, {
   3.7203340842696123`*^9, 3.7203340971892853`*^9}, {3.720348987490931*^9, 
   3.720349010711841*^9}, {3.720349244836308*^9, 3.720349253979446*^9}, {
   3.720503107201013*^9, 3.720503180313891*^9}, {3.720503308390954*^9, 
   3.7205033420945883`*^9}, {3.720505394832678*^9, 3.720505399174391*^9}, {
   3.72050545297269*^9, 3.720505559165401*^9}, {3.720505600648261*^9, 
   3.720505610319808*^9}, {3.720505644865181*^9, 3.720505691536974*^9}, 
   3.720505792435629*^9, 3.720505834077351*^9, {3.721631882845504*^9, 
   3.7216318978203497`*^9}, {3.721631985024477*^9, 3.72163199109648*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Arbitrary piecewise constant envelope functions", "Section",
 CellChangeTimes->{{3.721110390798583*^9, 3.7211104688817587`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Function", " ", "definition", " ", 
     RowBox[{"format", ":", " ", 
      RowBox[{"list", " ", "containing", " ", "pairs", " ", "of", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"value", " ", "of", " ", "section"}], ",", " ", 
         RowBox[{"end", " ", "time", " ", "of", " ", "section"}]}], 
        ")"}]}]}]}], ",", " ", 
    RowBox[{"time", " ", "starts", " ", "at", " ", "0"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Time", " ", "the", " ", "drive", " ", "is", " ", "on", " ", "lies", " ", 
     "between", " ", 
     RowBox[{"(", 
      RowBox[{"0", ",", " ", "1"}], ")"}]}], ",", " ", 
    RowBox[{"average", " ", "value", " ", "should", " ", "be", " ", "1"}]}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"pcListToFunction", "[", "pclist_", "]"}], ":=", 
   RowBox[{"Function", "[", 
    RowBox[{"t", ",", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"t", "<", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], "&"}], "/@", 
         "pclist"}], ",", "0"}], "]"}], "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.721110470960313*^9, 3.721110520290901*^9}, {
   3.721110550501232*^9, 3.721110615275423*^9}, {3.721110654200328*^9, 
   3.721110740377912*^9}, {3.721110967532399*^9, 3.7211109690580397`*^9}, {
   3.7211230942108994`*^9, 3.7211230986727*^9}, {3.721123500217346*^9, 
   3.721123505356749*^9}, 3.7211241070133057`*^9, {3.721126204979721*^9, 
   3.721126206922133*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sflist", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "/", "2"}], ",", 
       RowBox[{"1", "/", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"3", "/", "2"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "Infinity"}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7211276048520517`*^9, 3.721127612521183*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"NPCEffectiveTrajectory", "[", 
   RowBox[{
   "pclist_", ",", "tM_", ",", "H1avg_", ",", "\[Psi]0_", ",", "\[Alpha]0_", 
    ",", "approxH_", ",", "jumpOp_", ",", "vals_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"driveList", ",", "evolOps", ",", "jumpOps"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"driveList", "=", "pclist"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"driveList", "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", "1"}], "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{"driveList", "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", "1"}], "]"}], "]"}], "*", "H1avg"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"driveList", "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", "2"}], "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{"driveList", "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", "2"}], "]"}], "]"}], "*", "tM"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"evolOps", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Function", "[", 
         RowBox[{"t", ",", 
          RowBox[{"MatrixExp", "[", 
           RowBox[{
            RowBox[{"-", "I"}], "*", "t", "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"approxH", "/.", "vals"}], "/.", "H1Dsubs"}], "/.", 
              RowBox[{"H1", "\[Rule]", "#"}]}], ")"}]}], "]"}]}], "]"}], 
        "&"}], "/@", 
       RowBox[{"driveList", "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", "1"}], "]"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"jumpOps", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"jumpOp", "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"HA", "\[Rule]", 
            RowBox[{"driveList", "[", 
             RowBox[{"[", 
              RowBox[{"ii", ",", "1"}], "]"}], "]"}]}], ",", 
           RowBox[{"HB", "\[Rule]", 
            RowBox[{"driveList", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"ii", "+", "1"}], ",", "1"}], "]"}], "]"}]}], ",", 
           RowBox[{"\[Alpha]0", "\[Rule]", "\[Alpha]0"}], ",", 
           RowBox[{"\[Alpha]j", "\[Rule]", 
            RowBox[{"driveList", "[", 
             RowBox[{"[", 
              RowBox[{"ii", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"ii", ",", 
          RowBox[{
           RowBox[{"Length", "[", "driveList", "]"}], "-", "1"}]}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"\[Psi]", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{"t", ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Apply", "[", 
            RowBox[{"Dot", ",", 
             RowBox[{"{", "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"ii", ",", 
             RowBox[{"Length", "[", "sflist", "]"}]}], "}"}]}], "]"}], 
         "]"}]}], "]"}]}]}]}], "\[IndentingNewLine]", "]"}], " "}]], "Input",
 CellChangeTimes->{{3.721124535499888*^9, 3.7211245473412123`*^9}, {
   3.721124598744615*^9, 3.7211246015759773`*^9}, {3.7211247585793543`*^9, 
   3.721124778523177*^9}, 3.721124958067183*^9, {3.721124990440796*^9, 
   3.7211249915289993`*^9}, {3.7211251452694473`*^9, 3.721125264088298*^9}, {
   3.721125389125045*^9, 3.721125390548987*^9}, {3.7211256183471937`*^9, 
   3.7211256820393677`*^9}, {3.7211257476697083`*^9, 3.721125796122714*^9}, {
   3.721126047823106*^9, 3.721126091359181*^9}, {3.7211261228427877`*^9, 
   3.721126273141433*^9}, {3.721126550638373*^9, 3.7211265593572607`*^9}, {
   3.7211266715535727`*^9, 3.721126717930818*^9}, 3.721126791821681*^9, {
   3.7211272568328*^9, 3.721127290104702*^9}, {3.721127333849997*^9, 
   3.721127408370816*^9}, {3.721127448422719*^9, 3.721127482941351*^9}, {
   3.721127531263245*^9, 3.721127531990428*^9}, {3.721127630282083*^9, 
   3.7211276348911753`*^9}, {3.721127675028961*^9, 3.721127706683279*^9}, {
   3.721127757456492*^9, 3.721127910328795*^9}, 3.7211280027864857`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plotting helper functions", "Section",
 CellChangeTimes->{{3.72111008111263*^9, 3.7211100853819227`*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Precompute", " ", "the", " ", "static", " ", "bloch", " ", "sphere", " ", 
    "elements", " ", 
    RowBox[{"(", 
     RowBox[{"circumferences", " ", "and", " ", "axes"}], ")"}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"BlochSphereCircles", "=", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"r", "=", "1"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ParametricPlot3D", "[", 
          RowBox[{
           RowBox[{"0.99", "*", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"r", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
              RowBox[{"r", " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}]}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"\[Theta]", ",", "0", ",", 
             RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Thin", ",", "Gray"}], "}"}]}], ",", 
           RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ParametricPlot3D", "[", 
          RowBox[{
           RowBox[{"0.99", "*", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"r", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
              RowBox[{"r", " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Theta]", ",", "0", ",", 
             RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Thin", ",", "Gray"}], "}"}]}], ",", 
           RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ParametricPlot3D", "[", 
          RowBox[{
           RowBox[{"0.99", "*", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"r", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", "0", ",", 
              RowBox[{"r", " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Theta]", ",", "0", ",", 
             RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Thin", ",", "Gray"}], "}"}]}], ",", 
           RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"BlochSphereAxes", "=", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"r", "=", "1"}], "}"}], ",", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{"Graphics3D", "[", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
          "Thin", ",", " ", "Gray", ",", " ", "Dashed", ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1."}], ",", "0.", ",", "0."}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1.", ",", "0.", ",", "0."}], "}"}]}], "}"}], "]"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0.", ",", 
                RowBox[{"-", "1."}], ",", "0."}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0.", ",", "1.", ",", "0."}], "}"}]}], "}"}], "]"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0.", ",", "0.", ",", 
                RowBox[{"-", "1."}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0.", ",", "0.", ",", "1."}], "}"}]}], "}"}], "]"}]}], 
          "\[IndentingNewLine]", "}"}], "]"}], "\[IndentingNewLine]", "}"}]}],
       "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Plot", " ", "trace", " ", "on", " ", "Bloch", " ", "sphere"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PlotBlochTraceFromState", "[", 
      RowBox[{"\[Psi]_", ",", "range_", ",", 
       RowBox[{"opts", " ", ":", 
        RowBox[{"OptionsPattern", "[", 
         RowBox[{"{", "ParametricPlot3D", "}"}], "]"}]}]}], "]"}], ":=", 
     "\[IndentingNewLine]", 
     RowBox[{"ParametricPlot3D", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"BlochCoordinatesFromState", "[", 
        RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"Evaluate", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", "t", "}"}], ",", "range"}], "]"}], "]"}], ",", 
       "\[IndentingNewLine]", "opts", ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Plot", " ", "a", " ", "vector", " ", "from", " ", "the", " ", "center", 
     " ", "of", " ", "the", " ", "Bloch", " ", "sphere", " ", "to", " ", 
     "the", " ", "surface", " ", "for", " ", "a", " ", "given", " ", "state", 
     " ", "\[Psi]"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PlotBlochVectorFromState", "[", 
      RowBox[{"\[Psi]_", ",", 
       RowBox[{"style_List", " ", ":", 
        RowBox[{"{", "}"}]}]}], "]"}], ":=", 
     RowBox[{"PlotBlochVector", "[", 
      RowBox[{
       RowBox[{"BlochCoordinatesFromState", "[", "\[Psi]", "]"}], ",", 
       "style"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Plot", " ", "a", " ", "vector", " ", "from", " ", "the", " ", "center", 
     " ", "of", " ", "the", " ", "Bloch", " ", "sphere", " ", "to", " ", 
     "the", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "y", ",", " ", "z"}], "}"}], " ", "coordinates", 
     " ", "given", " ", "by", " ", "vec"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PlotBlochVector", "[", 
      RowBox[{"vec_", ",", 
       RowBox[{"style_List", " ", ":", " ", 
        RowBox[{"{", "}"}]}]}], "]"}], ":=", "\[IndentingNewLine]", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"Join", "[", "\[IndentingNewLine]", 
        RowBox[{"style", ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0.", ",", "0.", ",", "0."}], "}"}], ",", "vec"}], 
            "}"}], "]"}], "}"}]}], "\[IndentingNewLine]", "]"}], "]"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Plot", " ", "points", " ", "given", " ", "by", " ", "a", " ", "list", 
     " ", "of", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "y", ",", " ", "z"}], "}"}], " ", "tuples", " ", 
     "in", " ", "pts"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PlotBlochPoints", "[", 
      RowBox[{"pts_", ",", 
       RowBox[{"style_List", " ", ":", " ", 
        RowBox[{"{", "}"}]}]}], "]"}], ":=", "\[IndentingNewLine]", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"Join", "[", "\[IndentingNewLine]", 
        RowBox[{"style", ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Point", "[", "pts", "]"}], "}"}]}], "\[IndentingNewLine]", 
        "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Plot", " ", "points", " ", "given", " ", "by", " ", "a", " ", "list", 
     " ", "of", " ", "state", " ", "vectors", " ", "\[Psi]s"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PlotBlochPointsFromStates", "[", 
     RowBox[{"\[Psi]s_", ",", 
      RowBox[{"style_List", " ", ":", " ", 
       RowBox[{"{", "}"}]}]}], "]"}], ":=", 
    RowBox[{"PlotBlochPoints", "[", 
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{"BlochCoordinatesFromState", ",", "\[Psi]s"}], "]"}], ",", 
      "style"}], "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Plot", " ", "BlochAngle", " ", "trace"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PlotBlochAngleTraceFromState", "[", 
      RowBox[{"\[Psi]_", ",", "range_", ",", 
       RowBox[{"opts", " ", ":", 
        RowBox[{"OptionsPattern", "[", 
         RowBox[{"{", "ParametricPlot", "}"}], "]"}]}]}], "]"}], ":=", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"BlochAngleCoordinatesFromState", "[", 
         RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", "t", "}"}], ",", "range"}], "]"}], "]"}], ",", 
        "\[IndentingNewLine]", "opts"}], "\[IndentingNewLine]", "]"}], "/.", 
      RowBox[{
       RowBox[{"Line", "[", "x_", "]"}], "\[RuleDelayed]", 
       RowBox[{"Line", "@", 
        RowBox[{"Split", "[", 
         RowBox[{"x", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Norm", "[", 
             RowBox[{"#", "-", "#2"}], "]"}], "<", "1.5"}], "&"}]}], 
         "]"}]}]}]}]}], 
    RowBox[{"(*", " ", 
     RowBox[{
     "This", " ", "stuff", " ", "is", " ", "necessary", " ", "to", " ", 
      "remove", " ", "discontinuous", " ", "jumps"}], " ", "*)"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Plot", " ", "mercator", " ", "Bloch", " ", "trace"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PlotMercatorBlochTraceFromState", "[", 
      RowBox[{"\[Psi]_", ",", "range_", ",", 
       RowBox[{"opts", " ", ":", 
        RowBox[{"OptionsPattern", "[", 
         RowBox[{"{", "ParametricPlot", "}"}], "]"}]}]}], "]"}], ":=", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"MercatorCoordinatesFromBlochAngle", "[", 
         RowBox[{"BlochAngleCoordinatesFromState", "[", 
          RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", "t", "}"}], ",", "range"}], "]"}], "]"}], ",", 
        "\[IndentingNewLine]", "opts"}], "\[IndentingNewLine]", "]"}], "/.", 
      RowBox[{
       RowBox[{"Line", "[", "x_", "]"}], "\[RuleDelayed]", 
       RowBox[{"Line", "@", 
        RowBox[{"Split", "[", 
         RowBox[{"x", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Norm", "[", 
             RowBox[{"#", "-", "#2"}], "]"}], "<", "1.5"}], "&"}]}], 
         "]"}]}]}]}]}], 
    RowBox[{"(*", " ", 
     RowBox[{
     "This", " ", "stuff", " ", "is", " ", "necessary", " ", "to", " ", 
      "remove", " ", "discontinuous", " ", "jumps"}], " ", "*)"}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.720505899810814*^9, 3.7205059013441477`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plotting code", "Chapter",
 CellChangeTimes->{{3.720349110741601*^9, 3.7203491126040497`*^9}}],

Cell[CellGroupData[{

Cell["3D plots", "Section",
 CellChangeTimes->{{3.7203491161574183`*^9, 3.7203491326688643`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Bloch3DPlotter", ":=", 
    RowBox[{"Hold", "[", "\[IndentingNewLine]", 
     RowBox[{"Show", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Join", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", " ", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"Plot", " ", "the", " ", "trajectory"}], ",", " ", 
            RowBox[{
            "state", " ", "vector", " ", "and", " ", "instantaneous", " ", 
             "rotation", " ", "axis", " ", "of", " ", "the", " ", "qubit", 
             " ", "under", " ", "the", " ", "original", " ", 
             "Hamiltonian"}]}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"PlotBlochTraceFromState", "[", 
            RowBox[{"origTrace", ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"tM", "*", "tMax"}]}], "}"}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"PlotBlochVectorFromState", "[", 
            RowBox[{
             RowBox[{"origTrace", "[", 
              RowBox[{"tM", "*", "tMax"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"Red", ",", " ", 
               RowBox[{"Thickness", "[", "0.015", "]"}]}], "}"}]}], "]"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"PlotBlochVector", "[", 
            RowBox[{
             RowBox[{"RotationAxisFromHamiltonian", "[", 
              RowBox[{"hOrigFunc", "[", 
               RowBox[{
                RowBox[{"tM", "*", "tMax"}], ",", "0.0"}], "]"}], "]"}], ",", 
             
             RowBox[{"{", 
              RowBox[{"Gray", ",", 
               RowBox[{"Thickness", "[", "0.010", "]"}]}], "}"}]}], "]"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"PlotBlochPointsFromStates", "[", 
            RowBox[{
             RowBox[{"Map", "[", 
              RowBox[{"origTrace", ",", "relevantTCoincidence"}], "]"}], ",", 
             
             RowBox[{"{", 
              RowBox[{
               RowBox[{"PointSize", "[", "Large", "]"}], ",", "Red"}], 
              "}"}]}], "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Plot", " ", "the", " ", "trajectory", " ", "of", " ", "the", " ", 
           "qubit", " ", "under", " ", "the", " ", "approximate", " ", 
           "Hamiltonians"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"PlotBlochTraceFromState", "[", 
            RowBox[{
             RowBox[{"approxTraces", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"tM", "*", "tMax"}]}], "}"}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"approxColors", "[", 
               RowBox[{"[", " ", 
                RowBox[{"calculatedOrders", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], " ", "]"}], "]"}]}]}], "]"}],
            ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "numSelectedOrders"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Plot", " ", "the", " ", "points", " ", "where", " ", "the", " ", 
           "approximate", " ", "trajectories", " ", 
           RowBox[{"(", "should", ")"}], " ", "coincide", " ", "with", " ", 
           "the", " ", "original", " ", "trajectory"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"PlotBlochPointsFromStates", "[", 
            RowBox[{
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{"approxTraces", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", "relevantTCoincidence"}],
               "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"PointSize", "[", "Large", "]"}], ",", 
               RowBox[{"approxColors", "[", 
                RowBox[{"[", " ", 
                 RowBox[{"calculatedOrders", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], " ", "]"}], "]"}]}], 
              "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "numSelectedOrders"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"PlotBlochPointsFromStates", "[", 
           RowBox[{"coolStates", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"PointSize", "[", "Large", "]"}], ",", "Cyan"}], 
             "}"}]}], "]"}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"Plot", " ", "the", " ", "t"}], " ", "=", " ", 
            RowBox[{
             RowBox[{"0", " ", "and", " ", "t"}], " ", "=", " ", 
             RowBox[{"t_f", " ", "jump", " ", "displacements"}]}]}], " ", 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"PlotBlochTraceFromState", "[", 
              RowBox[{
               RowBox[{"approx\[Psi]0", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}], ",", 
               RowBox[{"PlotStyle", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"Dashed", ",", " ", 
                  RowBox[{"approxColors", "[", 
                   RowBox[{"[", " ", 
                    RowBox[{"calculatedOrders", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], " ", "]"}], "]"}]}], 
                 "}"}]}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", " ", "numSelectedOrders"}], "}"}]}], "]"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"PlotBlochTraceFromState", "[", 
              RowBox[{
               RowBox[{"Function", "[", 
                RowBox[{"t", ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"finalJumps", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", "t", "]"}], ".", 
                  RowBox[{
                   RowBox[{"approxTraces", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", 
                   RowBox[{"tM", "*", "tMax"}], "]"}]}]}], "]"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}], ",", 
               RowBox[{"PlotStyle", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"Dashed", ",", " ", 
                  RowBox[{"approxColors", "[", 
                   RowBox[{"[", " ", 
                    RowBox[{"calculatedOrders", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], " ", "]"}], "]"}]}], 
                 "}"}]}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", " ", "numSelectedOrders"}], "}"}]}], "]"}], 
           ","}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Add", " ", "static", " ", "Bloch", " ", "sphere", " ", 
           "elements"}], " ", "*)"}], "\[IndentingNewLine]", 
         "BlochSphereCircles", ",", "\[IndentingNewLine]", 
         "BlochSphereAxes"}], "\[IndentingNewLine]", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"500", ",", "500"}], "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"ViewAngle", "->", 
        RowBox[{"Pi", "/", "10"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"Axes", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Boxed", "\[Rule]", "False"}]}], "\[IndentingNewLine]", "]"}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.71965440505723*^9, 3.719654452102209*^9}, {
   3.719654674060545*^9, 3.719654702869274*^9}, {3.719655508107579*^9, 
   3.719655526354762*^9}, {3.719657512358118*^9, 3.7196575140282583`*^9}, {
   3.719657606966461*^9, 3.719657611640386*^9}, {3.719662541770338*^9, 
   3.719662544425715*^9}, {3.719662625109373*^9, 3.719662628605137*^9}, {
   3.719662663367815*^9, 3.719662669335495*^9}, 3.719662704950479*^9, {
   3.7196635194614553`*^9, 3.719663565642974*^9}, {3.719663736795269*^9, 
   3.719663854251069*^9}, {3.719663984969365*^9, 3.7196639870074778`*^9}, {
   3.719664020674241*^9, 3.719664121158648*^9}, {3.7196641711675653`*^9, 
   3.719664189486896*^9}, {3.71966437771943*^9, 3.719664378404018*^9}, {
   3.719665318712253*^9, 3.719665390125635*^9}, {3.719665580709318*^9, 
   3.719665646073825*^9}, 3.719725396498043*^9, {3.7197257200427322`*^9, 
   3.719725785884077*^9}, {3.719725822556342*^9, 3.7197258251010942`*^9}, {
   3.719725989354001*^9, 3.7197260028892193`*^9}, {3.719726193801155*^9, 
   3.719726198344083*^9}, {3.719726277620516*^9, 3.719726283818696*^9}, {
   3.719726354815783*^9, 3.719726378278873*^9}, {3.7197265657339993`*^9, 
   3.719726588676334*^9}, {3.719726672655373*^9, 3.719726705026067*^9}, {
   3.71972795518334*^9, 3.7197280766738787`*^9}, {3.719728147204784*^9, 
   3.719728160898158*^9}, {3.719729227395198*^9, 3.719729279699827*^9}, {
   3.719729613243144*^9, 3.7197297188378067`*^9}, {3.719729785104641*^9, 
   3.7197297916086206`*^9}, {3.719729832297455*^9, 3.719729924459887*^9}, {
   3.719729979097412*^9, 3.71972998131817*^9}, {3.719730030233679*^9, 
   3.719730032904345*^9}, 3.719730159287866*^9, {3.719730351583226*^9, 
   3.719730371607519*^9}, {3.7197305373153563`*^9, 3.719730567858818*^9}, {
   3.719730608124115*^9, 3.719730697896439*^9}, {3.7197308187913733`*^9, 
   3.719731050265031*^9}, {3.719731131151889*^9, 3.719731257267704*^9}, {
   3.7197313143414392`*^9, 3.719731372327129*^9}, {3.7197314547622433`*^9, 
   3.7197314783220367`*^9}, {3.719731524980694*^9, 3.719731593527*^9}, 
   3.7197316336068687`*^9, {3.719731992082862*^9, 3.7197320151148567`*^9}, {
   3.719732748119629*^9, 3.719732851854064*^9}, {3.7197328899051027`*^9, 
   3.7197328948084784`*^9}, {3.7197329327062607`*^9, 3.719732933728594*^9}, {
   3.71973303737566*^9, 3.71973306993294*^9}, {3.719733167347945*^9, 
   3.71973317633293*^9}, {3.7197335847993593`*^9, 3.7197335848066587`*^9}, {
   3.719733768925458*^9, 3.7197339297769823`*^9}, {3.71973397704596*^9, 
   3.7197340738104753`*^9}, {3.719734142221374*^9, 3.719734148600995*^9}, {
   3.719737410434022*^9, 3.7197374196115923`*^9}, {3.7197374707945433`*^9, 
   3.7197374739364157`*^9}, {3.719739622793873*^9, 3.7197397000068483`*^9}, {
   3.7197398319804983`*^9, 3.719739898920965*^9}, {3.719739971782125*^9, 
   3.719740089488901*^9}, {3.719740404220591*^9, 3.719740409874135*^9}, {
   3.7197404902076283`*^9, 3.719740571638661*^9}, {3.7197410313203*^9, 
   3.7197410503182507`*^9}, {3.719741121879806*^9, 3.71974117754482*^9}, {
   3.719741255202168*^9, 3.71974135947784*^9}, {3.7197414046488457`*^9, 
   3.719741470762108*^9}, {3.7197416516644793`*^9, 3.7197417115878963`*^9}, {
   3.719741744193177*^9, 3.719741767017825*^9}, {3.719741806060226*^9, 
   3.7197418150240927`*^9}, {3.719741894073694*^9, 3.719742024722701*^9}, {
   3.719742089576519*^9, 3.71974221270998*^9}, {3.7197422462915382`*^9, 
   3.71974226678841*^9}, {3.719742367841947*^9, 3.7197423861490498`*^9}, {
   3.719742445922613*^9, 3.719742477138301*^9}, {3.719742941971538*^9, 
   3.7197429773772917`*^9}, {3.719743007755834*^9, 3.7197430214095917`*^9}, {
   3.719743074741489*^9, 3.719743099028145*^9}, {3.7197431470330477`*^9, 
   3.719743148430347*^9}, {3.7197432081005373`*^9, 3.719743252056549*^9}, {
   3.7197434238639717`*^9, 3.719743434209897*^9}, {3.719743481769442*^9, 
   3.7197435941957827`*^9}, {3.7197436743197317`*^9, 3.719743707914002*^9}, {
   3.7197437601792727`*^9, 3.719743761463875*^9}, {3.7197438959599743`*^9, 
   3.719743896251837*^9}, {3.719743980824048*^9, 3.719744039519884*^9}, {
   3.71974407663945*^9, 3.719744077959858*^9}, {3.71974412137658*^9, 
   3.7197443108652143`*^9}, {3.7197444202114687`*^9, 
   3.7197444513077803`*^9}, {3.719744481614853*^9, 3.719744679803318*^9}, {
   3.7197447325833883`*^9, 3.7197447331771393`*^9}, {3.719744911692194*^9, 
   3.719744912256269*^9}, {3.7197449638534822`*^9, 3.719744984859655*^9}, {
   3.719745052670991*^9, 3.719745055917173*^9}, {3.719745176627383*^9, 
   3.719745186909519*^9}, {3.719745228208479*^9, 3.719745237732038*^9}, {
   3.719746399671158*^9, 3.719746479871434*^9}, {3.719746545220299*^9, 
   3.719746621029441*^9}, 3.719746747927788*^9, {3.719746799124988*^9, 
   3.7197469339805927`*^9}, {3.719746976946539*^9, 3.71974703642428*^9}, {
   3.719747100670011*^9, 3.7197471020664597`*^9}, {3.7198119359065437`*^9, 
   3.719811953752569*^9}, {3.719812061519149*^9, 3.719812063628517*^9}, 
   3.719813267447775*^9, 3.719832746783979*^9, 3.7198428663838882`*^9, {
   3.719843354205288*^9, 3.719843363712579*^9}, {3.719843444367652*^9, 
   3.719843502247257*^9}, {3.719843537230729*^9, 3.719843545435014*^9}, {
   3.720246413114575*^9, 3.720246414290749*^9}, {3.720246522590025*^9, 
   3.720246523257423*^9}, 3.720268295639347*^9, 3.720349143625721*^9, {
   3.720503221707087*^9, 3.720503251315072*^9}, {3.720503281956786*^9, 
   3.720503293085417*^9}, {3.720504877053884*^9, 3.720504884432884*^9}, {
   3.7205060857987757`*^9, 3.7205061378284187`*^9}, {3.720509189462253*^9, 
   3.720509191525303*^9}, {3.72051122820717*^9, 3.720511231103367*^9}, {
   3.7208687519522552`*^9, 3.720868757989324*^9}, {3.7208700198551207`*^9, 
   3.720870029893828*^9}, {3.720870118547086*^9, 3.720870123364106*^9}, {
   3.7210392637320747`*^9, 3.721039334371645*^9}, {3.7210394084079847`*^9, 
   3.721039420815668*^9}, {3.721040386223958*^9, 3.7210403914233503`*^9}, {
   3.7210493780358353`*^9, 3.7210494387251787`*^9}, {3.7210494737766247`*^9, 
   3.721049474445922*^9}, {3.721049596098652*^9, 3.721049612738986*^9}, 
   3.721632235552032*^9, {3.72163385563221*^9, 3.721633893420753*^9}, {
   3.72163435511415*^9, 3.721634372992669*^9}, {3.721634500977721*^9, 
   3.721634502408278*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cartesian Bloch angle plots", "Section",
 CellChangeTimes->{{3.7203491486514997`*^9, 3.720349156317628*^9}, {
  3.720358276007145*^9, 3.720358277511012*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BlochAnglePlotter", ":=", 
   RowBox[{"Hold", "[", "\[IndentingNewLine]", 
    RowBox[{"Show", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Join", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", " ", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Plot", " ", "the", " ", "trajectory", " ", "and", " ", 
           "stroboscopic", " ", "coincidence", " ", "points", " ", "of", " ", 
           "the", " ", "qubit", " ", "under", " ", "the", " ", "original", 
           " ", "Hamiltonian"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"PlotBlochAngleTraceFromState", "[", 
           RowBox[{
            RowBox[{"XBasisFromZBasis", "@*", "origTrace"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"tM", "*", "tMax"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"PlotStyle", "\[Rule]", "Red"}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Graphics", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"PointSize", "[", "Large", "]"}], ",", "Red", ",", 
             RowBox[{"Point", "[", 
              RowBox[{"BlochAngleCoordinatesFromState", "/@", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"XBasisFromZBasis", "@*", "origTrace"}], ")"}], "/@",
                 "relevantTCoincidence"}]}], "]"}]}], "}"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Graphics", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"PointSize", "[", "Large", "]"}], ",", "Cyan", ",", 
             RowBox[{"Point", "[", 
              RowBox[{"BlochAngleCoordinatesFromState", "/@", 
               RowBox[{"XBasisFromZBasis", "/@", "coolStates"}]}], "]"}]}], 
            "}"}], "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Plot", " ", "the", " ", "trajectory", " ", "of", " ", "the", " ", 
          "qubit", " ", "under", " ", "the", " ", "approximate", " ", 
          "Hamiltonians"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"PlotBlochAngleTraceFromState", "[", 
           RowBox[{
            RowBox[{"XBasisFromZBasis", " ", "@*", 
             RowBox[{"(", 
              RowBox[{"approxTraces", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"tM", "*", "tMax"}]}], "}"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"approxColors", "[", 
              RowBox[{"[", " ", 
               RowBox[{"calculatedOrders", "[", 
                RowBox[{"[", "i", "]"}], "]"}], " ", "]"}], "]"}]}]}], " ", 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "numSelectedOrders"}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Plot", " ", "the", " ", "points", " ", "where", " ", "the", " ", 
          "approximate", " ", "trajectories", " ", 
          RowBox[{"(", "should", ")"}], " ", "coincide", " ", "with", " ", 
          "the", " ", "original", " ", "trajectory"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Graphics", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"PointSize", "[", "Large", "]"}], ",", 
             RowBox[{"approxColors", "[", 
              RowBox[{"[", " ", 
               RowBox[{"calculatedOrders", "[", 
                RowBox[{"[", "i", "]"}], "]"}], " ", "]"}], "]"}], ",", 
             RowBox[{"Point", "[", 
              RowBox[{"BlochAngleCoordinatesFromState", "/@", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"XBasisFromZBasis", "@*", 
                  RowBox[{"(", 
                   RowBox[{"approxTraces", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ")"}]}], ")"}], "/@", 
                "relevantTCoincidence"}]}], "]"}]}], "}"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "numSelectedOrders"}], "}"}]}], "]"}]}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"(*", " ", 
         RowBox[{"Plot", " ", "the", " ", "jump", " ", "displacements"}], " ",
          "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"PlotBlochAngleTraceFromState", "[", 
            RowBox[{
             RowBox[{"XBasisFromZBasis", "@*", 
              RowBox[{"(", 
               RowBox[{"approx\[Psi]0", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ")"}]}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"Dashed", ",", " ", 
                RowBox[{"approxColors", "[", 
                 RowBox[{"[", " ", 
                  RowBox[{"calculatedOrders", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], " ", "]"}], "]"}]}], 
               "}"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", "numSelectedOrders"}], "}"}]}], "]"}], ",",
          "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"PlotBlochAngleTraceFromState", "[", 
            RowBox[{
             RowBox[{"XBasisFromZBasis", "@*", 
              RowBox[{"Function", "[", 
               RowBox[{"t", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"finalJumps", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "[", "t", "]"}], ".", 
                 RowBox[{
                  RowBox[{"approxTraces", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "[", 
                  RowBox[{"tM", "*", "tMax"}], "]"}]}]}], "]"}]}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"Dashed", ",", " ", 
                RowBox[{"approxColors", "[", 
                 RowBox[{"[", " ", 
                  RowBox[{"calculatedOrders", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], " ", "]"}], "]"}]}], 
               "}"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", "numSelectedOrders"}], "}"}]}], "]"}]}], 
        "*)"}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "Pi"}], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"AspectRatio", "\[Rule]", "0.5"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"800", ",", "400"}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<x-basis phase angle \[Phi]\\n\[Phi] = arg(<\[Psi]|->) - arg(<\
\[Psi]|+>)\\n'longitude'\>\"", ",", 
         "\"\<x-basis population angle \[Theta]\\ncos(\[Theta]/2) = \
|<\[Psi]|+>|\\n'latitude'\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<Bloch angle coordinates in the X-basis\>\""}]}], 
     "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.720349177905793*^9, 3.720349179320332*^9}, {
  3.720355569185862*^9, 3.720355572720828*^9}, {3.7205048805844927`*^9, 
  3.720504883185042*^9}, {3.720505694807459*^9, 3.720505742305789*^9}, {
  3.7205061512319*^9, 3.7205062122944803`*^9}, {3.720509164985203*^9, 
  3.7205091682638073`*^9}, {3.720511225983327*^9, 3.7205112377910023`*^9}, {
  3.7210396323685417`*^9, 3.7210396700324583`*^9}, {3.721040393503813*^9, 
  3.7210403969945*^9}, {3.72104983188336*^9, 3.721049857571003*^9}, {
  3.7216322249928617`*^9, 3.721632244827613*^9}, {3.721649666859511*^9, 
  3.7216496952268248`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Mercator plots", "Section",
 CellChangeTimes->{{3.720349180673524*^9, 3.720349185766903*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"BlochMercatorPlotter", ":=", 
    RowBox[{"Hold", "[", "\[IndentingNewLine]", 
     RowBox[{"Show", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Join", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", " ", 
          RowBox[{"(*", " ", 
           RowBox[{
           "Plot", " ", "the", " ", "trajectory", " ", "and", " ", 
            "stroboscopic", " ", "coincidence", " ", "points", " ", "of", " ",
             "the", " ", "qubit", " ", "under", " ", "the", " ", "original", 
            " ", "Hamiltonian"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"PlotMercatorBlochTraceFromState", "[", 
            RowBox[{
             RowBox[{"XBasisFromZBasis", "@*", "origTrace"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"tM", "*", "tMax"}]}], "}"}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Graphics", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"PointSize", "[", "Large", "]"}], ",", "Red", ",", 
              RowBox[{"Point", "[", 
               RowBox[{"MercatorCoordinatesFromBlochAngle", "/@", 
                RowBox[{"BlochAngleCoordinatesFromState", "/@", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"XBasisFromZBasis", "@*", "origTrace"}], ")"}], "/@",
                   "relevantTCoincidence"}]}]}], "]"}]}], "}"}], "]"}]}], 
          "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Plot", " ", "the", " ", "trajectory", " ", "of", " ", "the", " ", 
           "qubit", " ", "under", " ", "the", " ", "approximate", " ", 
           "Hamiltonians"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"PlotMercatorBlochTraceFromState", "[", 
            RowBox[{
             RowBox[{"XBasisFromZBasis", "@*", 
              RowBox[{"(", 
               RowBox[{"approxTraces", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ")"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"tM", "*", "tMax"}]}], "}"}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"approxColors", "[", 
               RowBox[{"[", " ", 
                RowBox[{"calculatedOrders", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], " ", "]"}], "]"}]}]}], "]"}],
            ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "numSelectedOrders"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Plot", " ", "the", " ", "points", " ", "where", " ", "the", " ", 
           "approximate", " ", "trajectories", " ", 
           RowBox[{"(", "should", ")"}], " ", "coincide", " ", "with", " ", 
           "the", " ", "original", " ", "trajectory"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Graphics", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"PointSize", "[", "Large", "]"}], ",", 
              RowBox[{"approxColors", "[", 
               RowBox[{"[", " ", 
                RowBox[{"calculatedOrders", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], " ", "]"}], "]"}], ",", 
              RowBox[{"Point", "[", 
               RowBox[{"MercatorCoordinatesFromBlochAngle", "/@", 
                RowBox[{"BlochAngleCoordinatesFromState", "/@", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"XBasisFromZBasis", "@*", 
                    RowBox[{"(", 
                    RowBox[{"approxTraces", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ")"}]}], ")"}], "/@", 
                  "relevantTCoincidence"}]}]}], "]"}]}], "}"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "numSelectedOrders"}], "}"}]}], "]"}]}], 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"(*", " ", 
          RowBox[{"Plot", " ", "the", " ", "jump", " ", "displacements"}], 
          " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"PlotMercatorBlochTraceFromState", "[", 
             RowBox[{
              RowBox[{"XBasisFromZBasis", " ", "@*", 
               RowBox[{"(", 
                RowBox[{"approx\[Psi]0", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ")"}]}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"Dashed", ",", " ", 
                 RowBox[{"approxColors", "[", 
                  RowBox[{"[", " ", 
                   RowBox[{"calculatedOrders", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], " ", "]"}], "]"}]}], 
                "}"}]}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", " ", "numSelectedOrders"}], "}"}]}], "]"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"PlotMercatorBlochTraceFromState", "[", 
             RowBox[{
              RowBox[{"XBasisFromZBasis", "@*", 
               RowBox[{"Function", "[", 
                RowBox[{"t", ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"finalJumps", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", "t", "]"}], ".", 
                  RowBox[{
                   RowBox[{"approxTraces", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", 
                   RowBox[{"tM", "*", "tMax"}], "]"}]}]}], "]"}]}], ",", " ", 
              
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"Dashed", ",", " ", 
                 RowBox[{"approxColors", "[", 
                  RowBox[{"[", " ", 
                   RowBox[{"calculatedOrders", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], " ", "]"}], "]"}]}], 
                "}"}]}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", " ", "numSelectedOrders"}], "}"}]}], "]"}]}], 
         "*)"}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"AspectRatio", "\[Rule]", "0.5"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"800", ",", "400"}], "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Mercator longitude \[Phi],\\nx-basis phase angle \
\[Phi]\\n\[Phi] = arg(<\[Psi]|->) - arg(<\[Psi]|+>)\\n\>\"", ",", 
          "\"\<Mercator z-intersect z(\[Theta]),\\nx-basis population angle \
\[Theta]\\ncos(\[Theta]/2) = |<\[Psi]|+>|\>\""}], "}"}]}]}], 
      "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.71975408758805*^9, 3.719754110021474*^9}, {
   3.71975452981112*^9, 3.719754606574605*^9}, {3.7197546407783012`*^9, 
   3.7197546472498083`*^9}, {3.719817864184292*^9, 3.719817909721388*^9}, {
   3.7198195019856577`*^9, 3.719819503285576*^9}, {3.719820235918066*^9, 
   3.719820251476564*^9}, {3.7198305755691357`*^9, 3.719830650051548*^9}, {
   3.719830821928141*^9, 3.71983084255162*^9}, {3.719831527367661*^9, 
   3.7198315552291822`*^9}, {3.719831613657439*^9, 3.719831643177147*^9}, {
   3.719831705045723*^9, 3.719831718901246*^9}, {3.7198318221473017`*^9, 
   3.7198318312066927`*^9}, {3.7198320641366243`*^9, 3.719832088334985*^9}, {
   3.719832134179079*^9, 3.719832144872622*^9}, {3.7198323815882187`*^9, 
   3.719832471802874*^9}, {3.7198325240014887`*^9, 3.719832537116781*^9}, 
   3.7198328266032667`*^9, {3.719843174759067*^9, 3.719843244248317*^9}, {
   3.7198437511308002`*^9, 3.719843788827873*^9}, {3.71984384298101*^9, 
   3.719843864113104*^9}, {3.720243702204912*^9, 3.7202437875619783`*^9}, {
   3.720243943503297*^9, 3.720243987025612*^9}, {3.7202464165341167`*^9, 
   3.7202464172056713`*^9}, {3.72024652475279*^9, 3.720246525600177*^9}, {
   3.720349200187489*^9, 3.7203492111628036`*^9}, {3.7203492623724937`*^9, 
   3.720349272891117*^9}, {3.720349762101885*^9, 3.720349764371441*^9}, {
   3.720504887848832*^9, 3.720504889168459*^9}, {3.7205057516031103`*^9, 
   3.720505759989237*^9}, {3.7205062204664783`*^9, 3.7205062598765697`*^9}, {
   3.720509177535778*^9, 3.7205091823988943`*^9}, {3.7205112202573357`*^9, 
   3.720511220601502*^9}, {3.7205112516885767`*^9, 3.720511257207906*^9}, {
   3.72103968003988*^9, 3.721039685345126*^9}, {3.7210403994577436`*^9, 
   3.721040403537895*^9}, {3.7210498742120953`*^9, 3.7210498778702602`*^9}, {
   3.7216322224935923`*^9, 3.7216322485338383`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Interactive trajectory manipulation code", "Section",
 CellChangeTimes->{{3.720349274914537*^9, 3.720349289002267*^9}, {
  3.720349585158554*^9, 3.720349590148341*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"approxColors", "=", 
    RowBox[{"Array", "[", 
     RowBox[{
      RowBox[{"ColorData", "[", "\"\<BlueGreenYellow\>\"", "]"}], ",", 
      RowBox[{"Length", "[", "ApproxHList", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.", ",", "1."}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InteractiveTrajectoryPlotting", "[", "plotExprs_List", "]"}], ":=",
   "\[IndentingNewLine]", 
  RowBox[{"DynamicModule", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "origTrace", ",", "approxTraces", ",", "\[Psi]0", ",", "gateAngle", ",", 
      "tMax", ",", "H1func", ",", "vals", ",", "hOrigFunc", ",", 
      "\[IndentingNewLine]", "tCoincidence", ",", "t0", ",", "tC", ",", 
      "relevantTCoincidence", ",", "selectedH1Profile", ",", 
      "selectedH1Index", ",", "numSelectedOrders", ",", "\[IndentingNewLine]",
       "selectedJmpOperators", ",", "approx\[Psi]0", ",", "jmpFuncs", ",", 
      "calculatedOrders", ",", "\[Alpha]f", ",", " ", "finalJumps", ",", 
      "firstCoincidenceState", ",", "\[IndentingNewLine]", "Omg1", ",", 
      "Omg2", ",", "OmgCool", ",", "coolStates"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Column", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Row", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Text", "[", "\"\<Select driving envelope:  \>\"", "]"}], 
          ",", 
          RowBox[{"PopupMenu", "[", 
           RowBox[{
            RowBox[{"Dynamic", "[", "selectedH1Index", "]"}], ",", 
            "H1pOptions"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Dynamic", "[", 
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"H1pList", "[", 
               RowBox[{"[", "selectedH1Index", "]"}], "]"}], "@", "t"}], ",", 
             
             RowBox[{"{", 
              RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
             RowBox[{"AxesLabel", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"\"\<t/t_max\>\"", ",", "\"\<H1/H1_avg\>\""}], "}"}]}],
              ",", 
             RowBox[{
             "PlotLabel", "\[Rule]", "\"\<driving envelope H1(t)\>\""}], ",", 
             
             RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], "]"}]}], 
         "}"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Define", " ", "initial", " ", "state", " ", "and", " ", "desired", 
          " ", "gate", " ", "angle"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Psi]0", "=", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0"}], "}"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"\[Psi]0", "=", 
           RowBox[{"\[Psi]0", "/", 
            RowBox[{"Norm", "[", "\[Psi]0", "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"gateAngle", " ", "=", " ", "Pi"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"tMax", " ", "=", 
           RowBox[{"2", "*", 
            RowBox[{"gateAngle", "/", "H1avg"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Dynamic", "[", "selectedH1Index", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"selectedH1Profile", "=", 
           RowBox[{"H1pList", "[", 
            RowBox[{"[", "selectedH1Index", "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"H1func", "=", 
           RowBox[{"Function", "[", 
            RowBox[{"t", ",", 
             RowBox[{
              RowBox[{"selectedH1Profile", "[", 
               RowBox[{"t", "/", "tMax"}], "]"}], "*", "H1avg"}]}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"vals", " ", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"ww", "\[Rule]", "wwIn"}], ",", 
             RowBox[{"Delta", "\[Rule]", "DeltaIn"}], ",", 
             RowBox[{"phi", "\[Rule]", "phiIn"}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "Assemble", " ", "Hamiltonians", " ", "based", " ", "on", " ", 
            "the", " ", "given", " ", "parameters", " ", "and", " ", 
            "numerically", " ", "solve", " ", "trajectories", " ", "of", " ", 
            "qubit"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"hOrigFunc", "=", 
           RowBox[{"GetHFunc", "[", 
            RowBox[{"Horig", ",", "H1func", ",", "vals"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"origTrace", "=", 
           RowBox[{"\[Psi]", "/.", 
            RowBox[{"NTrajectory", "[", 
             RowBox[{
             "hOrigFunc", ",", "tMax", ",", "\[Alpha]0", ",", "\[Psi]0"}], 
             "]"}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "Compute", " ", "the", " ", "times", " ", "at", " ", "which", " ", 
            "the", " ", "Magnus", " ", "and", " ", "the", " ", "real", " ", 
            "Hamiltonians", " ", "are", " ", "supposed", " ", "to", " ", 
            "coincide"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"t0", "=", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"\[Alpha]0", "/", "ww"}], ")"}], "/.", "vals"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"tC", "=", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Pi", "/", "ww"}], ")"}], "/.", "vals"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"tCoincidence", "=", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"t0", "+", 
              RowBox[{"Range", "[", 
               RowBox[{"0.0", ",", "tMax", ",", "tC"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{"#", "<", "tMax"}], "&"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"firstCoincidenceState", "=", 
           RowBox[{"origTrace", "[", "t0", "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"calculatedOrders", "=", "selectedOrders"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"numSelectedOrders", "=", 
           RowBox[{"Length", "[", "calculatedOrders", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "calculate", " ", "the", " ", "starting", " ", "positions", " ", 
            "of", " ", "the", " ", "approximate", " ", "trajectories", " ", 
            "using", " ", "the", " ", "jump", " ", "operators"}], " ", "*)"}],
           "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"selectedJmpOperators", "=", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "/.", "pms"}], ")"}], " ", "*", "ones2"}], 
                    "&"}], "/@", 
                   RowBox[{"jmpList", "[", 
                    RowBox[{"[", "selectedH1Index", "]"}], "]"}]}], ")"}], "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"HA", "\[Rule]", "0"}], ",", 
                   RowBox[{"HB", "\[Rule]", "H1"}]}], "}"}]}], "/.", "vals"}],
                "/.", "H1Dsubs"}], "/.", 
              RowBox[{"{", 
               RowBox[{"H1", "\[Rule]", "H1func"}], "}"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"Print", "[", 
               RowBox[{"MatrixForm", "/@", "selectedJmpOperators"}], "]"}], 
              ";"}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"jmpFuncs", "=", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"Function", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"t", ",", "\[Alpha]0", ",", "\[Alpha]j"}], "}"}], 
                   ",", "func"}], "]"}], "/.", 
                 RowBox[{"func", "\[Rule]", "#"}]}], "&"}], ")"}], "/@", 
              "selectedJmpOperators"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"approx\[Psi]0", "=", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Function", "[", 
                RowBox[{"jmpFraction", ",", 
                 RowBox[{
                  RowBox[{"MatrixExp", "[", 
                   RowBox[{"jmpFraction", "*", 
                    RowBox[{
                    RowBox[{"jmpFuncs", "[", 
                    RowBox[{"[", " ", 
                    RowBox[{"calculatedOrders", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], " ", "]"}], "]"}], "[", 
                    RowBox[{"0", ",", "\[Alpha]0", ",", "0"}], "]"}]}], "]"}],
                   ".", "\[Psi]0"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "numSelectedOrders"}], "}"}]}], "]"}]}], 
            ";"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"approxTraces", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"\[Psi]", "/.", 
              RowBox[{"NTrajectory", "[", 
               RowBox[{
                RowBox[{"GetHFunc", "[", 
                 RowBox[{
                  RowBox[{"ApproxHList", "[", 
                   RowBox[{"[", " ", 
                    RowBox[{"calculatedOrders", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], " ", "]"}], "]"}], ",", 
                  "H1func", ",", "vals"}], "]"}], ",", "tMax", ",", 
                "\[Alpha]0", ",", "firstCoincidenceState", ",", "t0"}], 
               "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "numSelectedOrders"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Omg1", "[", "t0_", "]"}], "=", 
           RowBox[{
            RowBox[{"-", "I"}], " ", "tC", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"H1", "[", "t0", "]"}], "/", "4"}], "*", "sx"}], "+", 
              " ", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"H1", "'"}], "[", "t0", "]"}], "/", " ", 
                RowBox[{"(", 
                 RowBox[{"8", " ", "ww"}], ")"}]}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Pi", " ", "sx"}], " ", "+", 
                 RowBox[{
                  RowBox[{"Sin", "[", 
                   RowBox[{"2", "ww", " ", "t0"}], "]"}], "sx"}], "+", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "ww", " ", "t0"}], "]"}], "sy"}]}], 
                ")"}]}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Omg2", "[", "t0_", "]"}], "=", 
           RowBox[{
            RowBox[{"-", "I"}], " ", "tC", " ", 
            RowBox[{"(", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"H1", "[", "t0", "]"}], "^", "2"}], "/", 
                RowBox[{"(", 
                 RowBox[{"32", " ", "ww"}], ")"}]}], "sz", " ", 
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 RowBox[{"2", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "ww", " ", "t0"}], "]"}]}]}], ")"}]}], 
              "\[IndentingNewLine]", "+", 
              RowBox[{
               RowBox[{
                RowBox[{"H1", "'"}], "[", "t0", "]"}], 
               RowBox[{
                RowBox[{"H1", "[", "t0", "]"}], "/", 
                RowBox[{"(", 
                 RowBox[{"32", 
                  SuperscriptBox["ww", "2"]}], ")"}]}], "sz", 
               RowBox[{"(", 
                RowBox[{"Pi", "-", 
                 RowBox[{"2", "Pi", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "ww", " ", "t0"}], "]"}]}], "-", 
                 RowBox[{"3", 
                  RowBox[{"Sin", "[", 
                   RowBox[{"2", "ww", " ", "t0"}], "]"}]}]}], ")"}]}], 
              "\[IndentingNewLine]", "+", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"H1", "'"}], "[", "t0", "]"}], "/", 
                RowBox[{"(", 
                 RowBox[{"384", 
                  SuperscriptBox["ww", "3"]}], ")"}]}], "sz", 
               RowBox[{"(", 
                RowBox[{"3", "+", 
                 RowBox[{"4", 
                  RowBox[{"Pi", "^", "2"}]}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"18", "-", 
                    RowBox[{"6", 
                    RowBox[{"Pi", "^", "2"}]}]}], ")"}], 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", "ww", " ", "t0"}], "]"}]}], "+", 
                 RowBox[{"18", " ", "Pi", " ", 
                  RowBox[{"Sin", "[", 
                   RowBox[{"2", " ", "ww", " ", "t0"}], "]"}]}]}], ")"}]}]}], 
             "\[IndentingNewLine]", ")"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"OmgCool", "[", "t0_", "]"}], "=", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Omg1", "[", "t0", "]"}], "+", 
               RowBox[{"Omg2", "[", "t0", "]"}]}], "/.", "vals"}], "/.", 
             "pms"}], "/.", 
            RowBox[{"{", 
             RowBox[{"H1", "\[Rule]", "H1func"}], "}"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"coolStates", "=", 
           RowBox[{"FoldList", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"MatrixExp", "[", 
                RowBox[{"OmgCool", "[", "#2", "]"}], "]"}], ".", "#1"}], 
              "&"}], ",", "firstCoincidenceState", ",", 
             RowBox[{"tCoincidence", "[", 
              RowBox[{"[", 
               RowBox[{";;", 
                RowBox[{"-", "2"}]}], "]"}], "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"Let", "'"}], "s", " ", "get", " ", 
            RowBox[{
             RowBox[{"plottin", "'"}], "!"}]}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"Dynamic", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"relevantTCoincidence", "=", 
             RowBox[{"Select", "[", 
              RowBox[{"tCoincidence", ",", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"#", "<", 
                  RowBox[{"tM", "*", "tMax"}]}], "&"}], ")"}]}], "]"}]}], ";",
             "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"\[Alpha]f", "=", 
               RowBox[{
                RowBox[{
                 RowBox[{"Mod", "[", 
                  RowBox[{
                   RowBox[{"tM", "*", "tMax"}], ",", "tC"}], "]"}], "*", 
                 "ww"}], "/.", "vals"}]}], ";"}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{
             "minus", " ", "sign", " ", "because", " ", "jumps", " ", "are", 
              " ", "defined", " ", "from", " ", "real", " ", "trajectory", 
              " ", "to", " ", "the", " ", "effective", " ", "trajectory"}], 
             " ", "*)"}], "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"finalJumps", "=", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"Function", "[", 
                  RowBox[{"jmpFraction", ",", 
                   RowBox[{"MatrixExp", "[", 
                    RowBox[{
                    RowBox[{"-", "jmpFraction"}], "*", 
                    RowBox[{
                    RowBox[{"jmpFuncs", "[", 
                    RowBox[{"[", " ", 
                    RowBox[{"calculatedOrders", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], " ", "]"}], "]"}], "[", 
                    RowBox[{
                    RowBox[{"tM", "*", "tMax"}], ",", "\[Alpha]0", ",", 
                    "\[Alpha]f"}], "]"}]}], "]"}]}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "numSelectedOrders"}], "}"}]}], "]"}]}], 
              ";"}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"selectedPlots", "=", 
               RowBox[{"Pick", "[", 
                RowBox[{
                 RowBox[{"Range", "[", 
                  RowBox[{"Length", "[", "plotExprs", "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"selplots", "[", "1", "]"}], ",", 
                    RowBox[{"selplots", "[", "2", "]"}], ",", 
                    RowBox[{"selplots", "[", "3", "]"}], ",", 
                    RowBox[{"selplots", "[", "4", "]"}]}], "}"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ";;", 
                    RowBox[{"Length", "[", "plotExprs", "]"}]}], "]"}], "]"}],
                  ",", "1"}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"Grid", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"ReleaseHold", "[", 
                  RowBox[{"plotExprs", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "selectedPlots"}], "}"}]}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"StringForm", "[", 
                 RowBox[{
                 "\"\<\!\(\*SubscriptBox[\(t\), \(gate\)]\) = ``\>\"", ",", 
                  " ", 
                  RowBox[{"NumberForm", "[", 
                   RowBox[{"tMax", ",", 
                    RowBox[{"{", 
                    RowBox[{"5", ",", "2"}], "}"}]}], "]"}]}], "]"}], "}"}]}],
               "}"}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
           "]"}]}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "tM", ",", " ", "0.01", ",", 
             "\"\<Time t / \!\(\*SubscriptBox[\(t\), \(gate\)]\)\>\""}], 
            "}"}], ",", "0.01", ",", "1.0", ",", 
           RowBox[{"Appearance", "\[Rule]", "\"\<Open\>\""}], ",", 
           RowBox[{"AnimationRate", "\[Rule]", ".03"}], ",", 
           RowBox[{"RefreshRate", "\[Rule]", ".005"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\[Alpha]0", ",", "0.0", ",", "\"\<Offset \[Alpha]0\>\""}], "}"}],
            ",", "0.0", ",", " ", "Pi", ",", 
           RowBox[{"Appearance", "\[Rule]", "\"\<Open\>\""}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "H1avg", ",", " ", "0.2", ",", 
             "\"\<Average drive strength H1_avg\>\""}], "}"}], ",", "0.01", 
           ",", "2.0", ",", 
           RowBox[{"Appearance", "\[Rule]", "\"\<Open\>\""}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "upToOrder", ",", "1", ",", 
               "\"\<Include Magnus expansion up to order\>\""}], "}"}], ",", 
             RowBox[{"-", "1"}], ",", 
             RowBox[{
              RowBox[{"Length", "[", "ApproxHList", "]"}], "-", "1"}], ",", 
             "1", ",", 
             RowBox[{"Appearance", "\[Rule]", "\"\<Open\>\""}]}], "}"}], 
           ","}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"selectedOrders", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "2"}], "}"}], ",", 
             "\"\<Show Magnus orders\>\""}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"#", "\[Rule]", 
               RowBox[{"Graphics", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Text", "[", 
                    RowBox[{"#", "-", "1"}], "]"}], ",", 
                   RowBox[{"EdgeForm", "[", "Thin", "]"}], ",", 
                   RowBox[{"approxColors", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], ",", 
                   RowBox[{"Rectangle", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "0.5"}]}], "}"}], "]"}]}], "}"}], ",", 
                 RowBox[{"ImageSize", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"30", ",", "12"}], "}"}]}]}], "]"}]}], ")"}], 
             "&"}], "/@", 
            RowBox[{"Range", "[", 
             RowBox[{"1", ",", 
              RowBox[{"Length", "[", "ApproxHList", "]"}]}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"ControlType", "\[Rule]", "CheckboxBar"}]}], 
          "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "wwIn", ",", "1.0", ",", "\"\<Drive frequency \[Omega]\>\""}], 
            "}"}], ",", "0.01", ",", "2.0"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "DeltaIn", ",", "0.0", ",", 
             "\"\<Qubit detuning \[CapitalDelta]\>\""}], "}"}], ",", 
           RowBox[{"-", "1.0"}], ",", "1.0"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "phiIn", ",", "0.0", ",", "\"\<Rotation axis angle \[Phi]\>\""}], 
            "}"}], ",", 
           RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"selectedPlots", ",", 
             RowBox[{"Pick", "[", 
              RowBox[{
               RowBox[{"Range", "[", 
                RowBox[{"Length", "[", "plotExprs", "]"}], "]"}], ",", 
               RowBox[{"plotExprs", "[", 
                RowBox[{"[", 
                 RowBox[{";;", ",", "3"}], "]"}], "]"}], ",", "1"}], "]"}], 
             ",", "\"\<Visualizations\>\""}], "}"}], ",", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"i", "\[Rule]", 
              RowBox[{"plotExprs", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"Length", "[", "plotExprs", "]"}]}], "}"}]}], "]"}], 
           ",", 
           RowBox[{"ControlType", "\[Rule]", "CheckboxBar"}]}], "}"}]}], 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Sequence", "@@", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"selplots", "[", "i", "]"}], ",", 
                 RowBox[{"plotExprs", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "3"}], "]"}], "]"}], ",", 
                 RowBox[{"plotExprs", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"Length", "[", "plotExprs", "]"}]}], "}"}]}], "]"}]}], 
          "]"}], "*)"}], "\[IndentingNewLine]", "]"}]}], "}"}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.720349299127124*^9, 3.720349338149681*^9}, {
   3.720349478941538*^9, 3.7203495598621273`*^9}, {3.720349817696536*^9, 
   3.7203499678848886`*^9}, {3.720350043493881*^9, 3.720350060925932*^9}, {
   3.7203501344568367`*^9, 3.720350138578557*^9}, {3.7203502617824078`*^9, 
   3.72035034671142*^9}, {3.7203545357709427`*^9, 3.7203545764962263`*^9}, {
   3.720354836996895*^9, 3.720355097484405*^9}, 3.720355260675953*^9, {
   3.7203553217548532`*^9, 3.720355391386819*^9}, {3.720355431421301*^9, 
   3.7203555195771217`*^9}, {3.720355676095797*^9, 3.7203557106301613`*^9}, {
   3.7203558735766077`*^9, 3.720355875562792*^9}, {3.720355909045388*^9, 
   3.720355936774487*^9}, {3.720355973648233*^9, 3.720355976247266*^9}, {
   3.720356580133671*^9, 3.720356685788978*^9}, {3.720356758993224*^9, 
   3.720356778205873*^9}, {3.720356820963797*^9, 3.720356824347335*^9}, {
   3.720356862222742*^9, 3.72035695355239*^9}, {3.720357074386897*^9, 
   3.720357128171701*^9}, {3.720357196568652*^9, 3.7203572437036448`*^9}, {
   3.72035767462002*^9, 3.720357676933795*^9}, {3.7204167171578503`*^9, 
   3.7204168090083113`*^9}, {3.720416863690905*^9, 3.720416970664596*^9}, {
   3.720417087468534*^9, 3.720417280077005*^9}, {3.7204173409015503`*^9, 
   3.7204174045789757`*^9}, {3.720417876164535*^9, 3.720417881689611*^9}, {
   3.7204331855001373`*^9, 3.720433197760211*^9}, {3.7204333954557858`*^9, 
   3.720433396014113*^9}, {3.720438271155867*^9, 3.720438286607758*^9}, {
   3.720438365375224*^9, 3.7204383956050987`*^9}, {3.720439038000201*^9, 
   3.720439041807666*^9}, {3.7204390911541023`*^9, 3.720439111619898*^9}, {
   3.720439245517983*^9, 3.720439300383903*^9}, {3.7204393548640747`*^9, 
   3.720439362766941*^9}, {3.7204396219577093`*^9, 3.720439626845045*^9}, 
   3.720439788131686*^9, {3.720439821666958*^9, 3.7204398384104967`*^9}, {
   3.720440043883354*^9, 3.720440052023467*^9}, {3.720440092882688*^9, 
   3.720440117236165*^9}, {3.7204401499661837`*^9, 3.720440150867346*^9}, {
   3.720440191472412*^9, 3.720440246637135*^9}, {3.720440286790915*^9, 
   3.720440290239402*^9}, 3.7204403300419683`*^9, {3.7204403715737877`*^9, 
   3.720440384044261*^9}, {3.720440425212141*^9, 3.720440425795039*^9}, {
   3.7204406417152042`*^9, 3.720440643665909*^9}, {3.720440723046317*^9, 
   3.720440809702422*^9}, {3.7204409554437923`*^9, 3.7204409880526*^9}, {
   3.720441035955605*^9, 3.720441044230165*^9}, 3.72044109572644*^9, {
   3.72044128697493*^9, 3.720441287421446*^9}, {3.720441911426277*^9, 
   3.720441928753602*^9}, 3.7204421078645763`*^9, {3.7205020618102417`*^9, 
   3.720502061999702*^9}, {3.720503823520789*^9, 3.720503828270088*^9}, {
   3.7205043201587343`*^9, 3.720504522123054*^9}, {3.72050455324612*^9, 
   3.720504595734074*^9}, {3.720504633274888*^9, 3.7205046661842833`*^9}, {
   3.72050476156581*^9, 3.720504860553863*^9}, {3.720504919673787*^9, 
   3.720504920080515*^9}, {3.7205060010845947`*^9, 3.720506065348461*^9}, 
   3.720506307741461*^9, {3.720510979556518*^9, 3.720511100781433*^9}, {
   3.720511180273054*^9, 3.720511208352579*^9}, {3.720511702905122*^9, 
   3.72051170472011*^9}, {3.720516432362967*^9, 3.720516485451816*^9}, {
   3.720516857019567*^9, 3.7205168574962482`*^9}, {3.720517980628001*^9, 
   3.720518030948935*^9}, {3.720876178967882*^9, 3.7208761800477753`*^9}, {
   3.721035834766047*^9, 3.7210358543486633`*^9}, {3.721035885414723*^9, 
   3.721035893848558*^9}, {3.7210364193223057`*^9, 3.721036444282015*^9}, {
   3.721036729187065*^9, 3.721036772370666*^9}, {3.721038667627315*^9, 
   3.721038669329207*^9}, {3.72103874183683*^9, 3.721038744443962*^9}, {
   3.7210387991895027`*^9, 3.721038858583577*^9}, {3.72104033584103*^9, 
   3.721040380938089*^9}, {3.721041909642344*^9, 3.7210419587547407`*^9}, {
   3.721041993494297*^9, 3.721042033749297*^9}, {3.721042092328164*^9, 
   3.721042106607692*^9}, {3.721042247518446*^9, 3.7210422615970383`*^9}, {
   3.7210423454407187`*^9, 3.7210423488959427`*^9}, {3.721048778755556*^9, 
   3.721048918885989*^9}, {3.721049007667337*^9, 3.7210491646157217`*^9}, {
   3.721049259754127*^9, 3.721049281785633*^9}, {3.721049530031056*^9, 
   3.721049548364707*^9}, 3.721049664122471*^9, {3.72105355714032*^9, 
   3.7210535583094673`*^9}, {3.7211238771834993`*^9, 3.721123911999345*^9}, {
   3.7211239639826603`*^9, 3.721123965636301*^9}, {3.721630868658037*^9, 
   3.7216308691136827`*^9}, {3.721631192299694*^9, 3.721631236419269*^9}, {
   3.7216312742107983`*^9, 3.72163128267703*^9}, {3.721631555378398*^9, 
   3.721631559382001*^9}, {3.721631621105604*^9, 3.721631668839635*^9}, {
   3.721632055416669*^9, 3.7216320912956467`*^9}, {3.7216321776177053`*^9, 
   3.7216321977237873`*^9}, {3.721633206067045*^9, 3.721633240457958*^9}, {
   3.721633276586855*^9, 3.721633545156734*^9}, {3.721633635368648*^9, 
   3.7216337104843273`*^9}, {3.721633745749597*^9, 3.72163376594*^9}, {
   3.721633922970571*^9, 3.721633960080882*^9}, {3.721634017292276*^9, 
   3.7216340277752113`*^9}, {3.721634270741811*^9, 3.721634273084779*^9}, {
   3.721634304969249*^9, 3.721634305548243*^9}, {3.721634423731537*^9, 
   3.721634440275836*^9}, {3.7216345698789787`*^9, 3.7216345720452137`*^9}, {
   3.721634732396641*^9, 3.721634750202703*^9}, {3.7216348728001633`*^9, 
   3.721634875609084*^9}, {3.7216349625307837`*^9, 3.721634963235643*^9}, {
   3.72164390160494*^9, 3.721643904668301*^9}, {3.7216500161942577`*^9, 
   3.7216500424898357`*^9}, {3.721712142609991*^9, 3.721712183531423*^9}, {
   3.722080187108448*^9, 3.722080220021983*^9}, {3.722080267593464*^9, 
   3.722080414867159*^9}, {3.722080985131647*^9, 3.7220811514838037`*^9}, {
   3.722081327197687*^9, 3.722081340451602*^9}, {3.722081426176173*^9, 
   3.722081426653778*^9}, {3.722082034332152*^9, 3.722082035158546*^9}, {
   3.7220820892143993`*^9, 3.722082089796918*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["The final plot!", "Section",
 CellChangeTimes->{{3.720349571021181*^9, 3.7203495810279293`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InteractiveTrajectoryPlotting", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Bloch3DPlotter", ",", "\"\<3D\>\"", ",", "1"}], "}"}], ",", " ",
     "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
     "BlochAnglePlotter", ",", "\"\<Cartesian Bloch angle\>\"", ",", "0"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"BlochMercatorPlotter", ",", "\"\<Mercator\>\"", ",", "0"}], 
     "}"}]}], "\[IndentingNewLine]", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7203495969029007`*^9, 3.720349646558012*^9}, {
   3.7203553974281397`*^9, 3.720355417289392*^9}, {3.720357054369513*^9, 
   3.7203570667768917`*^9}, {3.720357149726101*^9, 3.720357154276394*^9}, {
   3.720357505089733*^9, 3.72035753003902*^9}, {3.720357679173058*^9, 
   3.72035768248389*^9}, {3.72035826940269*^9, 3.720358270887439*^9}, {
   3.7204167455022297`*^9, 3.72041675968716*^9}, 3.7204400971983337`*^9, {
   3.720504530316079*^9, 3.720504534626072*^9}, {3.720505763220057*^9, 
   3.720505766040083*^9}, {3.720516467328878*^9, 3.720516467773799*^9}}],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`origTrace$$ = 
  InterpolatingFunction[{{0., 46.19989196455578}}, {
   5, 3, 1, {387}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, CompressedData["
1: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
   
   "], {{{1., 0.}, {0., 
    0.}}, {{Complex[0.9999999999999996, 6.536534915813449*^-35], 
     Complex[-2.7438403226869175`*^-11, -2.0696239678775254`*^-8]}, {
     Complex[-3.2308479469274776`*^-13, 4.930380657631324*^-32], 
     Complex[-2.0696251804417895`*^-8, -0.000015610769484467272`]}}, {{
     Complex[0.999999999999997, -1.1357415429217599`*^-18], 
     Complex[-1.3719163031603474`*^-10, -6.208850077516742*^-8]}, {
     Complex[-1.938499682206841*^-12, -8.566676698602085*^-16], 
     Complex[-8.27847162024528*^-8, -0.00003122137433880448]}}, {{Complex[
     0.999999999999979, -2.7257453676764823`*^-17], 
     Complex[-6.859515927014321*^-10, -1.8626353799042154`*^-7]}, {
     Complex[-1.1630789118008135`*^-11, -1.8846429752191245`*^-14], 
     Complex[-3.3113420859086085`*^-7, -0.00006244143164814231]}}, {{Complex[
     0.9999999999999147, -1.7830592063667973`*^-16], 
     Complex[-2.1127003336979477`*^-9, -3.932161131846062*^-7]}, {
     Complex[-3.6829744947458255`*^-11, -9.508647957295537*^-14], 
     Complex[-7.450345087047698*^-7, -0.00009365885496027402]}}, {{Complex[
     0.9999999999997528, -6.995777765154444*^-16], 
     Complex[-4.856370513699276*^-9, -6.829374963972845*^-7]}, {
     Complex[-8.528642674482757*^-11, -2.98098703202498*^-13], 
     Complex[-1.3244623364314072`*^-6, -0.00012487232743091156`]}}, {{Complex[
     0.9999999999607045, -4.918630903159492*^-13], 
     Complex[-1.989575323313805*^-7, -8.12698512945852*^-6]}, {
     Complex[-3.55065643397017*^-9, -4.4901364779492235`*^-11], 
     Complex[-0.000016210978321185032`, -0.00043650026190968295`]}}, {{
     Complex[0.9999999997012676, -5.4848158540445364`*^-12], 
     Complex[-1.0079875011615093`*^-6, -0.00002381206378204047]}, {
     Complex[-1.7818589913901027`*^-8, -3.801478496439008*^-10], 
     Complex[-0.00004755558820248297, -0.0007462878745941942]}}, {{Complex[
     0.9999999988365583, -2.8915768778072197`*^-11], 
     Complex[-2.864377435649146*^-6, -0.00004767244723495929]}, {
     Complex[-5.0468387528945275`*^-8, -1.521564948159015*^-9], 
     Complex[-0.00009518189620868194, -0.0010529300152341966`]}}, {{Complex[
     0.9999999967810788, -1.0188588559549411`*^-10], 
     Complex[-6.196487771387489*^-6, -0.00007960759194121376]}, {
     Complex[-1.0886327251824018`*^-7, -4.246317773017596*^-9], 
     Complex[-0.00015882157550630035`, -0.0013551362826662305`]}}, {{Complex[
     0.9999999847746387, -7.112345965352358*^-10], 
     Complex[-0.000020007199077237588`, -0.0001732123810057565]}, {
     Complex[-3.489175685341895*^-7, -2.0191898418448782`*^-8], 
     Complex[-0.00034465062748126, -0.0019745821139839363`]}}, {{Complex[
     0.9999999537740505, -2.8453013700635368`*^-9], 
     Complex[-0.000046110204892572605`, -0.0003006056029882351]}, {
     Complex[-7.960881230189782*^-7, -6.120669540857424*^-8], 
     Complex[-0.0005958150280033538, -0.0025568882463989835`]}}, {{Complex[
     0.9999998906498612, -8.373221354611858*^-9], 
     Complex[-0.00008799925231592985, -0.00045938481106288056`]}, {
     Complex[-1.4997857399515997`*^-6, -1.4413162186999216`*^-7], 
     Complex[-0.0009059029622404417, -0.0030912358382481427`]}}, {{Complex[
     0.999999779963472, -2.0180961584173095`*^-8], 
     Complex[-0.00014876582647890138`, -0.0006465820338072556]}, {
     Complex[-2.4953652369835*^-6, -2.884004828285878*^-7], 
     Complex[-0.0012669242649084598`, -0.003567822064657579]}}, {{Complex[
     0.9999996047181297, -4.2287905399379986`*^-8], 
     Complex[-0.0002310111054256584, -0.0008587079583998203]}, {
     Complex[-3.8016702674505023`*^-6, -5.146013229289691*^-7], 
     Complex[-0.0016694624661385367`, -0.003978074664285974]}}, {{Complex[
     0.9999992216681644, -9.991638048886346*^-8], 
     Complex[-0.0003844812444493038, -0.0011870630473830577`]}, {
     Complex[-6.12760999317215*^-6, -1.0016843362704496`*^-6], 
     Complex[-0.0022769029291227257`, -0.004424515331651785]}}, {{Complex[
     0.9999986357356757, -2.0466434741176754`*^-7], 
     Complex[-0.0005865847208907945, -0.0015442176253509946`]}, {
     Complex[-8.990085164209134*^-6, -1.7305347189875533`*^-6], 
     Complex[-0.0029119326313216424`, -0.004715641912164412]}}, {{Complex[
     0.9999978099592802, -3.766155424255461*^-7], 
     Complex[-0.0008381320545192656, -0.0019177483153386566`]}, {
     Complex[-0.000012256868753540482`, -2.7291776979896936`*^-6], 
     Complex[-0.0035401670690796035`, -0.004844073285635259]}}, {{Complex[
     0.9999967201207913, -6.37049437715666*^-7], 
     Complex[-0.0011372091453539495`, -0.0022949131214699665`]}, {
     Complex[-0.000015729287125981504`, -3.999087672522588*^-6], 
     Complex[-0.004125840246940459, -0.0048094586342757265`]}}, {{Complex[
     0.9999953597687564, -1.006076628298549*^-6], 
     Complex[-0.0014791012301018562`, -0.0026632278348576797`]}, {
     Complex[-0.00001915364128059712, -5.507684369538244*^-6], 
     Complex[-0.004633169546083526, -0.004618688617611906]}}, {{Complex[
     0.9999937438340784, -1.4997517117012369`*^-6], 
     Complex[-0.0018563493541232314`, -0.003011027081090359]}, {
     Complex[-0.000022238217901885517`, -7.182655018695747*^-6], 
     Complex[-0.005027746422416687, -0.004285851250006212]}}, {{Complex[
     0.9999914108428603, -2.309895774011497*^-6], 
     Complex[-0.0023651660146571875`, -0.0034035431988550194`]}, {
     Complex[-0.000025160845818530507`, -9.343361038329213*^-6], 
     Complex[-0.005315453087644026, -0.00369869820757313]}}, {{Complex[
     0.9999888657908994, -3.3228261788570077`*^-6], 
     Complex[-0.002888757126498401, -0.003731392373945674]}, {
     Complex[-0.000026479047597451244`, -0.000011259235825479228`], 
     Complex[-0.005321625853027879, -0.0029763234846155685`]}}, {{Complex[
     0.9999862898865369, -4.494882816447918*^-6], 
     Complex[-0.0033974757836543377`, -0.003984608172726053]}, {
     Complex[-0.00002572701181247701, -0.000012516413931653368`], 
     Complex[-0.0050065125013582824`, -0.0021876926088816922`]}}, {{Complex[
     0.9999839006745429, -5.738581382072702*^-6], 
     Complex[-0.0038585688439711574`, -0.004160495891315231]}, {
     Complex[-0.00002264734962918152, -0.000012639533587295451`], 
     Complex[-0.004347160606211177, -0.0014116331725009725`]}}, {{Complex[
     0.9999819270907537, -6.918606210823515*^-6], 
     Complex[-0.004237951720316284, -0.004264404867019681]}, {
     Complex[-0.000017278561835662456`, -0.000011136068488362545`], 
     Complex[-0.0033396357962953704`, -0.0007328003191561588]}}, {{Complex[
     0.9999805767214891, -7.852830994380499*^-6], 
     Complex[-0.004502143156127436, -0.004310082113799256]}, {
     Complex[-0.000010028093936530364`, -7.553666031985582*^-6], 
     Complex[-0.0020002882339855707`, -0.000237177814837234]}}, {{Complex[
     0.9999799969887648, -8.31947788498659*^-6], 
     Complex[-0.004620271263486819, -0.004319571190036149]}, {
     Complex[-1.722641876092903*^-6, -1.5469868761712398`*^-6], 
     Complex[-0.00036597630345849245`, -7.335160960893519*^-6]}}, {{Complex[
     0.9999803587866297, -7.928593945308664*^-6], 
     Complex[-0.00453586998882737, -0.004325282713697134]}, {Complex[
     7.699943908066016*^-6, 8.898001354011523*^-6], Complex[
     0.001868806792197618, -0.00017962814735389656`]}}, {{Complex[
     0.9999816599863849, -6.124298926097422*^-6], 
     Complex[-0.004179154479493808, -0.004383434723422117]}, {Complex[
     0.000013956507232999885`, 0.000022770625073803468`], Complex[
     0.004311274907784281, -0.0009265273203135199]}}, {{Complex[
     0.9999833344481983, -2.549863862530339*^-6], 
     Complex[-0.003534665319165654, -0.004564768230912418]}, {Complex[
     0.000013506570102563006`, 0.0000392596720800794], Complex[
     0.0068089390743081915`, -0.0023136061613279273`]}}, {{Complex[
     0.9999843769217184, 3.0161357144284496`*^-6], 
     Complex[-0.0026057714516804333`, -0.0049452989500509015`]}, {Complex[
     2.3618829715865393`*^-6, 0.00005682861755100168], Complex[
     0.00919108719158373, -0.004365328639480606]}}, {{Complex[
     0.9999833100589067, 0.00001057306457891779], 
     Complex[-0.0014161486936625607`, -0.005601258459439913]}, {
     Complex[-0.000023574360290615432`, 0.00007318116720061647], Complex[
     0.011279893692578606`, -0.007060413313859463]}}, {{Complex[
     0.9999781953092374, 0.000019812007302704353`], 
     Complex[-9.902375634148087*^-6, -0.006603667386603659]}, {
     Complex[-0.0000680925152258449, 0.00008530741629566744], Complex[
     0.012902620146253357`, -0.01033018517881632]}}, {{Complex[
     0.999966694772997, 0.00003004015049544321], Complex[
     0.0015497474221089279`, -0.008012903883728275]}, {
     Complex[-0.00013421767560375627`, 0.00008962158503673671], Complex[
     0.013904112517099514`, -0.01406015251098602]}}, {{Complex[
     0.9999461868142603, 0.000040126623606551524`], Complex[
     0.0031832046619605114`, -0.009873644123753222]}, {
     Complex[-0.00022374754129423472`, 0.00008219437656372785], Complex[
     0.014158754555774951`, -0.01809483780902757]}}, {{Complex[
     0.9999077353419237, 0.000049491160935228805`], Complex[
     0.005039992147941716, -0.012614122595870605`]}, {
     Complex[-0.00035629993784472215`, 0.000053868657585423336`], Complex[
     0.013414629430433752`, -0.02288346007751457]}}, {{Complex[
     0.9998496106036222, 0.00005336113955582039], Complex[
     0.00671986937045428, -0.015987354404139748`]}, {
     Complex[-0.0005170985990042028, -7.661652483128081*^-7], Complex[
     0.01151282480385861, -0.02750024698162756]}}, {{Complex[
     0.9997684544447203, 0.00004793775106340426], Complex[
     0.008069994235432079, -0.019947649544032168`]}, {
     Complex[-0.0006992120421615378, -0.00008555854074705673], Complex[
     0.00849989359359642, -0.03160573631506826]}}, {{Complex[
     0.9996620938267998, 0.00002906310415672641], Complex[
     0.008950448268590597, -0.024404604784487464`]}, {
     Complex[-0.0008919001956704325, -0.00020188242572850748`], Complex[
     0.004522302280240335, -0.03487571542103341]}}, {{Complex[
     0.9995300197034118, -7.392730252398401*^-6], Complex[
     0.009247322059601725, -0.02922711658841233]}, {
     Complex[-0.001081151718491589, -0.00034782499859890604`], 
     Complex[-0.00017913728726097938`, -0.03703059669524544]}}, {{Complex[
     0.9993737608082585, -0.0000650494540707348], Complex[
     0.008884482585062876, -0.03425121125512121]}, {
     Complex[-0.00125071957325164, -0.0005175960527948457], 
     Complex[-0.005283400803728505, -0.03786268832340518]}}, {{Complex[
     0.9991970875892958, -0.00014647661642867456`], Complex[
     0.007832915683395041, -0.039291242265894415`]}, {
     Complex[-0.001383611592933352, -0.0007012736455503561], 
     Complex[-0.010411164232856202`, -0.037258881136372136`]}}, {{Complex[
     0.9990059917834014, -0.00025264753337908455`], Complex[
     0.006116697393855914, -0.04415369087958928]}, {
     Complex[-0.0014639333877732106`, -0.0008849798245309025], 
     Complex[-0.015153002404242803`, -0.03521655692546331]}}, {{Complex[
     0.9988084044411506, -0.0003824489940427108], Complex[
     0.003814887591512582, -0.04865254262277307]}, {
     Complex[-0.0014789259785435822`, -0.0010515451401650945`], 
     Complex[-0.019101770686799815`, -0.03185101043355095]}}, {{Complex[
     0.9986136394242695, -0.000532313485340307], Complex[
     0.0010589533009854664`, -0.0526250261494053]}, {
     Complex[-0.0014209969446279315`, -0.0011816738203036076`], 
     Complex[-0.021886616211366266`, -0.027393332029617995`]}}, {{Complex[
     0.9984315782721688, -0.0006960386750234226], 
     Complex[-0.0019743104970294414`, -0.055946410707100394`]}, {
     Complex[-0.0012895176668572131`, -0.0012555667688854697`], 
     Complex[-0.02320581843865764, -0.022178469182476526`]}}, {{Complex[
     0.9982716432979218, -0.0008648493185932775], 
     Complex[-0.005074016607031588, -0.05854257559288822]}, {
     Complex[-0.0010921550905280608`, -0.0012549022021927532`], 
     Complex[-0.022855644993321312`, -0.016624007807616203`]}}, {{Complex[
     0.9981416356555703, -0.0010277396763704995`], 
     Complex[-0.008009868081137897, -0.060399191707607505`]}, {
     Complex[-0.000845526947317205, -0.0011650197763287905`], 
     Complex[-0.020752635405712615`, -0.011201018131922128`]}}, {{Complex[
     0.9980465405861444, -0.0011721108017117635`], 
     Complex[-0.01054925943765853, -0.061566584251339714`]}, {
     Complex[-0.0005750147245892879, -0.000977109686688533], 
     Complex[-0.016947178266348378`, -0.006399023114965153]}}, {{Complex[
     0.9979874199091796, -0.0012846883662428908`], 
     Complex[-0.012475524362903986`, -0.06215966034094536]}, {
     Complex[-0.0003136364387076792, -0.0006901791486609555], 
     Complex[-0.011626890993368583`, -0.002687707629432808]}}, {{Complex[
     0.9979605193815563, -0.0013526753931080743`], 
     Complex[-0.013605909334932383`, -0.06235266191353394]}, {
     Complex[-0.00009996658653677439, -0.00031255951754579324`], 
     Complex[-0.005109093696815853, -0.0004783444447078408]}}, {{Complex[
     0.9979567138927544, -0.0013650632614454893`], 
     Complex[-0.013807814722527708`, -0.06236891336187466]}, {Complex[
     0.000024813424303196366`, 0.00013726889878948196`], Complex[
     0.0021774739345153974`, -0.00008803767307355866]}}, {{Complex[
     0.997961395738162, -0.0013139967895386259`], 
     Complex[-0.01301192294505859, -0.06246614277863325]}, {Complex[
     0.000020552983490829943`, 0.0006307194486802044], Complex[
     0.009720679293008754, -0.0017097647529709542`]}}, {{Complex[
     0.9979548807376939, -0.0011960682704526622`], 
     Complex[-0.011221023673009005`, -0.06291833315420758]}, {
     Complex[-0.00014781420153189316`, 0.0011301334438975196`], Complex[
     0.016960948660837125`, -0.0053908425414584595`]}}, {{Complex[
     0.9979133653330774, -0.0010134039094883516`], 
     Complex[-0.008513636723188776, -0.06399537533047588]}, {
     Complex[-0.0005061474845821667, 0.0015908497979523224`], Complex[
     0.023332640543942205`, -0.011021876731071094`]}}, {{Complex[
     0.9978104178178693, -0.0007744065155882684], 
     Complex[-0.005041904738731125, -0.06594202220085477]}, {
     Complex[-0.0010673032986476157`, 0.001964258464713678], Complex[
     0.028307822023144556`, -0.018337515077002497`]}}, {{Complex[
     0.9976189324381364, -0.0004940320094871864], 
     Complex[-0.0010236543978260004`, -0.06895776366406094]}, {
     Complex[-0.0018280777829289717`, 0.0022016836594805247`], Complex[
     0.03143912439945525, -0.026929462420777324`]}}, {{Complex[
     0.9973134210188582, -0.0001935047370706009], Complex[
     0.003271023241665681, -0.0731792413104465]}, {
     Complex[-0.0027672781061001237`, 0.0022588418248319624`], Complex[
     0.03239828619957629, -0.036271285339311975`]}}, {{Complex[
     0.9968724683188369, 0.00010058313257652027`], Complex[
     0.007537878411367591, -0.07866669577471402]}, {
     Complex[-0.003845250131649288, 0.0021005296557430903`], Complex[
     0.03100717510782359, -0.04575359824552071]}}, {{Complex[
     0.996281139888149, 0.0003577918995727684], Complex[
     0.011460096730270528`, -0.08539569172346244]}, {
     Complex[-0.0050050881915807794`, 0.001705129535149802], Complex[
     0.02725851645621251, -0.05472734694797964]}}, {{Complex[
     0.9955331097714357, 0.0005459200570726349], Complex[
     0.014731855885221194`, -0.09325500816450542]}, {
     Complex[-0.006175616617163536, 0.001068483214724944], Complex[
     0.021324229475181745`, -0.06255215827335274]}}, {{Complex[
     0.9946322739607858, 0.000633540834225275], Complex[
     0.017082095008116572`, -0.1020511368618095]}, {
     Complex[-0.007276071786961255, 0.00020668753884104025`], Complex[
     0.013550150138921096`, -0.06864617232560845]}}, {{Complex[
     0.9935936365092691, 0.0005928179303010377], Complex[
     0.018296650979244388`, -0.11151932938624953`]}, {
     Complex[-0.00822224121551443, -0.0008425865283149877], Complex[
     0.004436947463537723, -0.07253347750006016]}}, {{Complex[
     0.9924432991143822, 0.0004023811930009385], Complex[
     0.01823696355325918, -0.12134061119669141`]}, {
     Complex[-0.008933649068126067, -0.002020557530797207], 
     Complex[-0.005391855182779719, -0.07388527357909662]}}, {{Complex[
     0.9912174498957006, 0.00005001061065924475], Complex[
     0.016853746790211798`, -0.13116368136039683`]}, {
     Complex[-0.009341233355655018, -0.003249751862777445], 
     Complex[-0.015232751132149407`, -0.07255121890915264]}}, {{Complex[
     0.9899603287693474, -0.0004651352341514827], Complex[
     0.014194359345920346`, -0.14063018259362114`]}, {
     Complex[-0.009394856238906108, -0.004438383298187019], 
     Complex[-0.024353033317849077`, -0.06857806804640895]}}, {{Complex[
     0.9887212388638876, -0.0011309988215832106`], Complex[
     0.010403058961221298`, -0.14940149873419992`]}, {
     Complex[-0.009069939767109188, -0.005486516995277167], 
     Complex[-0.032045741687840884`, -0.06221363682135256]}}, {{Complex[
     0.9875507678136812, -0.0019220280302718845`], Complex[
     0.005713862948787612, -0.15718504850113238`]}, {
     Complex[-0.008372534409925095, -0.006293657816234959], 
     Complex[-0.03768455539394544, -0.053895269737264447`]}}, {{Complex[
     0.986496470654636, -0.002799662199293551], Complex[
     0.00043631310024555184`, -0.16375801676592627`]}, {
     Complex[-0.007342209841860469, -0.006767237664047502], 
     Complex[-0.040774288398185005`, -0.04422323022667338]}}, {{Complex[
     0.9855983386632984, -0.003713977567970813], 
     Complex[-0.005064988471685406, -0.16898660433975612`]}, {
     Complex[-0.006052302448706174, -0.006831347178661422], 
     Complex[-0.040992896368950066`, -0.03392067227405222]}}, {{Complex[
     0.9848844280607857, -0.004606476255529942], 
     Complex[-0.010395695187506576`, -0.17283917561660175`]}, {
     Complex[-0.004607251195144476, -0.006434977739976541], 
     Complex[-0.03822150279178953, -0.023782966340878616`]}}, {{Complex[
     0.9843670430897679, -0.005413902724474125], 
     Complex[-0.015160096032628469`, -0.17539211676625402`]}, {
     Complex[-0.0031369868971419107`, -0.0055590196003905004`], 
     Complex[-0.03255984577335811, -0.01462004213653795]}}, {{Complex[
     0.9840398559708743, -0.006072872961948161], 
     Complex[-0.018990496579770626`, -0.17682775016881117`]}, {
     Complex[-0.0017885905244675651`, -0.0042213048001996985`], 
     Complex[-0.02432564849367863, -0.007196001584412389]}}, {{Complex[
     0.9838763006964855, -0.006525012772761986], 
     Complex[-0.021575417800226513`, -0.17742424042130345`]}, {
     Complex[-0.0007156838933996555, -0.0024790875663650374`], 
     Complex[-0.014037625071707468`, -0.0021705079127586862`]}}, {{Complex[
     0.9838295002050041, -0.006722230420084425], 
     Complex[-0.0226844726194019, -0.17753802763512366`]}, {
     Complex[-0.00006624182543118612, -0.00042851392061162485`], 
     Complex[-0.0023830485453988724`, -0.000046366929531719726`]}}, {{Complex[
     0.9838338813167435, -0.006631702123831346], 
     Complex[-0.022187981148059848`, -0.1775798904956198]}, {Complex[
     0.00003029863041436459, 0.0017991632536623824`], Complex[
     0.009828060869695445, -0.001127309653881677]}}, {{Complex[
     0.9838085051603283, -0.006240131961086788], 
     Complex[-0.020069728201279884`, -0.17798623514819215`]}, {
     Complex[-0.0005243762435385017, 0.004044629018575313], Complex[
     0.021719091635832816`, -0.005489307034833036]}}, {{Complex[
     0.9836620007518578, -0.005556864179007382], 
     Complex[-0.016431726944057683`, -0.17918759370553766`]}, {
     Complex[-0.0017862507758812098`, 0.006130557216271838], Complex[
     0.03240953178746024, -0.012967852367716384`]}}, {{Complex[
     0.9832988455077737, -0.004615477640782531], 
     Complex[-0.011490400628714082`, -0.1815765728170194]}, {
     Complex[-0.003760217006691859, 0.007874148274645667], Complex[
     0.041079849352294584`, -0.023162591161104536`]}}, {{Complex[
     0.9826265996011039, -0.003473578783711418], 
     Complex[-0.005564197113686282, -0.18547760039545597`]}, {
     Complex[-0.006394723342636651, 0.009101380587909207], Complex[
     0.04703394013161704, -0.03545951484314092]}}, {{Complex[
     0.9815635828682653, -0.0022106283396485567`], Complex[
     0.0009467278432412915, -0.1911207663470858]}, {
     Complex[-0.009580618943038011, 0.009661978255627382], Complex[
     0.049754522522129745`, -0.049069715852513025`]}}, {{Complex[
     0.9800463953311057, -0.0009237825999596352], Complex[
     0.0075875210800823165`, -0.1986218372583924]}, {
     Complex[-0.01315470607311929, 0.009443927031837326], Complex[
     0.04894715691552844, -0.06308248368056389]}}, {{Complex[
     0.9780366365306007, 0.0002781064641563579], Complex[
     0.013880557873559615`, -0.20797014992345983`]}, {
     Complex[-0.016908162306565264`, 0.008386276122572433], Complex[
     0.04456917468261746, -0.07652937163505671]}}, {{Complex[
     0.975526184074293, 0.0012820181921972232`], Complex[
     0.019360065836408848`, -0.21902556880546317`]}, {
     Complex[-0.020599585310316616`, 0.006488968490334894], Complex[
     0.036840720361945634`, -0.08845486486349367]}}, {{Complex[
     0.9725404539991566, 0.001979341886098795], Complex[
     0.023606933336422945`, -0.2315250544402997]}, {
     Complex[-0.023971975926595994`, 0.0038185636493153255`], Complex[
     0.026236318227167377`, -0.09798852714266089]}}, {{Complex[
     0.9691391858225807, 0.0022748947201463024`], Complex[
     0.026281070540486243`, -0.24509867302695093`]}, {
     Complex[-0.026772551454709175`, 0.0005089614467639436], Complex[
     0.013456813752657762`, -0.10441309653528918`]}}, {{Complex[
     0.9654144685992039, 0.002095670167777689], Complex[
     0.027148775587862863`, -0.2592941342864271]}, {
     Complex[-0.028773917842253267`, -0.0032434044731385276`], 
     Complex[-0.0006168866893624938, -0.10722302494069676`]}}, {{Complex[
     0.9614859395954602, 0.0013985665267667003`], Complex[
     0.026102854638406267`, -0.27360823700522013`]}, {
     Complex[-0.02979487441551269, -0.007189983096742715], 
     Complex[-0.014985285119039448`, -0.10616846750298531`]}}, {{Complex[
     0.9574933270827684, 0.0001763678292386837], Complex[
     0.023173741507076635`, -0.2875229952928456]}, {
     Complex[-0.029719017653023715`, -0.011045708770949795`], 
     Complex[-0.028602573362490825`, -0.10128072651894851`]}}, {{Complex[
     0.9535867515935011, -0.0015386599812733863`], Complex[
     0.018530527052217423`, -0.30054377530347054`]}, {
     Complex[-0.028509375941512614`, -0.014508863872614061`], 
     Complex[-0.040454255352035166`, -0.09287657896336071]}}, {{Complex[
     0.94991542219541, -0.00367404005196504], Complex[
     0.01247158661354573, -0.31223654121302025`]}, {
     Complex[-0.026217549068444562`, -0.017283828960465448`], 
     Complex[-0.04963403311335724, -0.08154064152371818]}}, {{Complex[
     0.9466155433453997, -0.006119497648656879], Complex[
     0.005405316463588545, -0.3222613194838869]}, {
     Complex[-0.022986225498838986`, -0.019105010374224324`], 
     Complex[-0.05541382805813903, -0.06808677692895505]}}, {{Complex[
     0.943798365041621, -0.008732546821535262], 
     Complex[-0.0021777186460196843`, -0.3303992454045791]}, {
     Complex[-0.01904446811084704, -0.01976004496015397], 
     Complex[-0.05730132838947171, -0.05350132132796666]}}, {{Complex[
     0.941539351906283, -0.011347024694852829`], 
     Complex[-0.009739238275415583, -0.33657103265847643`]}, {
     Complex[-0.014695742167026479`, -0.019110358176159074`], 
     Complex[-0.055080482884873605`, -0.038872424081931686`]}}, {{Complex[
     0.9398694105893602, -0.013784097780921984`], 
     Complex[-0.016731789490868152`, -0.3408453592467388]}, {
     Complex[-0.010299250393170992`, -0.017107293493865885`], 
     Complex[-0.04883177585737808, -0.025310888265257667`]}}, {{Complex[
     0.9387690020422524, -0.015865044053971048`], 
     Complex[-0.022638554955764896`, -0.343436429385304]}, {
     Complex[-0.006245686386371414, -0.013802317110979252`], 
     Complex[-0.03893075136480023, -0.013868495152264454`]}}, {{Complex[
     0.9381657846402326, -0.017424939964361702`], 
     Complex[-0.02701150803853459, -0.34469078205392517`]}, {
     Complex[-0.0029289784342334227`, -0.009350199232826244], 
     Complex[-0.02602493062942029, -0.005459873505772381]}}, {{Complex[
     0.9379361991404129, -0.018326265477616007`], 
     Complex[-0.029505122837992673`, -0.34506420614417366`]}, {
     Complex[-0.0007159457594237798, -0.004004543891465994], 
     Complex[-0.010990830126979928`, -0.0007935836638413598]}}, {{Complex[
     0.9379111327804138, -0.01847139004102539], 
     Complex[-0.02990316791500051, -0.34509033287567165`]}, {Complex[
     0.00008398318019099842, 0.001894450949776333], Complex[
     0.005125872469141333, -0.00031732041570099956`]}}, {{Complex[
     0.9378855040343429, -0.017812921480489897`], 
     Complex[-0.02813659407407432, -0.34534306545527943`]}, {
     Complex[-0.0007532622191636471, 0.007939598676682286], Complex[
     0.021182920173647174`, -0.004181107234950912]}}, {{Complex[
     0.9376313083231997, -0.01636098866263996], 
     Complex[-0.024291129699243946`, -0.3463954452567636]}, {
     Complex[-0.0033429728605142697`, 0.01368277261624359], Complex[
     0.036021939935585445`, -0.012221157565610468`]}}, {{Complex[
     0.9369133752168698, -0.014186685792515778`], 
     Complex[-0.01860388334290517, -0.3487778261719078]}, {
     Complex[-0.0076748634066001135`, 0.018665975900673884`], Complex[
     0.048551437594622784`, -0.023965788991054584`]}}, {{Complex[
     0.935506827165341, -0.011421128130490864`], 
     Complex[-0.011448986648898788`, -0.3529383248381255]}, {
     Complex[-0.013604692082159057`, 0.022455543547511603`], Complex[
     0.05782674985145703, -0.03866343402078624]}}, {{Complex[
     0.9332150179550424, -0.0082498497816314], 
     Complex[-0.0033130573192406885`, -0.3592084286160493]}, {
     Complex[-0.020855647194448344`, 0.024677178384861113`], Complex[
     0.063121406839144, -0.0553314160150727]}}, {{Complex[
     0.9298865868782511, -0.004902603879017019], Complex[
     0.005238013338988903, -0.3677763721237085]}, {
     Complex[-0.029030249646544187`, 0.025049209800285153`], Complex[
     0.06398466246545174, -0.0728227683834438]}}, {{Complex[
     0.925430213292446, -0.001638987635626051], Complex[
     0.01359878037023688, -0.37867043713952636`]}, {
     Complex[-0.037632765606030315`, 0.023411300733112487`], Complex[
     0.06028057344916856, -0.08990701009699491]}}, {{Complex[
     0.9198257145999912, 0.0012693144701713842`], Complex[
     0.021167748991616272`, -0.39175369805406957`]}, {
     Complex[-0.04610124680775535, 0.019745872284861212`], Complex[
     0.05220500105630161, -0.1053595316989128]}}, {{Complex[
     0.9131303109820821, 0.003558528017312982], Complex[
     0.027391542079610157`, -0.40673094794916254`]}, {
     Complex[-0.053847382738461326`, 0.01418981770533542], Complex[
     0.040278296819679635`, -0.11805321927631139`]}}, {{Complex[
     0.9054791838950733, 0.004993596433787512], Complex[
     0.031806425231175356`, -0.4231676401759144]}, {
     Complex[-0.06030145564368088, 0.007034665054529871], Complex[
     0.02531318559684284, -0.1270453066234439]}}, {{Complex[
     0.8970798693393723, 0.005388177742611815], Complex[
     0.03407395076737923, -0.4405197298777026]}, {
     Complex[-0.06495895314445618, -0.0012857922164866802`], Complex[
     0.008359371444447965, -0.13165235636513545`]}}, {{Complex[
     0.8882005221733269, 0.0046221473752894255`], Complex[
     0.034007826192292666`, -0.4581723811139188]}, {
     Complex[-0.06742493286278141, -0.01022030629589605], 
     Complex[-0.00937151935065402, -0.13150684730204748`]}}, {{Complex[
     0.8791526205922395, 0.0026550144121401656`], Complex[
     0.0315897279582183, -0.4754847107524332]}, {
     Complex[-0.06745214448765287, -0.01913616250018802], 
     Complex[-0.026595120783927145`, -0.12659012517526913`]}}, {{Complex[
     0.8702691967221449, -0.00046609485710033814`], Complex[
     0.0269726281459157, -0.4918371607403725]}, {
     Complex[-0.06496924655795977, -0.02736394074372341], 
     Complex[-0.04205060283499073, -0.11723838652263296`]}}, {{Complex[
     0.8618801239121425, -0.004604844413017074], Complex[
     0.02047120662451677, -0.5066777992200876]}, {
     Complex[-0.06009619533889894, -0.03424769840291335], 
     Complex[-0.054596169943796624`, -0.10412072640764235`]}}, {{Complex[
     0.8542863136310441, -0.009540950542943107], Complex[
     0.012539985673710449`, -0.5195638906907942]}, {
     Complex[-0.0531449542376131, -0.03919658907464321], 
     Complex[-0.06329587556531699, -0.08819081654754785]}}, {{Complex[
     0.8477348388359726, -0.014982208651685532`], Complex[
     0.0037408376145691958`, -0.530195448338178]}, {
     Complex[-0.04460494435013445, -0.041733699494333684`], 
     Complex[-0.0674906358930925, -0.0706161737205561]}}, {{Complex[
     0.842396989791039, -0.020582638993167913`], 
     Complex[-0.005297626075354892, -0.5384381481432161]}, {
     Complex[-0.03511397231356822, -0.04153807540030414], 
     Complex[-0.066847835481527, -0.05269092963047021]}}, {{Complex[
     0.838351087273899, -0.025965600540481793`], 
     Complex[-0.013925656207941953`, -0.5443338692214351]}, {
     Complex[-0.025416576753848306`, -0.0384764708650724], 
     Complex[-0.06138593049253472, -0.035739298704499066`]}}, {{Complex[
     0.8355715502498845, -0.030750312533913336`], 
     Complex[-0.021519497846087567`, -0.5480981303500598]}, {
     Complex[-0.01631270890290147, -0.03262219690055898], 
     Complex[-0.05147269074492024, -0.021017452230326295`]}}, {{Complex[
     0.8339252764156678, -0.03457993776715984], 
     Complex[-0.02752655839523412, -0.5501047154420012]}, {
     Complex[-0.008600339556184309, -0.024259439828686977`], 
     Complex[-0.03779789388983457, -0.009621267632114924]}}, {{Complex[
     0.833175885519462, -0.03714923266758202], 
     Complex[-0.03150535592731912, -0.5508587281429548]}, {
     Complex[-0.0030159548960728214`, -0.01387244786520871], 
     Complex[-0.021323160505960507`, -0.0024065631882069097`]}}, {{Complex[
     0.8329958358553918, -0.03822975471359902], 
     Complex[-0.03315745288892606, -0.5509601179136059]}, {
     Complex[-0.00017700619000085495`, -0.002119956150499391], 
     Complex[-0.0032130566480180244`, 0.00007284875544490806]}}, {{Complex[
     0.8329858856160344, -0.037690726741943535`], 
     Complex[-0.032349201870532814`, -0.5510603352719089]}, {
     Complex[-0.000530274590274876, 0.010203907590435985`], Complex[
     0.015247445599297827`, -0.0023945592751639646`]}}, {{Complex[
     0.8327008564801096, -0.035513876526301634`], 
     Complex[-0.029121851479056986`, -0.551815186932007]}, {
     Complex[-0.004309858576726433, 0.022220221180741122`], Complex[
     0.032743515891367175`, -0.009661750977133083]}}, {{Complex[
     0.8316801847373334, -0.031800887288073766`], 
     Complex[-0.02368933184580678, -0.5538371755188306]}, {
     Complex[-0.011508114955631206`, 0.033024649682607606`], Complex[
     0.04802316307362354, -0.02123172926267615]}}, {{Complex[
     0.829481332339379, -0.026772503580023078`], 
     Complex[-0.016423825555748367`, -0.5576506345152071]}, {
     Complex[-0.02186237058242069, 0.041752223173385214`], Complex[
     0.05998621310702583, -0.036290540419838445`]}}, {{Complex[
     0.8257137978890847, -0.020758832954955043`], 
     Complex[-0.007830006851338655, -0.5636528167754656]}, {
     Complex[-0.03485952122038568, 0.04764348965721356], Complex[
     0.06776384134177323, -0.05376288610800215]}}, {{Complex[
     0.820071245003932, -0.014180960045391443`], Complex[
     0.0014904204031507614`, -0.5720837672314601]}, {
     Complex[-0.04975968301472228, 0.0501074680366578], Complex[
     0.07078323729100366, -0.07238723194125303]}}, {{Complex[
     0.8123591894499186, -0.007524629374642206], Complex[
     0.010881563219534048`, -0.5830073043811415]}, {
     Complex[-0.06563881854994508, 0.04877645171836148], Complex[
     0.06881251995941061, -0.09080595368207814]}}, {{Complex[
     0.8025157959209295, -0.0013074232516009554`], Complex[
     0.01968063756245399, -0.596304748946527]}, {Complex[-0.08144873766634192,
      0.04354765915064699], Complex[
     0.06198190950599736, -0.10766473062022776`]}}, {{Complex[
     0.7906236620671964, 0.00395849127437028], Complex[
     0.027266352896680068`, -0.6116821818880911]}, {
     Complex[-0.09609117015628929, 0.034607139182990396`], Complex[
     0.05077849727665901, -0.12171421445886674`]}}, {{Complex[
     0.7769110241307979, 0.0078054172559295035`], Complex[
     0.03310477303914882, -0.6286910211279355]}, {
     Complex[-0.10850090830737039`, 0.022432321461725087`], Complex[
     0.03601377496424181, -0.1319061788172728]}}, {{Complex[
     0.7617415884765396, 0.009847971354621893], Complex[
     0.03678907604756958, -0.6467606406217831]}, {
     Complex[-0.11773157402297578`, 0.007771173064538322], Complex[
     0.01876530814271066, -0.13747612635684223`]}}, {{Complex[
     0.7455931238783831, 0.009816563504640783], Complex[
     0.038069982749408524`, -0.6652407106482852]}, {
     Complex[-0.12303665001009119`, -0.008402017771229668], Complex[
     0.0002963659273680496, -0.1380048982187178]}}, {{Complex[
     0.729025953834266, 0.007583517264255847], Complex[
     0.03687429155879372, -0.6834500286847944]}, {
     Complex[-0.12393825663097771`, -0.024951883149319044`], 
     Complex[-0.0180403633277161, -0.13345328945305868`]}}, {{Complex[
     0.7126434553773905, 0.003179304357935087], Complex[
     0.03330990797669355, -0.7007279530836986]}, {
     Complex[-0.12027687948085246`, -0.040663613858146666`], 
     Complex[-0.034906991220433316`, -0.1241659640171295]}}, {{Complex[
     0.6970474828425732, -0.003202881522282185], Complex[
     0.02765690494480686, -0.7164842444499729]}, {
     Complex[-0.11223683238085683`, -0.05433447744272574], 
     Complex[-0.049083555270777034`, -0.11084385261850133`]}}, {{Complex[
     0.6827921879690652, -0.011215026037465516`], Complex[
     0.020345371689222666`, -0.730243218746905]}, {
     Complex[-0.10034449194241814`, -0.06486750546175023], 
     Complex[-0.05956099414617311, -0.0944873343742994]}}, {{Complex[
     0.6703399315307755, -0.020374422765339798`], Complex[
     0.011921962194063152`, -0.7416786229340124]}, {
     Complex[-0.0854389500672556, -0.07135933108835102], 
     Complex[-0.06561595209598453, -0.07631540679310268]}}, {{Complex[
     0.6600228533384649, -0.03009473946361412], Complex[
     0.0030080049109814278`, -0.7506365009087281]}, {
     Complex[-0.06861732285045621, -0.07317476534781592], 
     Complex[-0.06686135197980819, -0.0576683189066524]}}, {{Complex[
     0.6520132139671083, -0.03972582650282585], 
     Complex[-0.005747321414455024, -0.7571444179122393]}, {
     Complex[-0.05115917081232906, -0.07000208700880646], 
     Complex[-0.06326924866505274, -0.03990247472110535]}}, {{Complex[
     0.6463049119973813, -0.0485993892231744], 
     Complex[-0.013714960398212921`, -0.7614066192453369]}, {
     Complex[-0.034436066085903924`, -0.06188492146297396], 
     Complex[-0.05516525643288499, -0.02428668144514349]}}, {{Complex[
     0.642707709210747, -0.05607723357179323], 
     Complex[-0.020331396347644082`, -0.7637858741682593]}, {
     Complex[-0.019813175514056, -0.04922867070501216], 
     Complex[-0.043196429046245745`, -0.011908087836400513`]}}, {{Complex[
     0.6408547615379275, -0.061598656103103853`], 
     Complex[-0.025138212014176743`, -0.7647737790480914]}, {
     Complex[-0.008549861190805315, -0.032781423856506245`], 
     Complex[-0.02827653823201695, -0.0035946655927722613`]}}, {{Complex[
     0.6402231389670597, -0.06472365374680798], 
     Complex[-0.027813107235345937`, -0.7649520844015608]}, {
     Complex[-0.0017059031410737377`, -0.013590913041431726`], 
     Complex[-0.011514070274262121`, 0.00014084144564556066`]}}, {{Complex[
     0.6401661787260482, -0.06516892449458857], 
     Complex[-0.02819046358910223, -0.7649481329524068]}, {
     Complex[-0.00005925248927131848, 0.007059694748076011], Complex[
     0.0058710701054458135`, -0.0008673952035414808]}}, {{Complex[
     0.6399557782511814, -0.06283406503222398], 
     Complex[-0.02627035274681639, -0.765387755340188]}, {
     Complex[-0.004040437443757461, 0.027733505712140036`], Complex[
     0.022636068197410642`, -0.006431991689500335]}}, {{Complex[
     0.6388321003355553, -0.05781590759740773], 
     Complex[-0.022215683483602176`, -0.7668489990324564]}, {
     Complex[-0.01368799047070697, 0.04693477146337324], Complex[
     0.037603123382944796`, -0.01603090464201765]}}, {{Complex[
     0.6360576269103586, -0.05040956081145466], 
     Complex[-0.016337928277061604`, -0.7698199063164446]}, {
     Complex[-0.02862853965922622, 0.06321194557925701], Complex[
     0.049741445027347085`, -0.02884903253637911]}}, {{Complex[
     0.6309720634336297, -0.04109543320960163], 
     Complex[-0.009072552889219798, -0.7746632446813346]}, {
     Complex[-0.048084387132712264`, 0.07526320893691608], Complex[
     0.058238457743968276`, -0.04384001793915922]}}, {{Complex[
     0.6230442881633041, -0.030512337552967318`], 
     Complex[-0.0009458910819905683, -0.7815906472358137]}, {
     Complex[-0.07091028741349195, 0.0820379200866341], Complex[
     0.06255582843873378, -0.05980443763911]}}, {{Complex[
     0.6119174115434348, -0.0194177029676082], Complex[
     0.007464241311565312, -0.7906480453834658]}, {
     Complex[-0.09565955170172837, 0.0828266723876078], Complex[
     0.06246646960654146, -0.07547958204742483]}}, {{Complex[
     0.5974431318888357, -0.008636936153444524], Complex[
     0.015571431673720543`, -0.8017135661471531]}, {
     Complex[-0.12067745024426614`, 0.07733219283245657], Complex[
     0.05806942973275422, -0.08963500895124807]}}, {{Complex[
     0.579702017115489, 0.0009949937524741435], Complex[
     0.022823951348770244`, -0.8145082241589658]}, {
     Complex[-0.14421724485536563`, 0.06571353365738228], Complex[
     0.04978070898723587, -0.10116711908921965`]}}, {{Complex[
     0.559007156834737, 0.008695729078690151], Complex[
     0.028745166680505904`, -0.828618787430831]}, {
     Complex[-0.16457133909989227`, 0.04859718229377924], Complex[
     0.03829962891758941, -0.10918535812969343`]}}, {{Complex[
     0.5358898131390418, 0.013796726205826344`], Complex[
     0.03296789658367197, -0.8435311937958035]}, {
     Complex[-0.18020744012332277`, 0.027050993868890653`], Complex[
     0.024552405064783404`, -0.11308256970794558`]}}, {{Complex[
     0.5110671823863581, 0.015798419408343402`], Complex[
     0.03525990365717574, -0.8586719333926728]}, {
     Complex[-0.18989782441091665`, 0.002520144620357514], Complex[
     0.009616834395249987, -0.1125827447857296]}}, {{Complex[
     0.48539402393195313`, 0.01441443137512959], Complex[
     0.03553837813576971, -0.8734540085356363]}, {
     Complex[-0.19282928451256026`, -0.023271739136845854`], 
     Complex[-0.005365806520175114, -0.10776105269275642`]}}, {{Complex[
     0.4640887147256268, 0.010651134983899316`], Complex[
     0.03428370998054293, -0.8850609359655212]}, {
     Complex[-0.18987999820770604`, -0.04431082384380303], 
     Complex[-0.01704666266385012, -0.1007586531270598]}}, {{Complex[
     0.4433796641614838, 0.004624328754130759], Complex[
     0.03179933776008334, -0.8957577308303016]}, {
     Complex[-0.18213366183691085`, -0.06383993429575432], 
     Complex[-0.02741241549897678, -0.09145472322739286]}}, {{Complex[
     0.4237825872460895, -0.003440165623643695], Complex[
     0.02825953285498541, -0.9053164682742206]}, {
     Complex[-0.1699421091266121, -0.08082762763442453], 
     Complex[-0.035972893852075076`, -0.08036639793100031]}}, {{Complex[
     0.4057605894199979, -0.013207581982358477`], Complex[
     0.02388694950623822, -0.9135717523121548]}, {
     Complex[-0.15389752303384857`, -0.09435355702004779], 
     Complex[-0.04235130087140782, -0.06809646928932284]}}, {{Complex[
     0.3896988781467011, -0.024249459120558734`], Complex[
     0.018938944955935334`, -0.9204282143881517]}, {
     Complex[-0.13480389853907607`, -0.10365903570695896`], 
     Complex[-0.04630179699355026, -0.05529617512654817]}}, {{Complex[
     0.3758833953879038, -0.03606399993629163], Complex[
     0.013692457605147772`, -0.9258637126885989]}, {
     Complex[-0.11363665846657975`, -0.10818874464000232`], 
     Complex[-0.047718568978074874`, -0.042625926628479686`]}}, {{Complex[
     0.3644844496431318, -0.04810047969683195], Complex[
     0.008428348619911378, -0.9299281868164049]}, {
     Complex[-0.09149304774653476, -0.10762130439093215`], 
     Complex[-0.046636140177655494`, -0.030716589602039598`]}}, {{Complex[
     0.3555462372064185, -0.059786358676943804`], Complex[
     0.003416183409614094, -0.9327383535832375]}, {
     Complex[-0.06953638407447438, -0.10188732705921669`], 
     Complex[-0.04322134070876253, -0.020133812881310373`]}}, {{Complex[
     0.34898274811842234`, -0.07055567895433312], 
     Complex[-0.0010996755459035967`, -0.9344687109416384]}, {
     Complex[-0.04893738539731719, -0.091174438673578], 
     Complex[-0.037757920426513894`, -0.011347525331112869`]}}, {{Complex[
     0.3445802085158433, -0.07987730518585734], 
     Complex[-0.0049119214655991925`, -0.9353395173903838]}, {
     Complex[-0.0308156781451486, -0.07591956324193762], 
     Complex[-0.030625220248843326`, -0.004708230459824729]}}, {{Complex[
     0.34200588070494625`, -0.08728164114838044], 
     Complex[-0.007859533437664278, -0.9356025671920933]}, {
     Complex[-0.01618426994680997, -0.05678939432692259], 
     Complex[-0.022272582284323352`, -0.0004311572773091666]}}, {{Complex[
     0.34082275684248275`, -0.09238458206921836], 
     Complex[-0.009834009160328401, -0.9355256660288208]}, {
     Complex[-0.00589933833758529, -0.03465041781148613], 
     Complex[-0.013191279571029, 0.0014112480551900415`]}}, {{Complex[
     0.34050944615480483`, -0.09490762983270037], 
     Complex[-0.010782422209284003`, -0.9353767361346987]}, {
     Complex[-0.0006172311838208843, -0.01053009550669578], 
     Complex[-0.003885703254782019, 0.0008885303845459381]}}, {{Complex[
     0.3404843683527631, -0.09469328341133643], 
     Complex[-0.010707311323582701`, -0.9354084499820103]}, {
     Complex[-0.0007601680187141334, 0.014429083458786927`], Complex[
     0.005154603957592665, -0.0017963859169223047`]}}, {{Complex[
     0.34013321887170395`, -0.09171500781333028], 
     Complex[-0.009663574344227542, -0.9358442183743746]}, {
     Complex[-0.006491816274449095, 0.03902096090240776], Complex[
     0.013480691440599327`, -0.006322806344660823]}}, {{Complex[
     0.33883855413726904`, -0.08608127641742037], 
     Complex[-0.007752679333758899, -0.9368662529097328]}, {
     Complex[-0.017703696429179377`, 0.06203074676690826], Complex[
     0.020706580940190438`, -0.012273803437097336`]}}, {{Complex[
     0.3360102481707742, -0.07803337666548389], 
     Complex[-0.005114619105126687, -0.9386062935776238]}, {
     Complex[-0.03401321197130088, 0.08229194068738792], Complex[
     0.026527374936129614`, -0.0191624361855673]}}, {{Complex[
     0.33016977718799106`, -0.06626638600202422], 
     Complex[-0.0013995817160477732`, -0.9415916032574076]}, {
     Complex[-0.05823539366248233, 0.10083294571519241`], Complex[
     0.03121774383622758, -0.027563004491230197`]}}, {{Complex[
     0.3209277760685426, -0.05252485554496284], Complex[
     0.002769411089379628, -0.9456420348965257]}, {
     Complex[-0.08696722619156648, 0.11298620381874108`], Complex[
     0.03361876299019903, -0.035691812584614686`]}}, {{Complex[
     0.3078146147611544, -0.03769193678617024], Complex[
     0.007099532886182919, -0.9506729759759853]}, {Complex[-0.118486202757586,
      0.11778151581925884`], Complex[
     0.03375780037044452, -0.04278183433668798]}}, {{Complex[
     0.29059780579764777`, -0.02274616182867151], Complex[
     0.011312542060972854`, -0.9565080177622673]}, {
     Complex[-0.15082397068514303`, 0.11470833553058894`], Complex[
     0.03183275679462709, -0.04817333378649865]}}, {{Complex[
     0.2693056524304344, -0.008698868352275615], Complex[
     0.015165213732896681`, -0.9628960733864411]}, {
     Complex[-0.1818914791057953, 0.10377058752631492`], Complex[
     0.028188633030198723`, -0.051365464011659576`]}}, {{Complex[
     0.24423373803487397`, 0.0034733538345252143`], Complex[
     0.018466031432148193`, -0.969534353366612]}, {
     Complex[-0.20962096501611563`, 0.08550847954265742], Complex[
     0.023282724737983478`, -0.05205547490341009]}}, {{Complex[
     0.21593268514046418`, 0.012896594298019192`], Complex[
     0.021086828568660728`, -0.9760953551521382]}, {
     Complex[-0.2321150996865752, 0.06098209432357561], Complex[
     0.01764097809022523, -0.05016188529005915]}}, {{Complex[
     0.18517701867249645`, 0.018862879883239612`], Complex[
     0.02296847043187525, -0.9822556492546393]}, {
     Complex[-0.24779138979414028`, 0.031714508150578774`], Complex[
     0.011809023152123297`, -0.0458290149193164]}}, {{Complex[
     0.1529165618450543, 0.020883637465976206`], Complex[
     0.024120161180672683`, -0.9877239840630236]}, {
     Complex[-0.2555088526261807, -0.0004039092730302391], Complex[
     0.006302173932862679, -0.03941178073342357]}}, {{Complex[
     0.12021344282363802`, 0.018728736489749036`], Complex[
     0.024612541417518587`, -0.9922662151680375]}, {
     Complex[-0.25466451986774247`, -0.03324404125887643], Complex[
     0.0015590769632132131`, -0.03144150677702476]}}, {{Complex[
     0.08816925135812212, 0.012447512361438737`], Complex[
     0.024565338495347547`, -0.9957247846321114]}, {
     Complex[-0.24524961316076022`, -0.06458941664811951], 
     Complex[-0.0020964417232594837`, -0.02257546731426934]}}, {{Complex[
     0.05784795231008969, 0.002369656832749436], Complex[
     0.02413087346211907, -0.9980309427886579]}, {
     Complex[-0.22785908376098982`, -0.09229744964292168], 
     Complex[-0.004481491196034076, -0.013534687710555646`]}}, {{Complex[
     0.030200664767030483`, -0.010914369127795231`], Complex[
     0.023475145891038527`, -0.9992085757786957]}, {
     Complex[-0.2036530754530297, -0.11445614319980582`], 
     Complex[-0.005565583272834582, -0.005035880160145377]}}, {{Complex[
     0.0059982713935875145`, -0.026591917885447066`], Complex[
     0.022758452281315796`, -0.9993693047771555]}, {
     Complex[-0.1742739796154479, -0.12952238820016876`], 
     Complex[-0.005466434284100633, 0.002275933874578087]}}, {{
     Complex[-0.014222945523334701`, -0.04368260934921935], Complex[
     0.022117514494100026`, -0.9986993618160483]}, {
     Complex[-0.1417272644981475, -0.13643031571826475`], 
     Complex[-0.00443079443669004, 0.007887672191214229]}}, {{
     Complex[-0.030198712744232428`, -0.06110428163010661], Complex[
     0.021650902346243086`, -0.9974395232268372]}, {
     Complex[-0.10823747009457915`, -0.1346618404938371], 
     Complex[-0.0028025779486991727`, 0.011465726703584807`]}}, {{
     Complex[-0.04195486173367671, -0.07774533199240719], Complex[
     0.02140916063643578, -0.9958600086390591]}, {
     Complex[-0.07609225006308037, -0.12427586546091153`], 
     Complex[-0.000981797296947723, 0.01288663940254329]}}, {{
     Complex[-0.04980540086769464, -0.09253816446671201], Complex[
     0.02139054971645036, -0.9942326723198832]}, {
     Complex[-0.04748707370721346, -0.10589681736819931`], Complex[
     0.0006214477797869336, 0.01224854435113945]}}, {{
     Complex[-0.05433136983438284, -0.10452877457788254`], Complex[
     0.021542745033178563`, -0.9928029996069707]}, {
     Complex[-0.02438149540330779, -0.08066657892932576], Complex[
     0.0016334413294627403`, 0.009862830309324427]}}, {{
     Complex[-0.05634251787456323, -0.11293817460780804`], Complex[
     0.02177027716570231, -0.9917643819805992]}, {
     Complex[-0.00837533223181788, -0.05016605972163169], Complex[
     0.0017595114843561388`, 0.006227139922766967]}}, {{
     Complex[-0.056824736011772646`, -0.11721223013729444`], Complex[
     0.021946979684090453`, -0.9912369114785956]}, {
     Complex[-0.0006103301736505181, -0.016313526906065266`], Complex[
     0.0008191492319441075, 0.001982174544176585]}}, {{
     Complex[-0.0568767286667533, -0.11705738669870923`], Complex[
     0.02193228046209071, -0.9912525515597421]}, {
     Complex[-0.0017005281864018612`, 0.01875336155749641], 
     Complex[-0.0012294158738036355`, -0.0021442193568853205`]}}, {{
     Complex[-0.05763970763252645, -0.11246060715477146`], Complex[
     0.021589839772227355`, -0.9917480492359051]}, {
     Complex[-0.011692905405040047`, 0.0528056481005785], 
     Complex[-0.0042773724974126525`, -0.005401500295147246]}}, {{
     Complex[-0.06022403381099657, -0.10369257520094075`], Complex[
     0.02080681232408585, -0.9925663854692813]}, {
     Complex[-0.030059077340027367`, 0.08365593328727876], 
     Complex[-0.008067561046279415, -0.007084745753625188]}}, {{
     Complex[-0.06563681003574687, -0.09129387375056029], Complex[
     0.019511894627015525`, -0.9934669398788484]}, {
     Complex[-0.05571855701448528, 0.10929103737685981`], 
     Complex[-0.01221124093182473, -0.006601808274021295]}}, {{
     Complex[-0.07471448767140734, -0.0760444915476973], Complex[
     0.017690321730701484`, -0.9941438879699405]}, {
     Complex[-0.08709397168762568, 0.1279992260143717], 
     Complex[-0.0162188741045953, -0.0035340675763154937`]}}, {{
     Complex[-0.08806457338031382, -0.058917733819483696`], Complex[
     0.015394112607753684`, -0.9942516734745385]}, {
     Complex[-0.12219810984277055`, 0.13848585118363296`], 
     Complex[-0.019543304098832665`, 0.002314504598582871]}}, {{
     Complex[-0.10602043164282293`, -0.04102047544513065], Complex[
     0.012746148003213859`, -0.9934357367171213]}, {
     Complex[-0.15875134311424854`, 0.13997005180860733`], 
     Complex[-0.02163248355185365, 0.010884968798684742`]}}, {{
     Complex[-0.1286128543064628, -0.02352270235448974], Complex[
     0.009937109656228222, -0.9913660831555366]}, {
     Complex[-0.19432564016678905`, 0.13225420696837983`], 
     Complex[-0.021987640067085045`, 0.02185197339236151]}}, {{
     Complex[-0.15556138893311058`, -0.007580365778739061], Complex[
     0.007214909839341455, -0.9877708142560494]}, {
     Complex[-0.22650821548665673`, 0.11575776632413703`], 
     Complex[-0.020221644664116283`, 0.03463612052037927]}}, {{
     Complex[-0.18628730322347967`, 0.005743423787015468], Complex[
     0.004866962820153732, -0.9824664955878037]}, {Complex[-0.253074333828052,
      0.09150841853552316], Complex[-0.016111596711696156`, 
     0.04844103317370522]}}, {{Complex[-0.21994851537952712`, 
     0.015553109169718433`], Complex[
     0.0031964311442157405`, -0.9753822779887754]}, {
     Complex[-0.27215568066885065`, 0.06108653910216721], 
     Complex[-0.009639510160156009, 0.062313528398751414`]}}, {{
     Complex[-0.2554949470194459, 0.021185304896279216`], Complex[
     0.002494327492953323, -0.966575063510008]}, {Complex[-0.2823888593565405,
      0.02652332237246465], Complex[-0.0010156588516981174`, 
     0.0752226085734075]}}, {{Complex[-0.29174076565457246`, 
     0.022257709765906315`], Complex[
     0.00300996011126724, -0.9562337196665853]}, {
     Complex[-0.2830287006033904, -0.009841637823797916], Complex[
     0.009319340969009425, 0.08615049471050219]}}, {{
     Complex[-0.3274481580860883, 0.018697786061796926`], Complex[
     0.004922574614198574, -0.9446713381427555]}, {
     Complex[-0.27401353210259793`, -0.04553221356983191], Complex[
     0.02071539806477326, 0.09418709337843373]}}, {{
     Complex[-0.3614159103293497, 0.010748387710025998`], Complex[
     0.008317094054475224, -0.9323056981449747]}, {
     Complex[-0.25597422257749997`, -0.07812167049396988], Complex[
     0.03235580938237344, 0.09861849053819075]}}, {{
     Complex[-0.39256540936145895`, -0.0010503416524563344`], Complex[
     0.013166566983118154`, -0.919629282642001]}, {
     Complex[-0.2301850381658566, -0.10541497214675519`], Complex[
     0.043318544306365385`, 0.09900050321529916]}}, {{
     Complex[-0.42001686281388906`, -0.015901204656082683`], Complex[
     0.019323331629349218`, -0.9071712496185441]}, {
     Complex[-0.1984610901141386, -0.12560999261609698`], Complex[
     0.052650225575265504`, 0.09520995327708527]}}, {{
     Complex[-0.44314954469630746`, -0.032808641615145975`], Complex[
     0.026520078067626175`, -0.8954545431471449]}, {
     Complex[-0.16301321769809998`, -0.13742291965042006`], Complex[
     0.059445765220203124`, 0.08746887199569743]}}, {{
     Complex[-0.46164156128973877`, -0.050650604281532695`], Complex[
     0.03438105959637088, -0.8849517523679535]}, {
     Complex[-0.12627548014815995`, -0.14016788738656352`], Complex[
     0.06292631012704399, 0.07633983555372677]}}, {{
     Complex[-0.4754867217296812, -0.06825743206105982], Complex[
     0.04244279869800488, -0.8760433669498625]}, {
     Complex[-0.0907223575318785, -0.1337867004462635], Complex[
     0.06250881749293195, 0.06269354266726954]}}, {{
     Complex[-0.48498827087626456`, -0.08449139720882062], Complex[
     0.05018286169421013, -0.8689817762729609]}, {
     Complex[-0.05869215326205316, -0.11883028566173591`], Complex[
     0.05786196491909459, 0.04765211764654204]}}, {{
     Complex[-0.4907311949306382, -0.09832111177100972], Complex[
     0.057054707924775835`, -0.8638638054809067]}, {
     Complex[-0.03223036073684459, -0.09639822228056288], Complex[
     0.04894482189234431, 0.03251317650758905]}}, {{
     Complex[-0.49353632022624266`, -0.10888601197131838`], Complex[
     0.06252627105536143, -0.8606138846066999]}, {
     Complex[-0.012962715338332837`, -0.06804568102177667], Complex[
     0.03602636766390808, 0.018660386968527107`]}}, {{
     Complex[-0.49440038733504166`, -0.1155474150122712], Complex[
     0.06611977256494789, -0.8589792078262974]}, {
     Complex[-0.0020032811595021034`, -0.03566813916828245], Complex[
     0.019685226278543036`, 0.007466265645893318]}}, {{
     Complex[-0.49442671313021463`, -0.1179239426088083], Complex[
     0.06745024227018151, -0.8585375255651791]}, {Complex[
     0.0001008868942651864, -0.0013735938610733803`], Complex[
     0.0007897691413082782, 0.00019261656376373386`]}}, {{
     Complex[-0.494751066890142, -0.11591024630270505`], Complex[
     0.06626026566259413, -0.8587175441195009]}, {
     Complex[-0.006610386524083525, 0.03264971867608842], 
     Complex[-0.019540918846525375`, -0.0021063126424255905`]}}, {{
     Complex[-0.49646714771204165`, -0.10967886371759482`], Complex[
     0.062448551748706796`, -0.8588312650772907]}, {
     Complex[-0.021523583507553044`, 0.06426410370316359], 
     Complex[-0.03999455300867929, 0.0013270782996968357`]}}, {{
     Complex[-0.5005557208956296, -0.09966569145708985], Complex[
     0.056090015902458955`, -0.8581169354424636]}, {
     Complex[-0.04349513915038112, 0.09150729345148732], 
     Complex[-0.05914066575729218, 0.010877774112335903`]}}, {{
     Complex[-0.5078211613513477, -0.08654006572305384], Complex[
     0.047445242109254444`, -0.8557905574655388]}, {
     Complex[-0.07092334212830657, 0.11270775700555474`], 
     Complex[-0.07552134312874198, 0.026501237565723743`]}}, {{
     Complex[-0.518838893320315, -0.07116092051499903], Complex[
     0.036957504315320154`, -0.8511031155154448]}, {
     Complex[-0.101846574356942, 0.1265864689531785], 
     Complex[-0.08775441376397451, 0.04769195343773626]}}, {{
     Complex[-0.5359872404844022, -0.05250500615748056], Complex[
     0.023791780555687158`, -0.8422558394189077]}, {
     Complex[-0.1378810736427289, 0.13246549341509684`], 
     Complex[-0.09506194974380236, 0.07680053797875883]}}, {{
     Complex[-0.5582153444380427, -0.033759750488442264`], Complex[
     0.010135449057432487`, -0.8289470616943608]}, {
     Complex[-0.17232573046747987`, 0.12785347297075525`], 
     Complex[-0.09445612563493375, 0.10968277053796105`]}}, {{
     Complex[-0.5850719424962307, -0.016397227140610076`], 
     Complex[-0.0028283255907492885`, -0.8108107126504516]}, {
     Complex[-0.20209632235501632`, 0.11330003425382672`], 
     Complex[-0.08534133976792674, 0.14383684449329914`]}}, {{
     Complex[-0.6156902709143264, -0.0017493839019429981`], 
     Complex[-0.01388423619905231, -0.7878640298674302]}, {
     Complex[-0.2245142413401418, 0.09020239874717137], 
     Complex[-0.06787932017622718, 0.17644654690639788`]}}, {{
     Complex[-0.6488649395229938, 0.00910607424292063], 
     Complex[-0.02189802039105938, -0.76053398106062]}, {
     Complex[-0.23756356870505507`, 0.060691775853805724`], 
     Complex[-0.04304357719367276, 0.20464819006405116`]}}, {{
     Complex[-0.6831620774512113, 0.015437803077964137`], 
     Complex[-0.025931387798889555`, -0.7296430125217638]}, {
     Complex[-0.24009380072150907`, 0.02744090299125064], 
     Complex[-0.012587057503164521`, 0.22582688063103892`]}}, {{
     Complex[-0.7114669453118051, 0.017011252277263456`], 
     Complex[-0.02578214120708722, -0.7020404459115099]}, {
     Complex[-0.2340270550761357, -0.0009623918772318097], Complex[
     0.015334469633560539`, 0.2365829309204077]}}, {{
     Complex[-0.7386266128124799, 0.01525541030718446], 
     Complex[-0.02225500576207933, -0.6735746670327034]}, {
     Complex[-0.22097338732943128`, -0.028189960935258676`], Complex[
     0.04385430267184063, 0.2402269644890928]}}, {{
     Complex[-0.7638573874018001, 0.010407121378891151`], 
     Complex[-0.01538211696774281, -0.6451178880612025]}, {
     Complex[-0.20181549912061525`, -0.052644688731766406`], Complex[
     0.07122713227154948, 0.23641377539509598`]}}, {{
     Complex[-0.7865040336598851, 0.0028809447682035865`], 
     Complex[-0.005404170882826889, -0.6175548715657693]}, {
     Complex[-0.177813675243327, -0.07295653981764516], Complex[
     0.0957167479619167, 0.22528155119496596`]}}, {{
     Complex[-0.806079131673806, -0.006763379158488936], Complex[
     0.007237865088666887, -0.591724955559612]}, {
     Complex[-0.15050752469408665`, -0.0880693255293834], Complex[
     0.11571491143615273`, 0.207451365106156]}}, {{
     Complex[-0.8222894916831491, -0.0178620971945338], Complex[
     0.0219246055836816, -0.5683664022667734]}, {
     Complex[-0.12159870196727553`, -0.09730004334193619], Complex[
     0.12985086198636242`, 0.18399090119753714`]}}, {{
     Complex[-0.8350480189234336, -0.02969388743049302], Complex[
     0.03789220738540441, -0.5480669445553615]}, {
     Complex[-0.09282561023577811, -0.10036684475359246`], Complex[
     0.13708262953065561`, 0.15634675295650272`]}}, {{
     Complex[-0.8444707349752132, -0.04152771357267702], Complex[
     0.05427576899841931, -0.5312239453935399]}, {
     Complex[-0.06584138736652995, -0.09738529966366183], Complex[
     0.13676406853856035`, 0.12625238233312314`]}}, {{
     Complex[-0.8508599767504674, -0.052668484305311625`], Complex[
     0.0701591137753472, -0.5180165423307371]}, {
     Complex[-0.04210518545894133, -0.08883592845964365], Complex[
     0.12868447965786708`, 0.09562022810464568]}}, {{
     Complex[-0.8546758305417009, -0.062497399128655574`], Complex[
     0.08462763073256936, -0.5083911570745131]}, {
     Complex[-0.022794435883899122`, -0.07550854652494396], Complex[
     0.11308066851945237`, 0.06642658871800657]}}, {{
     Complex[-0.8564986195929615, -0.07050463108471951], Complex[
     0.09682101285821118, -0.5020607574994262]}, {
     Complex[-0.00874283774539466, -0.058430451415966096`], Complex[
     0.09062360644538409, 0.04059690977950849]}}, {{
     Complex[-0.856985638017158, -0.07631286221527953], Complex[
     0.10598306571242372`, -0.4985174532787869]}, {
     Complex[-0.00040582627524094264`, -0.038785833988077806`], Complex[
     0.0623832575919296, 0.01989742611745565]}}, {{
     Complex[-0.8568253797263917, -0.07969103964483498], Complex[
     0.11150622450263815`, -0.4970574058116676]}, {Complex[
     0.00214728530188483, -0.017833169737409536`], Complex[
     0.02977551764841788, 0.005837255045642835]}}, {{
     Complex[-0.8566922954197768, -0.08055845249701331], Complex[
     0.11296886361239702`, -0.49681664316800733`]}, {
     Complex[-0.0007828775265094822, 0.0031739308728947506`], 
     Complex[-0.0055052467080616285`, -0.0004164982827053712]}}, {{
     Complex[-0.8572047309641881, -0.07897979173555172], Complex[
     0.11016384672229206`, -0.49681612490793486`]}, {
     Complex[-0.008562342930235077, 0.023058470338883152`], 
     Complex[-0.04156549700546019, 0.0018910671306027699`]}}, {{
     Complex[-0.8588882445466032, -0.07515223687735399], Complex[
     0.10311701217856074`, -0.4960142127271918]}, {
     Complex[-0.020276882935660337`, 0.04078189609171041], 
     Complex[-0.07640203370503859, 0.013048771733221906`]}}, {{
     Complex[-0.8621460426545499, -0.06938584528629169], Complex[
     0.09209444692232707, -0.49336448067530264`]}, {
     Complex[-0.03479788064683556, 0.0554945629288825], 
     Complex[-0.10800057676581938`, 0.03284400314658495]}}, {{
     Complex[-0.8672378522768371, -0.06207865336738178], Complex[
     0.07759754684606533, -0.4878764814505069]}, {
     Complex[-0.05085759889342538, 0.06657395557345945], 
     Complex[-0.13444198230025958`, 0.06054902508051379]}}, {{
     Complex[-0.8754796068565223, -0.052375550755548325`], Complex[
     0.05759376891489176, -0.4769437164952954]}, {
     Complex[-0.06949147102540155, 0.07435119947550246], 
     Complex[-0.15624962294580777`, 0.10052585743515924`]}}, {{
     Complex[-0.8861779345359594, -0.041979307266213566`], Complex[
     0.03534745978079333, -0.4600837479922489]}, {
     Complex[-0.08645194427618776, 0.07672191696764802], 
     Complex[-0.16693403071590066`, 0.1466915075473022]}}, {{
     Complex[-0.898981289228595, -0.03161285986139406], Complex[
     0.012479611318801027`, -0.43666648911199624`]}, {
     Complex[-0.09999613632319232, 0.07400440201003924], 
     Complex[-0.16519033309367062`, 0.19578707259830486`]}}, {{
     Complex[-0.9133230490860138, -0.021927140037201077`], 
     Complex[-0.009272282856656228, -0.40653946226461535`]}, {
     Complex[-0.10874671820340905`, 0.06692253038053401], 
     Complex[-0.1506439490497282, 0.2441344247024664]}}, {{
     Complex[-0.928480459212563, -0.013450618414700768`], 
     Complex[-0.028189472425340235`, -0.3700656472629754]}, {
     Complex[-0.11181648804087582`, 0.05652641039020686], 
     Complex[-0.12395381870694236`, 0.28793080940626026`]}}, {{
     Complex[-0.9436478819479716, -0.006551914665246311], 
     Complex[-0.0427154154393245, -0.32811776567559986`]}, {
     Complex[-0.10889063321945275`, 0.044081842825989315`], 
     Complex[-0.08682571269272914, 0.3235862291549943]}}, {{
     Complex[-0.958017677724505, -0.001419194839682202], 
     Complex[-0.051593951566204686`, -0.28202540032767726`]}, {
     Complex[-0.1002542412240111, 0.03093731227330182], 
     Complex[-0.04192007374231505, 0.34806882689653884`]}}, {{
     Complex[-0.9687388065860446, 0.0014733622816325573`], 
     Complex[-0.05405812633721735, -0.24211735142531762`]}, {
     Complex[-0.08943253714296331, 0.020497345386303427`], 
     Complex[-0.0014731815821627846`, 0.35828330986659346`]}}, {{
     Complex[-0.9780863459074094, 0.0032416612214973845`], 
     Complex[-0.05189575499819976, -0.20160251503738166`]}, {
     Complex[-0.07602333880836694, 0.01108842048318374], Complex[
     0.039779524140215065`, 0.358770059591076]}}, {{
     Complex[-0.9858170930347904, 0.0040312145505212015`], 
     Complex[-0.045142514834489264`, -0.1615880922182014]}, {
     Complex[-0.0609091308426536, 0.0032046656545922027`], Complex[
     0.07959064476169712, 0.34943947713417217`]}}, {{
     Complex[-0.9917932919546558, 0.004034197360599954], 
     Complex[-0.034085619504679095`, -0.12315890195407923`]}, {
     Complex[-0.045065512742993155`, -0.0028247407425712016`], Complex[
     0.11577007171475957`, 0.33077741374725844`]}}, {{
     Complex[-0.995988898932946, 0.003469709649197278], 
     Complex[-0.01924946838453962, -0.08731372381924177]}, {
     Complex[-0.029485932491963233`, -0.006852776072187194], Complex[
     0.14632161426965473`, 0.3038155932595915]}}, {{
     Complex[-0.9984873097554499, 0.002563020772747243], 
     Complex[-0.001366806728232713, -0.05490727075252775]}, {
     Complex[-0.015105941299103597`, -0.008915957402115482], Complex[
     0.16956428851262947`, 0.2700640011194125]}}, {{
     Complex[-0.999470805364311, 0.0015255319142688422`], Complex[
     0.01866254446762958, -0.026601567025877373`]}, {
     Complex[-0.002733259092799382, -0.009220223779715367], Complex[
     0.18422880446499382`, 0.2314121265216704]}}, {{
     Complex[-0.9992027089682858, 0.0005371255477657525], Complex[
     0.039822098028730775`, -0.002829795122241179]}, {Complex[
     0.007010753698294962, -0.008113091356784398], Complex[0.1895231012494604,
      0.19000871177406636`]}}, {{
     Complex[-0.9980037966864495, -0.0002677051801308528], Complex[
     0.061034631383954555`, 0.016225604161270443`]}, {Complex[
     0.013733984541364715`, -0.0060450951631442155`], Complex[
     0.1851643650987197, 0.14813079050489456`]}}, {{
     Complex[-0.9962248818807299, -0.0008089535070629078], Complex[
     0.08121986458677846, 0.030639956102661143`]}, {Complex[
     0.017298223314939888`, -0.0035242896786052704`], Complex[
     0.1713785804795005, 0.1080525153800095]}}, {{
     Complex[-0.9942176976283531, -0.0010648643328428284`], Complex[
     0.09935043541662007, 0.040739006462768]}, {Complex[
     0.017824716374420832`, -0.001067863119001567], Complex[
     0.1488715497050641, 0.07192266741584537]}}, {{
     Complex[-0.9923062040571956, -0.0010702665301572055`], Complex[
     0.11450326330678832`, 0.047078570066975606`]}, {Complex[
     0.01568128297279365, 0.0008452472452140847], Complex[
     0.11877715992477383`, 0.0416573097700237]}}, {{
     Complex[-0.9907603051760235, -0.0009097818089169941], Complex[
     0.12590410008321595`, 0.050413119186713706`]}, {Complex[
     0.01145285330860141, 0.001817336008772036], Complex[0.0825893005925933, 
     0.018851327896935912`]}}, {{
     Complex[-0.9897736999690583, -0.0007065683747374346], Complex[
     0.13296376584613495`, 0.05165553297882652]}, {Complex[
     0.005898073264734006, 0.0015677600793878685`], Complex[
     0.0420833512128043, 0.00471013761382582]}}, {{
     Complex[-0.9894472688065639, -0.000607527979340397], Complex[
     0.13530517044125784`, 0.05183026675540758]}, {
     Complex[-0.00010495901582121436`, -0.00004044653976002693], 
     Complex[-0.000768123681124319, 1.0635030834764655`*^-6]}}, {{
     Complex[-0.9897790390575831, -0.0007661027957426543], Complex[
     0.13278065190756258`, 0.052022085486201367`]}, {
     Complex[-0.005620596828447392, -0.0029846301164073684`], 
     Complex[-0.04388247533060605, 0.005023024683018937]}}, {{
     Complex[-0.9906614069405758, -0.001323923439839505], Complex[
     0.1254794122967305, 0.05332234748649084]}, {
     Complex[-0.009721910187676978, -0.007078202589074651], 
     Complex[-0.085155392972294, 0.019593219131667994`]}}, {{
     Complex[-0.9918859196099076, -0.00239265301084889], Complex[
     0.11372493491656673`, 0.05677471470629523]}, {
     Complex[-0.01155796494754814, -0.01197848799662388], 
     Complex[-0.12255016577618559`, 0.04305026596205746]}}, {{
     Complex[-0.9932756976879753, -0.0042419666599135325`], Complex[
     0.09624060226582098, 0.06421270278261505]}, {
     Complex[-0.01010722434516428, -0.017745728720315775`], 
     Complex[-0.15707377587919122`, 0.07790261840717191]}}, {{
     Complex[-0.9942231027708822, -0.006793468956980167], Complex[
     0.0750109788959458, 0.07647060751196764]}, {
     Complex[-0.004366183609633116, -0.023122541079014992`], 
     Complex[-0.1824160144969855, 0.12011361244036936`]}}, {{
     Complex[-0.9941715708229664, -0.009944816393176254], Complex[
     0.0512882182731607, 0.09430608084766677]}, {Complex[
     0.005961618864863186, -0.02723797481155892], 
     Complex[-0.19691227736207995`, 0.16706531565800847`]}}, {{
     Complex[-0.9925536601705256, -0.013484496983695936`], Complex[
     0.026493365977178704`, 0.1181254928868951]}, {Complex[
     0.020748688505249066`, -0.029223811744182357`], 
     Complex[-0.199532356484514, 0.21575700054286145`]}}, {{
     Complex[-0.9888452437578552, -0.017098005994490868`], Complex[
     0.0021307982845423326`, 0.14794706697452112`]}, {Complex[
     0.039426804616737594`, -0.028309170054408868`], 
     Complex[-0.1899810639524852, 0.2629845254335541]}}, {{
     Complex[-0.9826193628988654, -0.020385900363062707`], 
     Complex[-0.020307457404169848`, 0.18338851471613307`]}, {Complex[
     0.06100990561055738, -0.02391514735438586], 
     Complex[-0.16875777123945365`, 0.30555316801487725`]}}, {{
     Complex[-0.9735946360724486, -0.02289310214230917], 
     Complex[-0.0394415154184206, 0.22368259217107997`]}, {Complex[
     0.08415870092658773, -0.015739180949501136`], 
     Complex[-0.13716084448262297`, 0.34051067253902323`]}}, {{
     Complex[-0.9616731353158298, -0.024147501552499073`], 
     Complex[-0.054099996035953, 0.2677219152238349]}, {Complex[
     0.10728447175326095`, -0.003818389563827619], 
     Complex[-0.0972269591762785, 0.3653806681477179]}}, {{
     Complex[-0.9469632798161659, -0.023704630164791005`], 
     Complex[-0.06340459326657207, 0.31413159811851293`]}, {Complex[
     0.12868434695723516`, 0.011437595260417162`], 
     Complex[-0.05160246148290762, 0.3783721337176449]}}, {{
     Complex[-0.9297845639876804, -0.021194164447189863`], 
     Complex[-0.06683468873609909, 0.36136515470692043`]}, {Complex[
     0.14669553267836527`, 0.029250794158520797`], 
     Complex[-0.003353226525340796, 0.37853975554116503`]}}, {{
     Complex[-0.9106527275535854, -0.01636347718157062], 
     Complex[-0.06426526171671837, 0.4078161510577514]}, {Complex[
     0.15985256722691718`, 0.048518074745136246`], Complex[0.0442709468524852,
      0.3658736555625643]}}, {{
     Complex[-0.8902460560152932, -0.00911352057404891], 
     Complex[-0.055973856326669305`, 0.45193587046638944`]}, {Complex[
     0.16703050638637207`, 0.06789024023367624], Complex[0.08809354794837763, 
     0.34130485203103716`]}}, {{Complex[-0.8693555634883471, 
     0.00047697194725558075`], Complex[-0.042615642987645835`, 
     0.4923462093759197]}, {Complex[0.16755841524328785`, 
     0.08587897548167701], Complex[0.12526210232302748`, 
     0.3066236759834698]}}, {{Complex[-0.8488235330799278, 
     0.012141734214255349`], Complex[-0.025169126407200437`, 
     0.5279374119851921]}, {Complex[0.16129145459925842`, 
     0.10097997847416107`], Complex[0.15346484654383763`, 
     0.26432013301906476`]}}, {{Complex[-0.8294760119401298, 
     0.025432857458162404`], Complex[-0.00485821396099258, 
     0.5579420385068632]}, {Complex[0.1486354358820932, 0.11179896612824197`],
      Complex[0.1710908487344054, 0.21736551324226056`]}}, {{
     Complex[-0.8120552392224982, 0.039741872365122034`], Complex[
     0.016941356796601862`, 0.5819794335634637]}, {Complex[0.130523829018722, 
     0.11716786066528187`], Complex[0.1773197920385516, 
     0.16896138490631266`]}}, {{Complex[-0.7971576375093857, 
     0.05433413728542425], Complex[0.03880215676625831, 
     0.6000683998616108]}, {Complex[0.10835261689511058`, 
     0.11624105059631651`], Complex[0.1721380120327737, 
     0.12228428051499328`]}}, {{Complex[-0.7851820739652494, 
     0.068393618471343], Complex[0.059342901568750446`, 
     0.6126091924890182]}, {Complex[0.083882118595851, 0.1085654312512717], 
     Complex[0.15628725522614922`, 0.08025183805471865]}}, {{
     Complex[-0.7762918420075062, 0.08107461910739934], Complex[
     0.07731642023079915, 0.6203387963986697]}, {Complex[
     0.059116464521510585`, 0.09412197035223066], Complex[
     0.13116011559063132`, 0.04532989972797967]}}, {{
     Complex[-0.7703924970934879, 0.09155695097270901], Complex[
     0.09168221334259925, 0.6242653741947178]}, {Complex[0.03617090163936729, 
     0.07333985168187347], Complex[0.09866005243522219, 
     0.01939182670995237]}}, {{Complex[-0.7671265242867199, 
     0.099101308471308], Complex[0.10166033452764173`, 0.6255886484278188]}, {
     Complex[0.017135158193474585`, 0.047086147808334936`], Complex[
     0.061044079491261526`, 0.003633016554859255]}}, {{
     Complex[-0.765884943883353, 0.10310200490703926`], Complex[
     0.10676542584002215`, 0.6256129182520239]}, {Complex[
     0.003938642064482711, 0.016634236272236733`], Complex[
     0.02076330812790381, -0.00146301309212519]}}, {{
     Complex[-0.7658353754938174, 0.1031345736106967], Complex[
     0.10682134443387815`, 0.6256586817110908]}, {
     Complex[-0.001778733381237471, -0.016386929472387145`], 
     Complex[-0.01968819618389233, 0.0038854437609311984`]}}, {{
     Complex[-0.7659656709843569, 0.09899589047089612], Complex[
     0.10195780170781463`, 0.6269777974964454]}, {Complex[
     0.0012129463272009273`, -0.05006237495950931], 
     Complex[-0.05791082202594162, 0.01880370371129141]}}, {{
     Complex[-0.7651418144440874, 0.09073440916149206], Complex[
     0.09259084538914111, 0.6306761077776031]}, {Complex[
     0.01362560248301663, -0.08228073778276923], Complex[-0.09172166509451471,
      0.04183414991355206]}}, {{Complex[-0.7621781876732306, 
     0.07866790102326193], Complex[0.07938903997151377, 
     0.6376466874112862]}, {Complex[
     0.03556365214860253, -0.11084567613851908`], Complex[-0.1192622794171132,
      0.07103299582024414]}}, {{Complex[-0.7559173870841468, 
     0.06338594322173328], Complex[0.06322710574080194, 
     0.6485164640846333]}, {Complex[
     0.06646169088265576, -0.13360940793657383`], 
     Complex[-0.13909244608998084`, 0.10408821143581941`]}}, {{
     Complex[-0.7453155428845594, 0.04573454220337126], Complex[
     0.04512881976714274, 0.6636087904361826]}, {Complex[
     0.10506032171420536`, -0.14862540184264197`], 
     Complex[-0.15026849950786722`, 0.1384578485484399]}}, {{
     Complex[-0.7295276716619163, 0.02678094504703716], Complex[
     0.026201342578345097`, 0.6829244398836857]}, {Complex[
     0.14943161439302963`, -0.15431229891464368`], 
     Complex[-0.15240181498908165`, 0.17152740794123744`]}}, {{
     Complex[-0.707986268182138, 0.007758024185724043], Complex[
     0.007563858140522648, 0.7061431798417057]}, {Complex[
     0.1970634990912594, -0.14961556914940452`], Complex[-0.1456903650475429, 
     0.2007821611118766]}}, {{
     Complex[-0.680465484077335, -0.010010385550671713`], 
     Complex[-0.0097256042714125, 0.7326473090583869]}, {Complex[
     0.24500705742675058`, -0.13414862563934166`], 
     Complex[-0.13091500248077645`, 0.22398599843616854`]}}, {{
     Complex[-0.6471232305285499, -0.025199361174304442`], 
     Complex[-0.024740300660171872`, 0.7615671946010727]}, {Complex[
     0.29008252796952116`, -0.10829269539946097`], 
     Complex[-0.10939322676759937`, 0.23935355433526595`]}}, {{
     Complex[-0.6085146595763912, -0.03658159799778989], 
     Complex[-0.03674629537328654, 0.7918469390241163]}, {Complex[
     0.3291301348176336, -0.07323596747425949], Complex[-0.08288695026187409, 
     0.24569853848846676`]}}, {{
     Complex[-0.565572802830702, -0.043126440266088355`], 
     Complex[-0.045249737682431665`, 0.8223260667466239]}, {Complex[
     0.3592825304478675, -0.03093798369905298], 
     Complex[-0.053466775414876815`, 0.2425398323059068]}}, {{
     Complex[-0.5195554890968387, -0.04408952233142592], 
     Complex[-0.050025003148249064`, 0.8518309146318914]}, {Complex[
     0.3782289581873356, 0.01598553170936317], Complex[-0.023342387910115475`,
      0.2301489897764466]}}, {{
     Complex[-0.47196156964791725`, -0.0390834124577078], 
     Complex[-0.05112043056439154, 0.8792676962023674]}, {Complex[
     0.38443911720989477`, 0.06445069352011282], Complex[0.005324738386779219,
      0.20952850634216605`]}}, {{
     Complex[-0.42442330772395276`, -0.028121215435623206`], 
     Complex[-0.04884070659220452, 0.9037083979383512]}, {Complex[
     0.37731818201279244`, 0.11114811611462656`], Complex[0.03060569679244828,
      0.18231882883294528`]}}, {{
     Complex[-0.3785848439287054, -0.011627952508951007`], 
     Complex[-0.043707620728774176`, 0.9244610267083737]}, {Complex[
     0.3572732178340986, 0.15281304495481485`], Complex[0.050963906116608684`,
      0.1506419814783167]}}, {{Complex[-0.3359783567053855, 
     0.009581756558320921], Complex[-0.036403471890022, 
     0.9411172955710659]}, {Complex[0.32568373652567345`, 
     0.18649145748550283`], Complex[0.0653714403208514, 
     0.11689883904653589`]}}, {{Complex[-0.2979095880861201, 
     0.03435728633493792], Complex[-0.02770339589122808, 
     0.9535733934667389]}, {Complex[0.28478277899759824`, 0.2097719441713397],
      Complex[0.07336928495223369, 0.08354354783355093]}}, {{
     Complex[-0.2653628371316362, 0.061291056006259385`], 
     Complex[-0.018403956962703708`, 0.9620226080562478]}, {Complex[
     0.23746682280664547`, 0.2209597884730133], Complex[0.0750671098199904, 
     0.05286106836965755]}}, {{Complex[-0.2389327093537855, 
     0.0888148978125796], Complex[-0.009255358851097609, 
     0.9669217310319411]}, {Complex[0.18706060832749988`, 
     0.21917993920353632`], Complex[0.0710866659601132, 
     0.02677195629322559]}}, {{Complex[-0.21878645612001704`, 
     0.11530466466714799`], Complex[-0.000903656489983955, 
     0.968935865846834]}, {Complex[0.13706536649327808`, 
     0.20440706415329016`], Complex[0.06246000035680993, 
     0.006683001433801802]}}, {{Complex[-0.2046573248414958, 
     0.13918442943593787`], Complex[0.006152350970929862, 
     0.9688681113255483]}, {Complex[0.09091601018331569, 
     0.17743100918869276`], Complex[
     0.05049811217513811, -0.006605325024902558]}}, {{
     Complex[-0.19586655647595647`, 0.15902312625139098`], Complex[
     0.011586923414345555`, 0.9675814508026613]}, {Complex[
     0.05176597520380592, 0.13977272333248128`], Complex[
     0.036646992671703925`, -0.012931725997666798`]}}, {{
     Complex[-0.19136987460550045`, 0.17361854990667766`], Complex[
     0.015255299360740604`, 0.9659200905078862]}, {Complex[
     0.022309726936034172`, 0.09356802534861247], Complex[
     0.022346528024120477`, -0.012751197943979302`]}}, {{
     Complex[-0.18982358587974882`, 0.1820657102790567], Complex[
     0.01718488475181786, 0.9646366846425535]}, {Complex[0.004644833024409371,
      0.041434636828691106`], Complex[
     0.008904414740630985, -0.0070649905631556004`]}}, {{
     Complex[-0.18966555853147332`, 0.18380816853569945`], Complex[
     0.017552126065503663`, 0.964330661089715]}, {Complex[
     0.00016987822546989128`, -0.013667126650512904`], 
     Complex[-0.00260679753606944, 0.0026859090042638764`]}}, {{
     Complex[-0.18920697539412296`, 0.17867188661736308`], Complex[
     0.016648255382225564`, 0.9654015124748908]}, {Complex[
     0.00951246261889104, -0.0685758976131629], 
     Complex[-0.011425107426905726`, 0.014753050621808149`]}}, {{
     Complex[-0.18673140857206394`, 0.16688127131340136`], Complex[
     0.014837467957887557`, 0.9680196480292126]}, {Complex[
     0.0324831463241408, -0.12007444807883563`], Complex[-0.01714514057697323,
      0.027228983151586256`]}}, {{Complex[-0.1805980272934977, 
     0.14905669556172838`], Complex[0.012511209977326684`, 
     0.9721162945229906]}, {Complex[
     0.06805556542314854, -0.16504299529772393`], 
     Complex[-0.01973460198064123, 0.038203626794831615`]}}, {{
     Complex[-0.16934538506870728`, 0.1261922145290678], Complex[
     0.010042250322187463`, 0.9773929525237907]}, {Complex[
     0.11437838163491976`, -0.20062460694841963`], 
     Complex[-0.019521361441032115`, 0.04592088860862088]}}, {{
     Complex[-0.15179122810147502`, 0.09961192101073733], Complex[
     0.007742161366133354, 0.9833499428250851]}, {Complex[
     0.16882920947889415`, -0.22440253565158155`], 
     Complex[-0.01715170788445989, 0.048927395845642103`]}}, {{
     Complex[-0.12712236737189891`, 0.07090381880935903], Complex[
     0.005825732329100403, 0.98933248926626]}, {Complex[
     0.22812224688444752`, -0.23458232444962387`], 
     Complex[-0.013520986111111799`, 0.04620387248271114]}}, {{
     Complex[-0.09496731617106817, 0.04183148700079522], Complex[
     0.0043855996849144424`, 0.9945915059288924]}, {Complex[
     0.28847865126204947`, -0.23016343179305665`], 
     Complex[-0.009679420864357023, 0.037268136238998405`]}}, {{
     Complex[-0.0554436789078475, 0.01422616014938937], Complex[
     0.003379876097446252, 0.9983548249870411]}, {Complex[
     0.3458613883351303, -0.21107823105874357`], 
     Complex[-0.006718566549780759, 0.022237953635564606`]}}, {{
     Complex[-0.009172719663187, -0.010135139949321536`], Complex[
     0.0026346796153678955`, 0.9999031814109287]}, {Complex[
     0.3962652350071296, -0.1782729216836898], Complex[-0.005647142939447733, 
     0.0018430660142290407`]}}, {{Complex[
     0.03373660348366785, -0.0267910814001416], Complex[
     0.0020081308293748113`, 0.9990696771635076]}, {Complex[
     0.43027047935457985`, -0.14185995507348306`], 
     Complex[-0.00678463942374064, -0.018319864729416074`]}}, {{Complex[
     0.07971003155397499, -0.039317389214329035`], Complex[
     0.0011527705392053694`, 0.9960418180968882]}, {Complex[
     0.4551266412328591, -0.0988968141891352], 
     Complex[-0.010097764964994618`, -0.04031445484605807]}}, {{Complex[
     0.12772659588650354`, -0.047135612323968686`], 
     Complex[-0.0001647259360802282, 0.990688803825442]}, {Complex[
     0.46951452558243795`, -0.05137608964330487], 
     Complex[-0.015704616369815644`, -0.06298014246264359]}}, {{Complex[
     0.17665566195362803`, -0.04988844588812496], 
     Complex[-0.002179497598767202, 0.9830052673046504]}, {Complex[
     0.47265108285076063`, -0.0015523435792007133`], 
     Complex[-0.023519899932797166`, -0.08507095308703388]}}, {{Complex[
     0.2253159136354686, -0.04746039016222407], Complex[-0.005107061248729492,
      0.9731157992641767]}, {Complex[0.4643472890707622, 0.04818611939326385],
      Complex[-0.03325115757687078, -0.10533969033630415`]}}, {{Complex[
     0.2725381430935566, -0.03998438482665939], Complex[-0.009122359955074415,
      0.9612706095769458]}, {Complex[0.44502536337661275`, 
     0.09545791305536748], 
     Complex[-0.04441139497867146, -0.12262384313178781`]}}, {{Complex[
     0.3172276540773116, -0.027833728016871707`], 
     Complex[-0.01434093078802177, 0.947832491536904]}, {Complex[
     0.4156927570516946, 0.13802963394406897`], 
     Complex[-0.05634728252489513, -0.13592637114330264`]}}, {{Complex[
     0.35842177273903847`, -0.01159988788961305], 
     Complex[-0.020803708154449055`, 0.9332559546465381]}, {Complex[
     0.3778751094448163, 0.17394510942641744`], 
     Complex[-0.06828051907610659, -0.14448491850815745`]}}, {{Complex[
     0.39533855621850017`, 0.00794199451577271], 
     Complex[-0.028466642723838125`, 0.9180600178085984]}, {Complex[
     0.3335145491044729, 0.20163198285774278`], 
     Complex[-0.07935871566519846, -0.14782431857423903`]}}, {{Complex[
     0.42741356915527123`, 0.029877111634240384`], 
     Complex[-0.037195900585050165`, 0.9027965759876672]}, {Complex[
     0.2848431753592512, 0.21997757672883417`], 
     Complex[-0.08871140808016924, -0.1457890260830485]}}, {{Complex[
     0.4543227698180798, 0.05320106209547702], Complex[-0.04676893731697393, 
     0.8880165117925587]}, {Complex[0.234243527468334, 0.2283696723378426], 
     Complex[-0.09550667503495049, -0.1385542064719735]}}, {{Complex[
     0.47599078571304976`, 0.07687229997861532], Complex[-0.0568812929628397, 
     0.8742357390874301]}, {Complex[0.18410823249857852`, 0.2267018597842599],
      Complex[-0.09900427984925961, -0.12661620000461585`]}}, {{Complex[
     0.4925850833073646, 0.0998634331630565], Complex[-0.06715857278899381, 
     0.8619032083702625]}, {Complex[0.1367098287944338, 0.21534680603849807`],
      Complex[-0.09860215119281521, -0.11076472709761297`]}}, {{Complex[
     0.5044975542551249, 0.12120834621734225`], Complex[-0.07717280754381182, 
     0.8513725935581764]}, {Complex[0.09408933572589238, 
     0.19510363354057947`], 
     Complex[-0.09387416025830078, -0.09204026735284351]}}, {{Complex[
     0.5123157711163041, 0.1400428623341131], Complex[-0.0864622353908983, 
     0.8428789990787527]}, {Complex[0.05796897589917515, 
     0.16712725602144887`], 
     Complex[-0.08459830482053145, -0.07168046490415293]}}, {{Complex[
     0.5167865516087234, 0.15563750160961934`], Complex[-0.09455350722257005, 
     0.8365216303870359]}, {Complex[0.029691132281152957`, 
     0.13284787612128485`], 
     Complex[-0.07077535244693511, -0.051059226304097455`]}}, {{Complex[
     0.5187745285849259, 0.16742171027336863`], Complex[-0.10098535562385029`,
      0.8322530213678037]}, {Complex[0.010182672617648969`, 
     0.09388803458514136], 
     Complex[-0.05263856756101178, -0.031621550555133895`]}}, {{Complex[
     0.5192182122704604, 0.17499962003561448`], Complex[-0.10533284329111563`,
      0.829875139150926]}, {Complex[-0.00005839793151397269, 
     0.05198291669635581], 
     Complex[-0.030655279006591523`, -0.014816297684968975`]}}, {{Complex[
     0.5190856465355173, 0.17815787912195596`], Complex[-0.10723137379231319`,
      0.8290425002949925]}, {Complex[-0.0009581677694094516, 
     0.008907478618675557], 
     Complex[-0.00552076595548565, -0.0020283226495517786`]}}, {{Complex[
     0.5193313080606244, 0.17686635197074077`], Complex[-0.10639966944452786`,
      0.8292723132526955]}, {Complex[
     0.007151701948638462, -0.03358821054288204], Complex[
     0.021855627814072805`, 0.00548909331963537]}}, {{Complex[
     0.5208554752761195, 0.1712725311903834], Complex[-0.10266087716439506`, 
     0.8299615723022203]}, {Complex[0.02356259530046635, -0.0738358190136634],
      Complex[0.05037290619882641, 0.00668063168475698]}}, {{Complex[
     0.5244669781528297, 0.1616903966418305], Complex[-0.09596085508321214, 
     0.830410917545465]}, {Complex[
     0.04722528434432059, -0.11029936032847384`], Complex[0.07877064861823962,
      0.0007528127742608311]}}, {{Complex[0.5308500710656864, 
     0.14858426832814356`], Complex[-0.08638254587454092, 
     0.8298548945310764]}, {Complex[
     0.07679311348957525, -0.14162148757321788`], Complex[
     0.10567252173645836`, -0.012766862322915238`]}}, {{Complex[
     0.540536150791007, 0.1325480157558038], Complex[-0.07415520366608733, 
     0.8274979585600836]}, {Complex[0.11067246139008927`, -0.166666971051267],
      Complex[0.12964219085974288`, -0.033978871638713826`]}}, {{Complex[
     0.5556771589333742, 0.11204902154937586`], 
     Complex[-0.057849231297201355`, 0.8217795012962087]}, {Complex[
     0.15138684756627152`, -0.18614914687366185`], Complex[
     0.15118339387542856`, -0.06634205455647495]}}, {{Complex[
     0.5755834889960847, 0.0898502099235716], Complex[-0.03945541654478812, 
     0.8118337429246094]}, {Complex[
     0.19260414363355013`, -0.19596676780527297`], Complex[
     0.16544716634018106`, -0.10682522597283871`]}}, {{Complex[
     0.6001573600471808, 0.06708920191769666], Complex[-0.019909457811434307`,
      0.7968148868339134]}, {Complex[0.231633021204798, -0.1958723617649306], 
     Complex[0.17087340125513978`, -0.15370363618634353`]}}, {{Complex[
     0.6289944400905213, 0.044900466986214], Complex[-0.0003034302496890558, 
     0.7761121180297053]}, {Complex[
     0.26589252643105704`, -0.18617114174369684`], Complex[
     0.16634376242547488`, -0.20465506506025377`]}}, {{Complex[
     0.6614062153616966, 0.024350880370063034`], Complex[
     0.018173611691190444`, 0.749412267040914]}, {Complex[
     0.2930788735480186, -0.1677239551460475], Complex[
     0.15132115922973052`, -0.2568813228906736]}}, {{Complex[
     0.696461693439685, 0.006377096692036338], Complex[0.03430945473195486, 
     0.7167450619391668]}, {Complex[
     0.3113305367259903, -0.14191167556785533`], Complex[
     0.12595634359470775`, -0.30728680691531607`]}}, {{Complex[
     0.7330473329038718, -0.00827046536426941], Complex[0.04695208990478302, 
     0.6785048996798779]}, {Complex[
     0.31937524053189614`, -0.11055616204044544`], Complex[
     0.0911435735865923, -0.3527032740749806]}}, {{Complex[
     0.7699420567049363, -0.019071991587216182`], Complex[0.05509587383829418,
      0.6354448335118861]}, {Complex[
     0.3166407603710512, -0.07579864016819371], Complex[
     0.048511526557929535`, -0.39014158239689484`]}}, {{Complex[
     0.8059021744449705, -0.025766442601397363`], Complex[0.05796254387263409,
      0.5886410932380023]}, {Complex[
     0.30331295839011946`, -0.03994312975793219], Complex[
     0.00034314057615279954`, -0.417044707453806]}}, {{Complex[
     0.8397493713092651, -0.02836023862917334], Complex[0.055068958758545575`,
      0.5394296353441076]}, {Complex[
     0.28032939533279805`, -0.005278955182461627], 
     Complex[-0.05057232212433715, -0.4315135162085992]}}, {{Complex[
     0.8704539969157563, -0.027115084851227825`], Complex[0.04627439940047733,
      0.4893194609639049]}, {Complex[0.2493045339260058, 0.02609903111496898],
      Complex[-0.10114170547102568`, -0.43247856194455636`]}}, {{Complex[
     0.8972059461841688, -0.022515846047577264`], Complex[0.03180230957611309,
      0.4398902043793321]}, {Complex[0.21239165212617134`, 
     0.05245223474257901], 
     Complex[-0.14820326849898663`, -0.4197975698125904]}}, {{Complex[
     0.9194665362206624, -0.015221654305655424`], Complex[
     0.012234179333333135`, 0.3926832957105298]}, {Complex[
     0.17209535148985838`, 0.07252364010566811], 
     Complex[-0.18876836474570244`, -0.3942682599582562]}}, {{Complex[
     0.9369968034766057, -0.006005310496296505], 
     Complex[-0.011523591164708153`, 0.34909653113022654`]}, {Complex[
     0.13105523458227894`, 0.0856131532787855], 
     Complex[-0.2202425987986347, -0.357557799241182]}}, {{Complex[
     0.9498602543143574, 0.004312793804947735], Complex[-0.03829609909352353, 
     0.310291080602383]}, {Complex[0.09182464356793445, 0.09159657190978812], 
     Complex[-0.2406037427403181, -0.31206118133043376`]}}, {{Complex[
     0.958400870520854, 0.01492972015697365], Complex[-0.06671366287359233, 
     0.2771180279405488]}, {Complex[0.056667784977192416`, 
     0.0908895970392583], 
     Complex[-0.24852145627060754`, -0.2607090857412405]}}, {{Complex[
     0.9631996628953853, 0.02511806066796671], Complex[-0.09529572473129705, 
     0.2500688809362459]}, {Complex[0.027394471306711903`, 
     0.08436527209640761], 
     Complex[-0.2434134533543394, -0.20674983353795015`]}}, {{Complex[
     0.9650149298611963, 0.03427239503071681], Complex[-0.12253772863725448`, 
     0.22925162896016607`]}, {Complex[0.005245182271349087, 
     0.07323814332142604], 
     Complex[-0.2254421373733456, -0.15352952502672484`]}}, {{Complex[
     0.9647124175767144, 0.04194116597391449], Complex[-0.14699468534652618`, 
     0.21439136712394524`]}, {Complex[-0.009168311811082415, 
     0.058930642411878995`], 
     Complex[-0.1954630273471011, -0.10428993681639627`]}}, {{Complex[
     0.9631917741795218, 0.047842801928299865`], Complex[-0.1673567119606067, 
     0.20485263311152238`]}, {Complex[-0.01586840927644486, 
     0.04293672349068927], 
     Complex[-0.1549402780478249, -0.06199670139801776]}}, {{Complex[
     0.9613151812776403, 0.05186652345735131], Complex[-0.18251365395875202`, 
     0.19967960561206796`]}, {Complex[-0.01547002795775973, 
     0.026695241610046487`], 
     Complex[-0.10584485455262732`, -0.029202520909958347`]}}, {{Complex[
     0.9598430690992726, 0.05405950777678028], Complex[-0.19160755012462005`, 
     0.19765016941011718`]}, {Complex[-0.009101526366035352, 
     0.011481879516880079`], 
     Complex[-0.05054789426636394, -0.00794345864295696]}}, {{Complex[
     0.9593806458414572, 0.054602880717117684`], 
     Complex[-0.19407286332159943`, 0.19734035461243346`]}, {Complex[
     0.0017014950676392641`, -0.0016753859108252355`], Complex[
     0.008283430259465884, 0.00033793639813904354`]}}, {{Complex[
     0.9603378267879445, 0.053779391839778264`], 
     Complex[-0.18966490142314857`, 0.19719647885173133`]}, {Complex[
     0.015120240445985013`, -0.012055426702154537`], Complex[
     0.06778618726133159, -0.005149913504947054]}}, {{Complex[
     0.9629041792176499, 0.051935714330001714`], Complex[-0.1784766964219603, 
     0.19561309589053302`]}, {Complex[
     0.029187179338860038`, -0.019277877047615067`], Complex[
     0.12500191491999213`, -0.024504074218566187`]}}, {{Complex[
     0.9670397444694969, 0.04944223385746367], Complex[-0.1609439634679754, 
     0.19101526045362066`]}, {Complex[
     0.04192522349033707, -0.023312815193276108`], Complex[
     0.17698373130149708`, -0.05709625777257702]}}, {{Complex[
     0.9724820027568505, 0.04665307040613739], Complex[-0.13783691757230668`, 
     0.181943450095138]}, {Complex[0.05148684087143415, -0.02446719056548573],
      Complex[0.2209174639624553, -0.10155888705854427`]}}, {{Complex[
     0.9769947542606646, 0.04461742095206985], Complex[-0.11817608564083629`, 
     0.17182880770082032`]}, {Complex[
     0.05552236650896755, -0.02383640825499295], Complex[
     0.24630559042035768`, -0.14010521026524728`]}}, {{Complex[
     0.9793481279928273, 0.043629898788451436`], 
     Complex[-0.10761107500747136`, 0.1655104911430066]}, {Complex[
     0.05644058799407265, -0.023166419758505898`], Complex[
     0.25663613011122727`, -0.1610009469089679]}}, {{Complex[
     0.9817234019964831, 0.04267440320779196], Complex[-0.0966476882354414, 
     0.15829552168899072`]}, {Complex[
     0.05655808086111404, -0.02231866054439797], Complex[
     0.26526602552793904`, -0.18278854382716023`]}}}, {
   Automatic}], $CellContext`approxTraces$$ = {
   InterpolatingFunction[{{0., 46.19989196455578}}, {
    5, 3, 1, {90}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, CompressedData["
1:eJxFiHssFHAAxw+dnbmjnCXS5dEdKZHXlcPve3futMiiWHm13FwXFtVYD0qX
iOpSGqXmkpZ2HjePQrI88hjXal0PkXWr4w9jusRqytWWrc/23Wffj3NyRnSK
KYVCMfm7OMp/rlT0Rs20JpF/PrLsM2SqOfq3waJw+SsIz+1SzaxOtdxbydqp
DObjqC5SVkPtkni+I8f4cZxnSh1xUDema9wnSWT964Qq1RSR185FZG+eJWN7
iyvZ7w1EemWqqdJ5nhj6dg7Ypf8gOUuqsZLHi8Sca/nVwsRIGme+W9mcMMUn
omcrM6igX9cGbT5EQ6C+Z097kiVkAU2p4lgrvErjHDx8fBXSn85dVncwQWN0
t82brcb9RIWeF7EGaIhfKb/hgPEl96DBj47YranO7rFzgo+970unbmfYSnvc
zqa6YqEpKm+cycZ7o26E18lBe0Tm1gqpO27fMhb9sPZA7qTic2z7JhzwZfEe
JXsCefWlTLoXrklZC21x3jBlSF1kXltxvLk+0m6FD/T750/1j/gghhJck1Xv
i/4H+doNcj9wd2mM2lh/eFB3QEkNAKuzNy+1JQA2WaTbX8IF1bPDxMRmG37q
AwSarm2YvtMkL8/YDt3eLb3JrEC8oavMtrwIxMBzdujP0zx05FTlP/cIgtpv
Xd/VD0G4N32TGn8xGGX3bcUcbgiKE0oKDBMhuMtL3cjIJohnuEhtzYDJXwqu
SzhwdHqR5l0K/BqTjQaPAYXDb2vDXfmw6RDk7k/jo1KljjzUzMfGCkenrEU+
WoqKDHKhAOTkQk/JJQGGZJIblVoBYva9SqlbK4QuLJj7RCJEGldFG6wVYoFj
N/p2Tohzq/Nrv/BCQTc35BjOh6J8PjHSOBwKl4mh9QxbERrecA0OCSKEfVPe
vVMugs6atpulFeGkZ6ZRaSUGM3ykwXmnGHUyJFVfEENU8JDB7hbD7csZReKM
GBaIsS6zD8MffdM81g==
    
    "], {{{1., 0.}, {0., 
     0.0029437298274276966`}}, {{Complex[0.9999999999695378, 
      1.1422590388933962`*^-13], Complex[
      5.519217623447579*^-6, -2.0696031879697627`*^-8]}, {
      Complex[-1.6247313994509947`*^-8, 6.092352635366039*^-11], Complex[
      0.002943729827338024, -0.00001103843524723141]}}, {{Complex[
      0.9999999999086118, 4.569036155434399*^-13], Complex[
      0.000011038435246558882`, -6.208809563846235*^-8]}, {
      Complex[-3.2495541794766314`*^-8, 1.827705790535575*^-10], Complex[
      0.0029437298271586683`, -0.000022076870494126522`]}}, {{Complex[
      0.9999999997258232, 1.8276144619649715`*^-12], Complex[
      0.000022076870491772462`, -1.8626428692358113`*^-7]}, {
      Complex[-6.499656642797119*^-8, 5.483117370567373*^-10], Complex[
      0.0029437298266204934`, -0.00004415374099295973]}}, {{Complex[
      0.9999999994211414, 5.02593976946058*^-12], Complex[
      0.00003311530573429461, -3.932246057646757*^-7]}, {
      Complex[-9.750855674053193*^-8, 1.1575470000959022`*^-9], Complex[
      0.002943729825723164, -0.00006623061150288534]}}, {{Complex[
      0.9999999989945147, 1.0965686766882655`*^-11], Complex[
      0.00004415374097277751, -6.82969052212783*^-7]}, {
      Complex[-1.300369955713945*^-7, 2.0104763677217312`*^-9], Complex[
      0.002943729824466125, -0.0000883074820289395]}}, {{Complex[
      0.9999999879800163, 4.975680339349598*^-10], Complex[
      0.00015453809272175537`, -8.133540571139116*^-6]}, {
      Complex[-4.5743227675499227`*^-7, 2.3942945677568022`*^-8], Complex[
      0.002943729791809407, -0.0003090761891240473]}}, {{Complex[
      0.999999964544891, 2.263500463413294*^-9], Complex[
      0.0002649224425291006, -0.000023862525061058264`]}, {
      Complex[-7.925035333804282*^-7, 7.024482368369295*^-8], Complex[
      0.0029437297209072085`, -0.0005298449036048473]}}, {{Complex[
      0.999999928298506, 6.2225700714082945`*^-9], Complex[
      0.0003753067888816263, -0.00004786992289136276]}, {
      Complex[-1.1407336056631923`*^-6, 1.4091610688099826`*^-7], Complex[
      0.0029437296075431607`, -0.000750613630401875]}}, {{Complex[
      0.9999993955498, 1.356130246455871*^-7], Complex[
      0.0010200620534866795`, -0.00035349312554749414`]}, {
      Complex[-3.7239575035235108`*^-6, 1.040587643117388*^-6], Complex[
      0.002943727589118495, -0.0020401251548747648`]}}, {{Complex[
      0.9999984739431843, 4.278892986790138*^-7], Complex[
      0.001529267538945245, -0.0007944764449780569]}, {
      Complex[-6.931688401500055*^-6, 2.338720219399219*^-6], Complex[
      0.002943722927819181, -0.003058538441815061]}}, {{Complex[
      0.9999968576590283, 9.89568122580298*^-7], Complex[
      0.0020384717522097416`, -0.0014116247924589095`]}, {
      Complex[-0.000011755841998756933`, 4.15542875692724*^-6], Complex[
      0.00294371287996896, -0.00407695098468098]}}, {{Complex[
      0.9999948148892394, 1.7060041714244095`*^-6], Complex[
      0.0024530885863163062`, -0.0020442561920761674`]}, {
      Complex[-0.000017250760644400787`, 6.017707687565085*^-6], Complex[
      0.002943698330500854, -0.004906189321784648]}}, {{Complex[
      0.9999918771020266, 2.7089517710404186`*^-6], Complex[
      0.0028677027882081985`, -0.0027936843532821126`]}, {
      Complex[-0.00002446477029145115, 8.223790620666755*^-6], Complex[
      0.002943675503459145, -0.005735423354732102]}}, {{Complex[
      0.9999877817036746, 4.0468344936429205`*^-6], Complex[
      0.003282312992393302, -0.003659908441830259]}, {
      Complex[-0.00003368842607082934, 0.000010773667011068928`], Complex[
      0.0029436415644898558`, -0.006564649845833128]}}, {{Complex[
      0.999979143147592, 6.692362727941555*^-6], Complex[
      0.003887759526904652, -0.005134668640411454]}, {
      Complex[-0.0000513699235087427, 0.000015114819847908405`], Complex[
      0.002943565246200731, -0.007775550645290432]}}, {{Complex[
      0.9999662609907637, 0.00001031047670413139], Complex[
      0.004493186042759161, -0.00685848482341725]}, {
      Complex[-0.00007486131850755676, 0.000020189002539824206`], Complex[
      0.002943446225026716, -0.008986406626450723]}}, {{Complex[
      0.9999478720520131, 0.00001504763414357328], Complex[
      0.005098582498912296, -0.008831345294025902]}, {
      Complex[-0.0001050672981973538, 0.000025996105006873463`], Complex[
      0.0029432706434725908`, -0.010197191722826501`]}}, {{Complex[
      0.9999225022351658, 0.0000210545675810095], Complex[
      0.005703935660865186, -0.011053232060084716`]}, {
      Complex[-0.00014289242042338067`, 0.00003253596513471659], Complex[
      0.002943022591133881, -0.011407871329675065`]}}, {{Complex[
      0.999853692429785, 0.00003557773708761419], Complex[
      0.006795310857740049, -0.015688879352629383`]}, {
      Complex[-0.00023324940075955243`, 0.00004617937092568865], Complex[
      0.002942333516732109, -0.01359048969803227]}}, {{Complex[
      0.9997454253934853, 0.00005560224572898787], Complex[
      0.007886357524728584, -0.021133861117966436`]}, {
      Complex[-0.0003566186939476283, 0.00006220238648739699], Complex[
      0.0029412278376885733`, -0.01577226605977308]}}, {{Complex[
      0.9995844494916412, 0.00008201006494403096], Complex[
      0.008976894878991323, -0.027387778932443898`]}, {
      Complex[-0.0005182951698911552, 0.00008060175689956116], Complex[
      0.002939562757537615, -0.01795271691102741]}}, {{Complex[
      0.9993555911399989, 0.00011568167946951722`], Complex[
      0.010066685972520903`, -0.034450028528588854`]}, {
      Complex[-0.0007235661729466806, 0.00010137260801993882`], Complex[
      0.0029371744518728307`, -0.020131204249187355`]}}, {{Complex[
      0.9990417034316834, 0.00015749539204384035`], Complex[
      0.011155428936711046`, -0.04231973642410094]}, {
      Complex[-0.000977707907111175, 0.00012450797843447013`], Complex[
      0.0029338779674915865`, -0.022306913420689425`]}}, {{Complex[
      0.9983481641506621, 0.00023973812292589535`], Complex[
      0.012827495784446731`, -0.0560008529109762]}, {
      Complex[-0.0014762362047875297`, 0.0001646952164955079], Complex[
      0.002926552210578135, -0.02564635734359394]}}, {{Complex[
      0.9973290911629813, 0.0003464894553194784], Complex[
      0.014494431738824146`, -0.07158373369792202]}, {
      Complex[-0.0021219295473944486`, 0.0002104049685908734], Complex[
      0.002915737548990151, -0.028972045727783242`]}}, {{Complex[
      0.9958951244018299, 0.00048088030093927994`], Complex[
      0.016153975076638558`, -0.08905883424904744]}, {
      Complex[-0.0029336496217710886`, 0.0002615629457455838], Complex[
      0.0029004723793807224`, -0.03227784691918807]}}, {{Complex[
      0.9939462122194606, 0.0006459911521225174], Complex[
      0.017803285811537138`, -0.10841269110715301`]}, {
      Complex[-0.003929991066465381, 0.0003180645895636251], Complex[
      0.0028796819988064735`, -0.03555604449784998]}}, {{Complex[
      0.9913717938392698, 0.0008448324456856787], Complex[
      0.01943887862144679, -0.12962693950628332`]}, {
      Complex[-0.005129177333875318, 0.00037976785097820754`], Complex[
      0.002852181839679393, -0.038797164398143034`]}}, {{Complex[
      0.988051046067666, 0.0010803209985104695`], Complex[
      0.021056561888699928`, -0.15267726712060833`]}, {
      Complex[-0.0065489340096285325`, 0.00044648526703397473`], Complex[
      0.002816681818932462, -0.04198980794157623]}}, {{Complex[
      0.9816097537560338, 0.001494455600954905], Complex[
      0.02336957828962442, -0.1894563294614184]}, {
      Complex[-0.009045564026265149, 0.0005520834761839653], Complex[
      0.002747802543547493, -0.046523512306952175`]}}, {{Complex[
      0.9728677741338265, 0.0020001874251008175`], Complex[
      0.025615502057343534`, -0.22993024600530132`]}, {
      Complex[-0.012095251900538801`, 0.000666795049010621], Complex[
      0.00265436572398687, -0.05087523050068029]}}, {{Complex[
      0.961346862661711, 0.00260455636033064], Complex[
      0.027771883989141714`, -0.27392322155021376`]}, {
      Complex[-0.01574221666033822, 0.0007892796337881963], Complex[
      0.0025313910909598113`, -0.05498392323083578]}}, {{Complex[
      0.9465347469810285, 0.0033133226478568112`], Complex[
      0.029812021528212423`, -0.3212040308988731]}, {
      Complex[-0.020023804337988622`, 0.0009177833548113815], Complex[
      0.002373637871851868, -0.05877704192057212]}}, {{Complex[
      0.9278916663437518, 0.004130594623410584], Complex[
      0.031704788407201624`, -0.37147624556939873`]}, {
      Complex[-0.024968477831322847`, 0.0010500721108519945`], Complex[
      0.0021757191599478115`, -0.062170124647191814`]}}, {{Complex[
      0.9048586961199172, 0.005058402457499637], Complex[
      0.03341457140373604, -0.4243682718616143]}, {
      Complex[-0.030593503077435406`, 0.0011833671957382315`], Complex[
      0.001932247095385, -0.06506670771494842]}}, {{Complex[
      0.8768681090891403, 0.00609622107437744], Complex[
      0.03490134158199725, -0.4794234806167231]}, {
      Complex[-0.036902349686118406`, 0.0013142870667337944`], Complex[
      0.001638012439813677, -0.06735863819432814]}}, {{Complex[
      0.8433560063327317, 0.007240448630239772], Complex[
      0.03612089015107532, -0.5360907921404076]}, {
      Complex[-0.04388183749732628, 0.0014387996803171938`], Complex[
      0.0012882015967998935`, -0.06892687481864845]}}, {{Complex[
      0.8037774069832182, 0.008483851576440568], Complex[
      0.037025260923673885`, -0.5937161612144287]}, {
      Complex[-0.05149908280083072, 0.0015521907393998245`], Complex[
      0.0008786530540313572, -0.06964287198783153]}}, {{Complex[
      0.7576239318138996, 0.009814992077808919], Complex[
      0.037563412428109434`, -0.6515354880535861]}, {
      Complex[-0.059698323051598334`, 0.0016490540568626566`], Complex[
      0.0004061537297677612, -0.06937064432242444]}}, {{Complex[
      0.704444139341214, 0.0112176589975952], Complex[
      0.03768214236230008, -0.7086695604250601]}, {
      Complex[-0.0683977270310052, 0.001723310992998532], 
      Complex[-0.00013122627431675239`, -0.06796960729717663]}}, {{Complex[
      0.6438664713179276, 0.01267032971293418], Complex[
      0.037327304816346066`, -0.7641217089292301]}, {
      Complex[-0.07748632894033837, 0.0017682665434564089`], 
      Complex[-0.0007337645551071525, -0.06529828167789979]}}, {{Complex[
      0.5756246354117456, 0.014145696498936825`], Complex[
      0.03644534607182854, -0.8167789245885083]}, {
      Complex[-0.08682125887353019, 0.0017767100279805679`], 
      Complex[-0.0013996900967260298`, -0.06121893439348148]}}, {{Complex[
      0.49958509504312043`, 0.015610297857999014`], Complex[
      0.03498517732295372, -0.8654172389388928]}, {
      Complex[-0.09622547727826547, 0.0017410683440482995`], 
      Complex[-0.002124770658430376, -0.05560320445894728]}}, {{Complex[
      0.41577614936993323`, 0.01702430162875639], Complex[
      0.032900391876005304`, -0.9087121936858592]}, {
      Complex[-0.10548625567045737`, 0.0016536192737720778`], 
      Complex[-0.0029018990270913486`, -0.04833872819344898]}}, {{Complex[
      0.3244178716080579, 0.0183414925195394], Complex[
      0.030151819844819606`, -0.9452552205498883]}, {
      Complex[-0.11435467774069305`, 0.0015067712258908452`], 
      Complex[-0.0037206980347065407`, -0.03933673194772828]}}, {{Complex[
      0.22595193473728342`, 0.019509521289276844`], Complex[
      0.02671039474698441, -0.9735767020550047]}, {
      Complex[-0.12254646117366617`, 0.001293413909852702], 
      Complex[-0.004567169281775571, -0.02854050191303755]}}, {{Complex[
      0.14018557751417327`, 0.020317165511230285`], Complex[
      0.02335172958093275, -0.9896412724961132]}, {
      Complex[-0.12854987181792268`, 0.001063865461504872], 
      Complex[-0.005271079817569095, -0.01831200144315215]}}, {{Complex[
      0.05060307077403965, 0.02095049352498065], Complex[
      0.019513519464266396`, -0.9983083525697943]}, {
      Complex[-0.1336917923620549, 0.0007824153116587592], 
      Complex[-0.005969678590560597, -0.006876945974624335]}}, {{
      Complex[-0.0421391270457029, 0.021373357546688846`], Complex[
      0.015204018308969695`, -0.9987673638652366]}, {
      Complex[-0.13777083716215244`, 0.00044714489106338585`], 
      Complex[-0.006649102987469157, 0.005721058472872893]}}, {{
      Complex[-0.137244325113665, 0.021548651943803367`], Complex[
      0.010441574213915533`, -0.9902477261130882]}, {
      Complex[-0.14057817371435247`, 0.00005720277577441683], 
      Complex[-0.00729365795431659, 0.019407903138660358`]}}, {{
      Complex[-0.23377181445360726`, 0.021439120578832148`], Complex[
      0.0052558487106271305`, -0.9720408479988328]}, {
      Complex[-0.14190154151713444`, -0.0003869594484588149], 
      Complex[-0.007885924818148104, 0.0340755612809507]}}, {{
      Complex[-0.3306361511087605, 0.021008329097133942`], 
      Complex[-0.00031106566420107507`, -0.9435243589870008]}, {
      Complex[-0.14153012975934584`, -0.0008833464067136486], 
      Complex[-0.00840694765979325, 0.04957904313022781]}}, {{
      Complex[-0.42661006115932315`, 0.02022180064867692], 
      Complex[-0.006203684152688663, -0.9041882379738213]}, {
      Complex[-0.13926034307842022`, -0.0014281804054942415`], 
      Complex[-0.00883650822048769, 0.06573388104987525]}}, {{
      Complex[-0.5203315847078959, 0.019048311047631463`], 
      Complex[-0.012352389238241016`, -0.8536624246643911]}, {
      Complex[-0.13490243436510876`, -0.00201567567266381], 
      Complex[-0.009153498134533098, 0.08231435278567163]}}, {{
      Complex[-0.6103160302893949, 0.017461330310950242`], 
      Complex[-0.01867297956501887, -0.791745330155916]}, {
      Complex[-0.1282879566393088, -0.00263783703701536], 
      Complex[-0.009336395879185947, 0.09905265228706579]}}, {{
      Complex[-0.6949732722064251, 0.015440589498567404`], 
      Complex[-0.02506658167918423, -0.7184325270489522]}, {
      Complex[-0.11927793905597661`, -0.0032842968789724234`], 
      Complex[-0.00936385292977517, 0.1156392356819919]}}, {{
      Complex[-0.7726308378495098, 0.012973741464145911`], 
      Complex[-0.03141999964330663, -0.6339447365670062]}, {
      Complex[-0.10777164325558791`, -0.003942205682912422], 
      Complex[-0.009215390068490953, 0.13172457024463088`]}}, {{
      Complex[-0.8415631168437507, 0.01005807332419747], 
      Complex[-0.03760657680794062, -0.538754078736277]}, {
      Complex[-0.0937157003168211, -0.004596192910486667], 
      Complex[-0.008872200208035178, 0.14692251060509798`]}}, {{
      Complex[-0.9000268666369202, 0.0067022166583000035`], 
      Complex[-0.04348763967339431, -0.4336074021236883]}, {
      Complex[-0.07711336879662861, -0.005228415709011223], 
      Complex[-0.008318048574933842, 0.16081550884132617`]}}, {{
      Complex[-0.9463029909074534, 0.0029277894245572566`], 
      Complex[-0.0489145853811151, -0.3195453786936617]}, {
      Complex[-0.058033591811647, -0.005818713152137685], 
      Complex[-0.007540254627975232, 0.17296183554640449`]}}, {{
      Complex[-0.9741192930240974, -0.0004737335422656413], 
      Complex[-0.05293712978419185, -0.2197472282326455]}, {
      Complex[-0.040538980647384495`, -0.0062581833137622615`], 
      Complex[-0.006724917041501013, 0.18133910823864757`]}}, {{
      Complex[-0.9916680946672758, -0.004107280465385911], 
      Complex[-0.056455879761241515`, -0.1157153753218487]}, {
      Complex[-0.021577825809267443`, -0.006640798111771994], 
      Complex[-0.005750285373049731, 0.18796080222959016`]}}, {{
      Complex[-0.9981674298948157, -0.007936969151753131], 
      Complex[-0.05938139022902995, -0.008510013275186473]}, {
      Complex[-0.001311808670375032, -0.006952715105830232], 
      Complex[-0.004617697797836141, 0.19257245024290054`]}}, {{
      Complex[-0.9929380373789135, -0.011919032415327685`], 
      Complex[-0.06162591249150508, 0.10066781631653349`]}, {Complex[
      0.020055622493444284`, -0.007179804935986366], 
      Complex[-0.0033319032990466284`, 0.194929050128602]}}, {{
      Complex[-0.9754271794435521, -0.016001739687107427`], 
      Complex[-0.06310541629681304, 0.2104833162862638]}, {Complex[
      0.04227830277502747, -0.00730796174731376], 
      Complex[-0.0019014221021936295`, 0.1948015426579749]}}, {{
      Complex[-0.9452327451498699, -0.020125509783243612`], 
      Complex[-0.06374180424574016, 0.319478867949689]}, {Complex[
      0.06506731756711426, -0.0073234621091028875`], 
      Complex[-0.0003388599731741996, 0.19198381004110754`]}}, {{
      Complex[-0.9021270793286527, -0.02422323833313187], 
      Complex[-0.06346528585676045, 0.4260890183497667]}, {Complex[
      0.08809202296640224, -0.007213372517392664], Complex[
      0.0013388389603923388`, 0.18630012382636468`]}}, {{
      Complex[-0.8460799085126297, -0.028220867547052022`], 
      Complex[-0.06221687257541094, 0.528659758341258]}, {Complex[
      0.1109822646434884, -0.006965999883849432], Complex[
      0.0031102198695659496`, 0.17761288460894592`]}}, {{
      Complex[-0.7772796500481405, -0.03203822003562612], 
      Complex[-0.05995094266494898, 0.6254721979744432]}, {Complex[
      0.13333191779285747`, -0.006571379018952106], Complex[
      0.004949243618449301, 0.16583049069918473`]}}, {{
      Complex[-0.6961523312068284, -0.0355901154636271], 
      Complex[-0.05663781537942598, 0.7147706616535537]}, {Complex[
      0.15470385777105072`, -0.006021787706708923], Complex[
      0.006825330934939949, 0.15091512717644312`]}}, {{
      Complex[-0.6033772877800845, -0.03878778217342237], 
      Complex[-0.052266262793003226`, 0.7947950899622357]}, {Complex[
      0.17463644021229144`, -0.005312277711040233], Complex[
      0.008703542467872444, 0.1328902396007801]}}, {{
      Complex[-0.4998987784944225, -0.04154056887120151], 
      Complex[-0.046845878035029015`, 0.8638174978722925]}, {Complex[
      0.1926515371716098, -0.004441207057702068], Complex[
      0.010544911675303904`, 0.11184742331557135`]}}, {{
      Complex[-0.38693263579883613`, -0.043757952289482364`], 
      Complex[-0.04040920961399416, 0.9201820778603808]}, {Complex[
      0.20826413202816604`, -0.0034107562739359304`], Complex[
      0.012306945133984422`, 0.08795243385795296]}}, {{
      Complex[-0.26596708656831164`, -0.04535182630756036], 
      Complex[-0.033013564225200145`, 0.9623483653319441]}, {Complex[
      0.22099342617000595`, -0.002227408557669842], Complex[
      0.013944301677297074`, 0.06145000204275369]}}, {{
      Complex[-0.1387569183039587, -0.0462390460093685], 
      Complex[-0.02474237514054649, 0.9889367008564103]}, {Complex[
      0.2303753520310134, -0.0009023714740620082], Complex[
      0.015409657445602114`, 0.032667123686101814`]}}, {{
      Complex[-0.007310243935493575, -0.04634418698246168], 
      Complex[-0.01570603077446696, 0.9987750364060507]}, {Complex[
      0.23597632248243344`, 0.0005480842262972563], Complex[
      0.01665475855575033, 0.0020144893204249855`]}}, {{Complex[
      0.12613276651954386`, -0.045602465986133156`], 
      Complex[-0.00604205882599571, 0.9909459456784349]}, {Complex[
      0.23740797606115976`, 0.0021023944767015945`], Complex[
      0.01763165659817253, -0.030014273746316763`]}}, {{Complex[
      0.2591296629525417, -0.04396275437039611], Complex[0.004085433826057974,
       0.964832519237148]}, {Complex[0.23434260333990964`, 
      0.0037336069093833633`], Complex[
      0.018294114634644195`, -0.0628458543799189]}}, {{Complex[
      0.3890742778779598, -0.04139060076841222], Complex[
      0.014487156014675803`, 0.9201616614061303]}, {Complex[
      0.22652886380709925`, 0.005409447167998453], Complex[
      0.018599162885234544`, -0.09583327743842637]}}, {{Complex[
      0.5132441108347341, -0.037871165212838086`], Complex[
      0.024950938212951995`, 0.8570431666917089]}, {Complex[
      0.21380732786729592`, 0.007092571228152756], Complex[
      0.01850877404151246, -0.12826491017692757`]}}, {{Complex[
      0.6288562883779593, -0.03341195362495522], Complex[0.03524500609247839, 
      0.7760028486407544]}, {Complex[0.19612530817041393`, 
      0.008741025685906224], Complex[
      0.017991618364523405`, -0.1593766050636939]}}, {{Complex[
      0.7159082553147387, -0.02904281716191053], Complex[
      0.043443381642572984`, 0.6962354317136128]}, {Complex[
      0.17782643520783617`, 0.010043800356501388`], Complex[
      0.017226227409373917`, -0.1835070085634095]}}, {{Complex[
      0.7936960676698813, -0.024086075217919785`], Complex[
      0.051213017802507005`, 0.6056755187029222]}, {Complex[
      0.15629340612316003`, 0.011264259765588026`], Complex[
      0.016146313223934877`, -0.20572905512502657`]}}, {{Complex[
      0.8607532145370864, -0.018586569648032205`], Complex[
      0.05840694429116269, 0.50531796803912]}, {Complex[0.13169658625596425`, 
      0.012374009320642972`], Complex[
      0.014749603810277694`, -0.22558024543604774`]}}, {{Complex[
      0.9157079874809875, -0.012602465987666622`], Complex[
      0.06487850807561434, 0.3963710314446362]}, {Complex[
      0.10427380288107711`, 0.013344208025696226`], Complex[
      0.013039826595207873`, -0.24260650528116026`]}}, {{Complex[
      0.9573152083241138, -0.006205329261476008], Complex[0.07048428575535076,
       0.28025021968458563`]}, {Complex[0.0743316782593424, 
      0.01414615967475187], Complex[
      0.01102722910429738, -0.25637201355866407`]}}, {{Complex[
      0.9844882578230791, 0.0005200945287764287], Complex[0.07508721802981809,
       0.15856740082273968`]}, {Complex[0.04224558456497566, 
      0.01475196803819704], Complex[
      0.008729003288289894, -0.2664696097262331]}}, {{Complex[
      0.9947935199514278, 0.005673316911196311], Complex[0.07778233596022359, 
      0.06559489535580691]}, {Complex[0.01727268244719972, 
      0.015059418881751592`], Complex[
      0.006850338576004924, -0.2713782133791733]}}, {{Complex[
      0.9963379419486853, 0.010910063341686774`], Complex[
      0.0798052747415099, -0.028668847418762897`]}, {
      Complex[-0.008436436548385063, 0.01523389174515258], Complex[
      0.004839968953151146, -0.27392396048569445`]}}}, {
    Automatic}]}, $CellContext`\[Psi]0$$ = {1, 0}, $CellContext`gateAngle$$ = 
  Pi, $CellContext`tMax$$ = 46.19989196455578, $CellContext`H1func$$ = 
  Function[$CellContext`t$, \
$CellContext`selectedH1Profile$$[$CellContext`t$/$CellContext`tMax$$] 
   FE`H1avg$$88], $CellContext`vals$$ = {$CellContext`ww -> 
   1., $CellContext`Delta -> 0., $CellContext`phi -> 
   0.}, $CellContext`hOrigFunc$$ = 
  Function[{$CellContext`t, $CellContext`\[Alpha]0}, {{
    0., 0. + 0.005887459654855393 $CellContext`t (1. + 
       Cos[0. + 2. $CellContext`t] + 
       Complex[0, 1] Sin[0. + 2. $CellContext`t])}, {
    0. + 0.005887459654855393 $CellContext`t (1. + 
       Cos[0. + 2. $CellContext`t] + 
       Complex[0, -1] Sin[0. + 2. $CellContext`t]), 
     0.}}], $CellContext`tCoincidence$$ = {0., 3.141592653589793, 
  6.283185307179586, 9.42477796076938, 12.566370614359172`, 
  15.707963267948966`, 18.84955592153876, 21.991148575128552`, 
  25.132741228718345`, 28.274333882308138`, 31.41592653589793, 
  34.55751918948772, 37.69911184307752, 40.840704496667314`, 
  43.982297150257104`}, $CellContext`t0$$ = 0., $CellContext`tC$$ = 
  3.141592653589793, $CellContext`relevantTCoincidence$$ = {0., 
  3.141592653589793, 6.283185307179586, 9.42477796076938, 12.566370614359172`,
   15.707963267948966`, 18.84955592153876, 21.991148575128552`, 
  25.132741228718345`, 28.274333882308138`, 31.41592653589793, 
  34.55751918948772, 37.69911184307752, 40.840704496667314`, 
  43.982297150257104`}, $CellContext`selectedH1Profile$$ = 
  Function[$CellContext`t, 2 $CellContext`t], $CellContext`selectedH1Index$$ =
   2, $CellContext`numSelectedOrders$$ = 
  1, $CellContext`selectedJmpOperators$$, $CellContext`approx\[Psi]0$$, \
$CellContext`jmpFuncs$$, $CellContext`calculatedOrders$$ = {
  2}, $CellContext`\[Alpha]f$$, $CellContext`finalJumps$$, \
$CellContext`firstCoincidenceState$$ = {Complex[1., 0.], Complex[0., 
  0.]}, $CellContext`Omg1$$, $CellContext`Omg2$$, $CellContext`OmgCool$$, \
$CellContext`coolStates$$ = CompressedData["
1:eJxTTMoPSuNnYGAoZgESPpnFJWlMmDx2IOGcn1uQk1pRxAAGH+yhDAYGXEoY
GNCU4DYzZq+rleGf9/ZF1tJBy9qu6u/HVLLt4lKru++b7Iu+97fdYtw/dz8h
M0U2yAlFHAea+UA/paxfl9seU4mv2SaHa9cm2Rd5aPd4uK7fS9DMczIyXonP
3tkXzVhxNdqVNxyLmawaaTatq2bbF61bxn/wTvcFgmZOO9tuyzD1jX1RkFOm
0raUQixmntXZGPQga6F90RnJx0zqm+4QNHNh4rEXmo+f2xcxbYvY6HmiEYuZ
/Bv22p/RWww001Vh1wvHpwTNlLsmeOLX1/v2Rcsibt+8wdCLxcw5Fy6GeR8F
uvOkQrv7zk2vCZppdbLX723ZIfuiyr2qOx+2TMZiZtLqhrlrVk+3L9owp3LN
zGXvCZrp+W0Ow9q0S/uLmKInRSRwTsVipoDaNJaA5dH2RXN+nD/kvuQdQTPv
K18W017ybH/RM5eiqF28/VjMPH0xfruVz+z9Rf93xt2fM/0ZQTOLhN8py8u8
31/UcFD0bJ2CBxYzszblzfK0Wb2/aN/K85fzjc4SNNP30TaT+jlv9xdpOU4v
WKk1FUs+mh/O82xJ1ob9RQaX020THly3J2RmRr7RlfjC+/uL/m5lSjg6bwkW
M08wJnrvPL18f9GtBY4L4s6+JmjmgoV/L5ennbYv0nntF8TTtgyLmQfinzJZ
2/vYF+1ZY7/rt+V7gma67qvXefPtlX3R7ekXpHekYPP7uV/3ozZrrLUv4tt/
Zruk/EN7AE+CntU=
  "]}, 
  TagBox[GridBox[{
     {
      TemplateBox[{InterpretationBox[
         Cell[
          BoxData[
           FormBox["\"Select driving envelope:  \"", TextForm]], 
          "InlineText"], 
         Text["Select driving envelope:  "]],PopupMenuBox[
         Dynamic[$CellContext`selectedH1Index$$], {
         1 -> "\"constant\"", 2 -> "\"linear increase\""}],DynamicBox[
         ToBoxes[
          Plot[
           
           Part[$CellContext`H1pList, \
$CellContext`selectedH1Index$$][$CellContext`t], {$CellContext`t, 0, 1}, 
           AxesLabel -> {"t/t_max", "H1/H1_avg"}, PlotLabel -> 
           "driving envelope H1(t)", ImageSize -> Medium], StandardForm]]},
       "RowDefault"]},
     {
      TagBox[
       StyleBox[
        DynamicModuleBox[{$CellContext`DeltaIn$$ = 0., $CellContext`H1avg$$ = 
         0.544, $CellContext`phiIn$$ = 0., $CellContext`selectedOrders$$ = {
         2}, $CellContext`selectedPlots$$ = {1}, $CellContext`tM$$ = 
         1., $CellContext`wwIn$$ = 1., $CellContext`\[Alpha]0$$ = 0., 
         Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
         Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
         Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
         Typeset`specs$$ = {{{
            Hold[$CellContext`tM$$], 0.01, 
            "Time t / \!\(\*SubscriptBox[\(t\), \(gate\)]\)"}, 0.01, 1.}, {{
            Hold[$CellContext`\[Alpha]0$$], 0., "Offset \[Alpha]0"}, 0., 
           Pi}, {{
            Hold[$CellContext`H1avg$$], 0.2, "Average drive strength H1_avg"},
            0.01, 2.}, {{
            Hold[$CellContext`selectedOrders$$], {1, 2}, 
            "Show Magnus orders"}, {1 -> Graphics[{
               Text[0], 
               EdgeForm[
                Thickness[Tiny]], 
               RGBColor[0.122103, 0.00901808, 0.39826], 
               Rectangle[{1, -0.5}]}, ImageSize -> {30, 12}], 2 -> Graphics[{
               Text[1], 
               EdgeForm[
                Thickness[Tiny]], 
               RGBColor[0.175507, 0.652273, 0.528496], 
               Rectangle[{1, -0.5}]}, ImageSize -> {30, 12}], 3 -> Graphics[{
               Text[2], 
               EdgeForm[
                Thickness[Tiny]], 
               RGBColor[0.914809, 0.897673, 0.350652], 
               Rectangle[{1, -0.5}]}, ImageSize -> {30, 12}]}}, {{
            Hold[$CellContext`wwIn$$], 1., "Drive frequency \[Omega]"}, 0.01, 
           2.}, {{
            Hold[$CellContext`DeltaIn$$], 0., 
            "Qubit detuning \[CapitalDelta]"}, -1., 1.}, {{
            Hold[$CellContext`phiIn$$], 0., "Rotation axis angle \[Phi]"}, -
           Pi, Pi}, {{
            Hold[$CellContext`selectedPlots$$], {1}, "Visualizations"}, 
           Dynamic[
            Table[$CellContext`i -> Part[{{
                 Hold[
                  Show[
                   Join[{
                    $CellContext`PlotBlochTraceFromState[$CellContext`\
origTrace$$, {0, $CellContext`tM$$ $CellContext`tMax$$}, PlotStyle -> Red], 
                    $CellContext`PlotBlochVectorFromState[
                    $CellContext`origTrace$$[$CellContext`tM$$ \
$CellContext`tMax$$], {Red, 
                    Thickness[0.015]}], 
                    $CellContext`PlotBlochVector[
                    $CellContext`RotationAxisFromHamiltonian[
                    $CellContext`hOrigFunc$$[$CellContext`tM$$ \
$CellContext`tMax$$, 0.]], {Gray, 
                    Thickness[0.01]}], 
                    $CellContext`PlotBlochPointsFromStates[
                    
                    Map[$CellContext`origTrace$$, \
$CellContext`relevantTCoincidence$$], {
                    PointSize[Large], Red}]}, 
                    Table[
                    $CellContext`PlotBlochTraceFromState[
                    Part[$CellContext`approxTraces$$, $CellContext`i], {
                    0, $CellContext`tM$$ $CellContext`tMax$$}, PlotStyle -> 
                    Part[$CellContext`approxColors, 
                    
                    Part[$CellContext`calculatedOrders$$, $CellContext`i]]], \
{$CellContext`i, $CellContext`numSelectedOrders$$}], 
                    Table[
                    $CellContext`PlotBlochPointsFromStates[
                    Map[
                    
                    Part[$CellContext`approxTraces$$, $CellContext`i], \
$CellContext`relevantTCoincidence$$], {
                    PointSize[Large], 
                    Part[$CellContext`approxColors, 
                    
                    Part[$CellContext`calculatedOrders$$, $CellContext`i]]}], \
{$CellContext`i, $CellContext`numSelectedOrders$$}], {
                    $CellContext`PlotBlochPointsFromStates[$CellContext`\
coolStates$$, {
                    PointSize[Large], 
                    Cyan}]}, $CellContext`BlochSphereCircles, \
$CellContext`BlochSphereAxes], ImageSize -> {500, 500}, ViewAngle -> Pi/10, 
                   Axes -> False, Boxed -> False]], "3D", 1}, {
                 Hold[
                  Show[
                   Join[{
                    $CellContext`PlotBlochAngleTraceFromState[
                    
                    Composition[$CellContext`XBasisFromZBasis, \
$CellContext`origTrace$$], {0, $CellContext`tM$$ $CellContext`tMax$$}, {
                    PlotStyle -> Red}], 
                    Graphics[{
                    PointSize[Large], Red, 
                    Point[
                    Map[$CellContext`BlochAngleCoordinatesFromState, 
                    Map[
                    
                    Composition[$CellContext`XBasisFromZBasis, \
$CellContext`origTrace$$], $CellContext`relevantTCoincidence$$]]]}], 
                    Graphics[{
                    PointSize[Large], Cyan, 
                    Point[
                    Map[$CellContext`BlochAngleCoordinatesFromState, 
                    
                    Map[$CellContext`XBasisFromZBasis, \
$CellContext`coolStates$$]]]}]}, 
                    Table[
                    $CellContext`PlotBlochAngleTraceFromState[
                    Composition[$CellContext`XBasisFromZBasis, 
                    Part[$CellContext`approxTraces$$, $CellContext`i]], {
                    0, $CellContext`tM$$ $CellContext`tMax$$}, PlotStyle -> 
                    Part[$CellContext`approxColors, 
                    
                    Part[$CellContext`calculatedOrders$$, $CellContext`i]]], \
{$CellContext`i, $CellContext`numSelectedOrders$$}], 
                    Table[
                    Graphics[{
                    PointSize[Large], 
                    Part[$CellContext`approxColors, 
                    Part[$CellContext`calculatedOrders$$, $CellContext`i]], 
                    Point[
                    Map[$CellContext`BlochAngleCoordinatesFromState, 
                    Map[
                    Composition[$CellContext`XBasisFromZBasis, 
                    
                    Part[$CellContext`approxTraces$$, $CellContext`i]], \
$CellContext`relevantTCoincidence$$]]]}], {$CellContext`i, \
$CellContext`numSelectedOrders$$}]], PlotRange -> {{-Pi, Pi}, {0, Pi}}, 
                   AxesOrigin -> {0, 0}, AspectRatio -> 0.5, 
                   ImageSize -> {800, 400}, 
                   AxesLabel -> {
                    "x-basis phase angle \[Phi]\n\[Phi] = arg(<\[Psi]|->) - \
arg(<\[Psi]|+>)\n'longitude'", 
                    "x-basis population angle \[Theta]\ncos(\[Theta]/2) = |<\
\[Psi]|+>|\n'latitude'"}, PlotLabel -> 
                   "Bloch angle coordinates in the X-basis"]], 
                 "Cartesian Bloch angle", 0}, {
                 Hold[
                  Show[
                   Join[{
                    $CellContext`PlotMercatorBlochTraceFromState[
                    
                    Composition[$CellContext`XBasisFromZBasis, \
$CellContext`origTrace$$], {0, $CellContext`tM$$ $CellContext`tMax$$}, 
                    PlotStyle -> Red], 
                    Graphics[{
                    PointSize[Large], Red, 
                    Point[
                    Map[$CellContext`MercatorCoordinatesFromBlochAngle, 
                    Map[$CellContext`BlochAngleCoordinatesFromState, 
                    Map[
                    
                    Composition[$CellContext`XBasisFromZBasis, \
$CellContext`origTrace$$], $CellContext`relevantTCoincidence$$]]]]}]}, 
                    Table[
                    $CellContext`PlotMercatorBlochTraceFromState[
                    Composition[$CellContext`XBasisFromZBasis, 
                    Part[$CellContext`approxTraces$$, $CellContext`i]], {
                    0, $CellContext`tM$$ $CellContext`tMax$$}, PlotStyle -> 
                    Part[$CellContext`approxColors, 
                    
                    Part[$CellContext`calculatedOrders$$, $CellContext`i]]], \
{$CellContext`i, $CellContext`numSelectedOrders$$}], 
                    Table[
                    Graphics[{
                    PointSize[Large], 
                    Part[$CellContext`approxColors, 
                    Part[$CellContext`calculatedOrders$$, $CellContext`i]], 
                    Point[
                    Map[$CellContext`MercatorCoordinatesFromBlochAngle, 
                    Map[$CellContext`BlochAngleCoordinatesFromState, 
                    Map[
                    Composition[$CellContext`XBasisFromZBasis, 
                    
                    Part[$CellContext`approxTraces$$, $CellContext`i]], \
$CellContext`relevantTCoincidence$$]]]]}], {$CellContext`i, \
$CellContext`numSelectedOrders$$}]], AspectRatio -> 0.5, 
                   ImageSize -> {800, 400}, 
                   PlotRange -> {{-Pi, Pi}, {-0.5, 0.5}}, 
                   AxesLabel -> {
                    "Mercator longitude \[Phi],\nx-basis phase angle \[Phi]\n\
\[Phi] = arg(<\[Psi]|->) - arg(<\[Psi]|+>)\n", 
                    "Mercator z-intersect z(\[Theta]),\nx-basis population \
angle \[Theta]\ncos(\[Theta]/2) = |<\[Psi]|+>|"}]], "Mercator", 
                 0}}, $CellContext`i, 2], {$CellContext`i, 
              Length[{{
                 Hold[
                  Show[
                   Join[{
                    $CellContext`PlotBlochTraceFromState[$CellContext`\
origTrace$$, {0, $CellContext`tM$$ $CellContext`tMax$$}, PlotStyle -> Red], 
                    $CellContext`PlotBlochVectorFromState[
                    $CellContext`origTrace$$[$CellContext`tM$$ \
$CellContext`tMax$$], {Red, 
                    Thickness[0.015]}], 
                    $CellContext`PlotBlochVector[
                    $CellContext`RotationAxisFromHamiltonian[
                    $CellContext`hOrigFunc$$[$CellContext`tM$$ \
$CellContext`tMax$$, 0.]], {Gray, 
                    Thickness[0.01]}], 
                    $CellContext`PlotBlochPointsFromStates[
                    
                    Map[$CellContext`origTrace$$, \
$CellContext`relevantTCoincidence$$], {
                    PointSize[Large], Red}]}, 
                    Table[
                    $CellContext`PlotBlochTraceFromState[
                    Part[$CellContext`approxTraces$$, $CellContext`i], {
                    0, $CellContext`tM$$ $CellContext`tMax$$}, PlotStyle -> 
                    Part[$CellContext`approxColors, 
                    
                    Part[$CellContext`calculatedOrders$$, $CellContext`i]]], \
{$CellContext`i, $CellContext`numSelectedOrders$$}], 
                    Table[
                    $CellContext`PlotBlochPointsFromStates[
                    Map[
                    
                    Part[$CellContext`approxTraces$$, $CellContext`i], \
$CellContext`relevantTCoincidence$$], {
                    PointSize[Large], 
                    Part[$CellContext`approxColors, 
                    
                    Part[$CellContext`calculatedOrders$$, $CellContext`i]]}], \
{$CellContext`i, $CellContext`numSelectedOrders$$}], {
                    $CellContext`PlotBlochPointsFromStates[$CellContext`\
coolStates$$, {
                    PointSize[Large], 
                    Cyan}]}, $CellContext`BlochSphereCircles, \
$CellContext`BlochSphereAxes], ImageSize -> {500, 500}, ViewAngle -> Pi/10, 
                   Axes -> False, Boxed -> False]], "3D", 1}, {
                 Hold[
                  Show[
                   Join[{
                    $CellContext`PlotBlochAngleTraceFromState[
                    
                    Composition[$CellContext`XBasisFromZBasis, \
$CellContext`origTrace$$], {0, $CellContext`tM$$ $CellContext`tMax$$}, {
                    PlotStyle -> Red}], 
                    Graphics[{
                    PointSize[Large], Red, 
                    Point[
                    Map[$CellContext`BlochAngleCoordinatesFromState, 
                    Map[
                    
                    Composition[$CellContext`XBasisFromZBasis, \
$CellContext`origTrace$$], $CellContext`relevantTCoincidence$$]]]}], 
                    Graphics[{
                    PointSize[Large], Cyan, 
                    Point[
                    Map[$CellContext`BlochAngleCoordinatesFromState, 
                    
                    Map[$CellContext`XBasisFromZBasis, \
$CellContext`coolStates$$]]]}]}, 
                    Table[
                    $CellContext`PlotBlochAngleTraceFromState[
                    Composition[$CellContext`XBasisFromZBasis, 
                    Part[$CellContext`approxTraces$$, $CellContext`i]], {
                    0, $CellContext`tM$$ $CellContext`tMax$$}, PlotStyle -> 
                    Part[$CellContext`approxColors, 
                    
                    Part[$CellContext`calculatedOrders$$, $CellContext`i]]], \
{$CellContext`i, $CellContext`numSelectedOrders$$}], 
                    Table[
                    Graphics[{
                    PointSize[Large], 
                    Part[$CellContext`approxColors, 
                    Part[$CellContext`calculatedOrders$$, $CellContext`i]], 
                    Point[
                    Map[$CellContext`BlochAngleCoordinatesFromState, 
                    Map[
                    Composition[$CellContext`XBasisFromZBasis, 
                    
                    Part[$CellContext`approxTraces$$, $CellContext`i]], \
$CellContext`relevantTCoincidence$$]]]}], {$CellContext`i, \
$CellContext`numSelectedOrders$$}]], PlotRange -> {{-Pi, Pi}, {0, Pi}}, 
                   AxesOrigin -> {0, 0}, AspectRatio -> 0.5, 
                   ImageSize -> {800, 400}, 
                   AxesLabel -> {
                    "x-basis phase angle \[Phi]\n\[Phi] = arg(<\[Psi]|->) - \
arg(<\[Psi]|+>)\n'longitude'", 
                    "x-basis population angle \[Theta]\ncos(\[Theta]/2) = |<\
\[Psi]|+>|\n'latitude'"}, PlotLabel -> 
                   "Bloch angle coordinates in the X-basis"]], 
                 "Cartesian Bloch angle", 0}, {
                 Hold[
                  Show[
                   Join[{
                    $CellContext`PlotMercatorBlochTraceFromState[
                    
                    Composition[$CellContext`XBasisFromZBasis, \
$CellContext`origTrace$$], {0, $CellContext`tM$$ $CellContext`tMax$$}, 
                    PlotStyle -> Red], 
                    Graphics[{
                    PointSize[Large], Red, 
                    Point[
                    Map[$CellContext`MercatorCoordinatesFromBlochAngle, 
                    Map[$CellContext`BlochAngleCoordinatesFromState, 
                    Map[
                    
                    Composition[$CellContext`XBasisFromZBasis, \
$CellContext`origTrace$$], $CellContext`relevantTCoincidence$$]]]]}]}, 
                    Table[
                    $CellContext`PlotMercatorBlochTraceFromState[
                    Composition[$CellContext`XBasisFromZBasis, 
                    Part[$CellContext`approxTraces$$, $CellContext`i]], {
                    0, $CellContext`tM$$ $CellContext`tMax$$}, PlotStyle -> 
                    Part[$CellContext`approxColors, 
                    
                    Part[$CellContext`calculatedOrders$$, $CellContext`i]]], \
{$CellContext`i, $CellContext`numSelectedOrders$$}], 
                    Table[
                    Graphics[{
                    PointSize[Large], 
                    Part[$CellContext`approxColors, 
                    Part[$CellContext`calculatedOrders$$, $CellContext`i]], 
                    Point[
                    Map[$CellContext`MercatorCoordinatesFromBlochAngle, 
                    Map[$CellContext`BlochAngleCoordinatesFromState, 
                    Map[
                    Composition[$CellContext`XBasisFromZBasis, 
                    
                    Part[$CellContext`approxTraces$$, $CellContext`i]], \
$CellContext`relevantTCoincidence$$]]]]}], {$CellContext`i, \
$CellContext`numSelectedOrders$$}]], AspectRatio -> 0.5, 
                   ImageSize -> {800, 400}, 
                   PlotRange -> {{-Pi, Pi}, {-0.5, 0.5}}, 
                   AxesLabel -> {
                    "Mercator longitude \[Phi],\nx-basis phase angle \[Phi]\n\
\[Phi] = arg(<\[Psi]|->) - arg(<\[Psi]|+>)\n", 
                    "Mercator z-intersect z(\[Theta]),\nx-basis population \
angle \[Theta]\ncos(\[Theta]/2) = |<\[Psi]|+>|"}]], "Mercator", 0}}]}]]}}, 
         Typeset`size$$ = {500., {256.634033203125, 262.365966796875}}, 
         Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
         True, $CellContext`tM$601149$$ = 0, $CellContext`\[Alpha]0$601150$$ =
          0, $CellContext`H1avg$601151$$ = 
         0, $CellContext`selectedOrders$601152$$ = 
         False, $CellContext`wwIn$601153$$ = 
         0, $CellContext`DeltaIn$601154$$ = 0, $CellContext`phiIn$601155$$ = 
         0}, 
         DynamicBox[Manipulate`ManipulateBoxes[
          1, StandardForm, 
           "Variables" :> {$CellContext`DeltaIn$$ = 0., $CellContext`H1avg$$ = 
             0.2, $CellContext`phiIn$$ = 
             0., $CellContext`selectedOrders$$ = {1, 
              2}, $CellContext`selectedPlots$$ = {1}, $CellContext`tM$$ = 
             0.01, $CellContext`wwIn$$ = 1., $CellContext`\[Alpha]0$$ = 0.}, 
           "ControllerVariables" :> {
             Hold[$CellContext`tM$$, $CellContext`tM$601149$$, 0], 
             
             Hold[$CellContext`\[Alpha]0$$, $CellContext`\[Alpha]0$601150$$, 
              0], 
             Hold[$CellContext`H1avg$$, $CellContext`H1avg$601151$$, 0], 
             
             Hold[$CellContext`selectedOrders$$, \
$CellContext`selectedOrders$601152$$, False], 
             Hold[$CellContext`wwIn$$, $CellContext`wwIn$601153$$, 0], 
             Hold[$CellContext`DeltaIn$$, $CellContext`DeltaIn$601154$$, 0], 
             Hold[$CellContext`phiIn$$, $CellContext`phiIn$601155$$, 0]}, 
           "OtherVariables" :> {
            Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
             Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
             Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
             Typeset`initDone$$, Typeset`skipInitDone$$}, 
           "Body" :> ($CellContext`\[Psi]0$$ = {1, 
              0}; $CellContext`\[Psi]0$$ = $CellContext`\[Psi]0$$/
              Norm[$CellContext`\[Psi]0$$]; $CellContext`gateAngle$$ = 
             Pi; $CellContext`tMax$$ = 
             4 2 ($CellContext`gateAngle$$/$CellContext`H1avg$$); 
            Dynamic[$CellContext`selectedH1Index$$]; \
$CellContext`selectedH1Profile$$ = 
             Part[$CellContext`H1pList, $CellContext`selectedH1Index$$]; \
$CellContext`H1func$$ = 
             Function[$CellContext`t$, \
$CellContext`selectedH1Profile$$[$CellContext`t$/$CellContext`tMax$$] \
$CellContext`H1avg$$]; $CellContext`vals$$ = {$CellContext`ww -> \
$CellContext`wwIn$$, $CellContext`Delta -> $CellContext`DeltaIn$$, \
$CellContext`phi -> $CellContext`phiIn$$}; $CellContext`hOrigFunc$$ = \
$CellContext`GetHFunc[$CellContext`Horig, $CellContext`H1func$$, \
$CellContext`vals$$]; $CellContext`origTrace$$ = 
             ReplaceAll[$CellContext`\[Psi], 
               $CellContext`NTrajectory[$CellContext`hOrigFunc$$, \
$CellContext`tMax$$, $CellContext`\[Alpha]0$$, $CellContext`\[Psi]0$$]]; \
$CellContext`t0$$ = 
             ReplaceAll[$CellContext`\[Alpha]0$$/$CellContext`ww, \
$CellContext`vals$$]; $CellContext`tC$$ = 
             ReplaceAll[
              Pi/$CellContext`ww, $CellContext`vals$$]; \
$CellContext`tCoincidence$$ = 
             Select[$CellContext`t0$$ + 
               Range[0., $CellContext`tMax$$, $CellContext`tC$$], # < \
$CellContext`tMax$$& ]; $CellContext`firstCoincidenceState$$ = \
$CellContext`origTrace$$[$CellContext`t0$$]; $CellContext`calculatedOrders$$ = \
$CellContext`selectedOrders$$; $CellContext`numSelectedOrders$$ = 
             Length[$CellContext`calculatedOrders$$]; \
$CellContext`approxTraces$$ = Table[
               ReplaceAll[$CellContext`\[Psi], 
                $CellContext`NTrajectory[
                 $CellContext`GetHFunc[
                  Part[$CellContext`ApproxHList, 
                   
                   Part[$CellContext`calculatedOrders$$, $CellContext`i]], \
$CellContext`H1func$$, $CellContext`vals$$], $CellContext`tMax$$, \
$CellContext`\[Alpha]0$$, $CellContext`firstCoincidenceState$$, \
$CellContext`t0$$]], {$CellContext`i, $CellContext`numSelectedOrders$$}]; \
$CellContext`Omg1$$[
               Pattern[$CellContext`t0$, 
                Blank[]]] = (-
               I) $CellContext`tC$$ (($CellContext`H1[$CellContext`t0$]/
                 4) $CellContext`sx + (
                 Derivative[1][$CellContext`H1][$CellContext`t0$]/(
                 8 $CellContext`ww)) (Pi $CellContext`sx + 
                 Sin[2 $CellContext`ww $CellContext`t0$] $CellContext`sx + 
                 Cos[2 $CellContext`ww $CellContext`t0$] $CellContext`sy)); \
$CellContext`Omg2$$[
               Pattern[$CellContext`t0$, 
                Blank[]]] = (-
               I) $CellContext`tC$$ (($CellContext`H1[$CellContext`t0$]^2/(
                 32 $CellContext`ww)) $CellContext`sz (1 - 2 
                 Cos[2 $CellContext`ww $CellContext`t0$]) + 
               Derivative[
                 1][$CellContext`H1][$CellContext`t0$] \
($CellContext`H1[$CellContext`t0$]/(32 $CellContext`ww^2)) $CellContext`sz (
                 Pi - 2 Pi Cos[2 $CellContext`ww $CellContext`t0$] - 3 
                 Sin[2 $CellContext`ww $CellContext`t0$]) + (
                 Derivative[1][$CellContext`H1][$CellContext`t0$]/(
                 384 $CellContext`ww^3)) $CellContext`sz (3 + 
                 4 Pi^2 + (18 - 6 Pi^2) 
                  Cos[2 $CellContext`ww $CellContext`t0$] + 
                 18 Pi Sin[
                   2 $CellContext`ww $CellContext`t0$])); \
$CellContext`OmgCool$$[
               Pattern[$CellContext`t0$, 
                Blank[]]] = ReplaceAll[
               ReplaceAll[
                
                ReplaceAll[$CellContext`Omg1$$[$CellContext`t0$] + \
$CellContext`Omg2$$[$CellContext`t0$], $CellContext`vals$$], \
$CellContext`pms], {$CellContext`H1 -> $CellContext`H1func$$}]; \
$CellContext`coolStates$$ = FoldList[Dot[
                MatrixExp[
                 $CellContext`OmgCool$$[#2]], #]& , \
$CellContext`firstCoincidenceState$$, 
               Part[$CellContext`tCoincidence$$, 
                Span[1, -2]]]; 
            Dynamic[$CellContext`relevantTCoincidence$$ = 
               Select[$CellContext`tCoincidence$$, # < $CellContext`tM$$ \
$CellContext`tMax$$& ]; Grid[{
                 Table[
                  ReleaseHold[
                   Part[{{
                    Hold[
                    Show[
                    Join[{
                    $CellContext`PlotBlochTraceFromState[$CellContext`\
origTrace$$, {0, $CellContext`tM$$ $CellContext`tMax$$}, PlotStyle -> Red], 
                    $CellContext`PlotBlochVectorFromState[
                    $CellContext`origTrace$$[$CellContext`tM$$ \
$CellContext`tMax$$], {Red, 
                    Thickness[0.015]}], 
                    $CellContext`PlotBlochVector[
                    $CellContext`RotationAxisFromHamiltonian[
                    $CellContext`hOrigFunc$$[$CellContext`tM$$ \
$CellContext`tMax$$, 0.]], {Gray, 
                    Thickness[0.01]}], 
                    $CellContext`PlotBlochPointsFromStates[
                    
                    Map[$CellContext`origTrace$$, \
$CellContext`relevantTCoincidence$$], {
                    PointSize[Large], Red}]}, 
                    Table[
                    $CellContext`PlotBlochTraceFromState[
                    Part[$CellContext`approxTraces$$, $CellContext`i], {
                    0, $CellContext`tM$$ $CellContext`tMax$$}, PlotStyle -> 
                    Part[$CellContext`approxColors, 
                    
                    Part[$CellContext`calculatedOrders$$, $CellContext`i]]], \
{$CellContext`i, $CellContext`numSelectedOrders$$}], 
                    Table[
                    $CellContext`PlotBlochPointsFromStates[
                    Map[
                    
                    Part[$CellContext`approxTraces$$, $CellContext`i], \
$CellContext`relevantTCoincidence$$], {
                    PointSize[Large], 
                    Part[$CellContext`approxColors, 
                    
                    Part[$CellContext`calculatedOrders$$, $CellContext`i]]}], \
{$CellContext`i, $CellContext`numSelectedOrders$$}], {
                    $CellContext`PlotBlochPointsFromStates[$CellContext`\
coolStates$$, {
                    PointSize[Large], 
                    Cyan}]}, $CellContext`BlochSphereCircles, \
$CellContext`BlochSphereAxes], ImageSize -> {500, 500}, ViewAngle -> Pi/10, 
                    Axes -> False, Boxed -> False]], "3D", 1}, {
                    Hold[
                    Show[
                    Join[{
                    $CellContext`PlotBlochAngleTraceFromState[
                    
                    Composition[$CellContext`XBasisFromZBasis, \
$CellContext`origTrace$$], {0, $CellContext`tM$$ $CellContext`tMax$$}, {
                    PlotStyle -> Red}], 
                    Graphics[{
                    PointSize[Large], Red, 
                    Point[
                    Map[$CellContext`BlochAngleCoordinatesFromState, 
                    Map[
                    
                    Composition[$CellContext`XBasisFromZBasis, \
$CellContext`origTrace$$], $CellContext`relevantTCoincidence$$]]]}], 
                    Graphics[{
                    PointSize[Large], Cyan, 
                    Point[
                    Map[$CellContext`BlochAngleCoordinatesFromState, 
                    
                    Map[$CellContext`XBasisFromZBasis, \
$CellContext`coolStates$$]]]}]}, 
                    Table[
                    $CellContext`PlotBlochAngleTraceFromState[
                    Composition[$CellContext`XBasisFromZBasis, 
                    Part[$CellContext`approxTraces$$, $CellContext`i]], {
                    0, $CellContext`tM$$ $CellContext`tMax$$}, PlotStyle -> 
                    Part[$CellContext`approxColors, 
                    
                    Part[$CellContext`calculatedOrders$$, $CellContext`i]]], \
{$CellContext`i, $CellContext`numSelectedOrders$$}], 
                    Table[
                    Graphics[{
                    PointSize[Large], 
                    Part[$CellContext`approxColors, 
                    Part[$CellContext`calculatedOrders$$, $CellContext`i]], 
                    Point[
                    Map[$CellContext`BlochAngleCoordinatesFromState, 
                    Map[
                    Composition[$CellContext`XBasisFromZBasis, 
                    
                    Part[$CellContext`approxTraces$$, $CellContext`i]], \
$CellContext`relevantTCoincidence$$]]]}], {$CellContext`i, \
$CellContext`numSelectedOrders$$}]], PlotRange -> {{-Pi, Pi}, {0, Pi}}, 
                    AxesOrigin -> {0, 0}, AspectRatio -> 0.5, 
                    ImageSize -> {800, 400}, 
                    AxesLabel -> {
                    "x-basis phase angle \[Phi]\n\[Phi] = arg(<\[Psi]|->) - \
arg(<\[Psi]|+>)\n'longitude'", 
                    "x-basis population angle \[Theta]\ncos(\[Theta]/2) = |<\
\[Psi]|+>|\n'latitude'"}, PlotLabel -> 
                    "Bloch angle coordinates in the X-basis"]], 
                    "Cartesian Bloch angle", 0}, {
                    Hold[
                    Show[
                    Join[{
                    $CellContext`PlotMercatorBlochTraceFromState[
                    
                    Composition[$CellContext`XBasisFromZBasis, \
$CellContext`origTrace$$], {0, $CellContext`tM$$ $CellContext`tMax$$}, 
                    PlotStyle -> Red], 
                    Graphics[{
                    PointSize[Large], Red, 
                    Point[
                    Map[$CellContext`MercatorCoordinatesFromBlochAngle, 
                    Map[$CellContext`BlochAngleCoordinatesFromState, 
                    Map[
                    
                    Composition[$CellContext`XBasisFromZBasis, \
$CellContext`origTrace$$], $CellContext`relevantTCoincidence$$]]]]}]}, 
                    Table[
                    $CellContext`PlotMercatorBlochTraceFromState[
                    Composition[$CellContext`XBasisFromZBasis, 
                    Part[$CellContext`approxTraces$$, $CellContext`i]], {
                    0, $CellContext`tM$$ $CellContext`tMax$$}, PlotStyle -> 
                    Part[$CellContext`approxColors, 
                    
                    Part[$CellContext`calculatedOrders$$, $CellContext`i]]], \
{$CellContext`i, $CellContext`numSelectedOrders$$}], 
                    Table[
                    Graphics[{
                    PointSize[Large], 
                    Part[$CellContext`approxColors, 
                    Part[$CellContext`calculatedOrders$$, $CellContext`i]], 
                    Point[
                    Map[$CellContext`MercatorCoordinatesFromBlochAngle, 
                    Map[$CellContext`BlochAngleCoordinatesFromState, 
                    Map[
                    Composition[$CellContext`XBasisFromZBasis, 
                    
                    Part[$CellContext`approxTraces$$, $CellContext`i]], \
$CellContext`relevantTCoincidence$$]]]]}], {$CellContext`i, \
$CellContext`numSelectedOrders$$}]], AspectRatio -> 0.5, 
                    ImageSize -> {800, 400}, 
                    PlotRange -> {{-Pi, Pi}, {-0.5, 0.5}}, 
                    AxesLabel -> {
                    "Mercator longitude \[Phi],\nx-basis phase angle \[Phi]\n\
\[Phi] = arg(<\[Psi]|->) - arg(<\[Psi]|+>)\n", 
                    "Mercator z-intersect z(\[Theta]),\nx-basis population \
angle \[Theta]\ncos(\[Theta]/2) = |<\[Psi]|+>|"}]], "Mercator", 
                    0}}, $CellContext`i, 
                    1]], {$CellContext`i, $CellContext`selectedPlots$$}], {
                  StringForm["\!\(\*SubscriptBox[\(t\), \(gate\)]\) = ``", 
                   NumberForm[$CellContext`tMax$$, {5, 2}]]}}]]), 
           "Specifications" :> {{{$CellContext`tM$$, 0.01, 
               "Time t / \!\(\*SubscriptBox[\(t\), \(gate\)]\)"}, 0.01, 1., 
              Appearance -> "Open", AnimationRate -> 0.03, RefreshRate -> 
              0.005}, {{$CellContext`\[Alpha]0$$, 0., "Offset \[Alpha]0"}, 0.,
               Pi, Appearance -> 
              "Open"}, {{$CellContext`H1avg$$, 0.2, 
               "Average drive strength H1_avg"}, 0.01, 2., Appearance -> 
              "Open"}, {{$CellContext`selectedOrders$$, {1, 2}, 
               "Show Magnus orders"}, {1 -> Graphics[{
                  Text[0], 
                  EdgeForm[
                   Thickness[Tiny]], 
                  RGBColor[0.122103, 0.00901808, 0.39826], 
                  Rectangle[{1, -0.5}]}, ImageSize -> {30, 12}], 2 -> 
               Graphics[{
                  Text[1], 
                  EdgeForm[
                   Thickness[Tiny]], 
                  RGBColor[0.175507, 0.652273, 0.528496], 
                  Rectangle[{1, -0.5}]}, ImageSize -> {30, 12}], 3 -> 
               Graphics[{
                  Text[2], 
                  EdgeForm[
                   Thickness[Tiny]], 
                  RGBColor[0.914809, 0.897673, 0.350652], 
                  Rectangle[{1, -0.5}]}, ImageSize -> {30, 12}]}, ControlType -> 
              CheckboxBar}, {{$CellContext`wwIn$$, 1., 
               "Drive frequency \[Omega]"}, 0.01, 
              2.}, {{$CellContext`DeltaIn$$, 0., 
               "Qubit detuning \[CapitalDelta]"}, -1., 
              1.}, {{$CellContext`phiIn$$, 0., 
               "Rotation axis angle \[Phi]"}, -Pi, 
              Pi}, {{$CellContext`selectedPlots$$, {1}, "Visualizations"}, 
              Dynamic[
               Table[$CellContext`i -> Part[{{
                    Hold[
                    Show[
                    Join[{
                    $CellContext`PlotBlochTraceFromState[$CellContext`\
origTrace$$, {0, $CellContext`tM$$ $CellContext`tMax$$}, PlotStyle -> Red], 
                    $CellContext`PlotBlochVectorFromState[
                    $CellContext`origTrace$$[$CellContext`tM$$ \
$CellContext`tMax$$], {Red, 
                    Thickness[0.015]}], 
                    $CellContext`PlotBlochVector[
                    $CellContext`RotationAxisFromHamiltonian[
                    $CellContext`hOrigFunc$$[$CellContext`tM$$ \
$CellContext`tMax$$, 0.]], {Gray, 
                    Thickness[0.01]}], 
                    $CellContext`PlotBlochPointsFromStates[
                    
                    Map[$CellContext`origTrace$$, \
$CellContext`relevantTCoincidence$$], {
                    PointSize[Large], Red}]}, 
                    Table[
                    $CellContext`PlotBlochTraceFromState[
                    Part[$CellContext`approxTraces$$, $CellContext`i], {
                    0, $CellContext`tM$$ $CellContext`tMax$$}, PlotStyle -> 
                    Part[$CellContext`approxColors, 
                    
                    Part[$CellContext`calculatedOrders$$, $CellContext`i]]], \
{$CellContext`i, $CellContext`numSelectedOrders$$}], 
                    Table[
                    $CellContext`PlotBlochPointsFromStates[
                    Map[
                    
                    Part[$CellContext`approxTraces$$, $CellContext`i], \
$CellContext`relevantTCoincidence$$], {
                    PointSize[Large], 
                    Part[$CellContext`approxColors, 
                    
                    Part[$CellContext`calculatedOrders$$, $CellContext`i]]}], \
{$CellContext`i, $CellContext`numSelectedOrders$$}], {
                    $CellContext`PlotBlochPointsFromStates[$CellContext`\
coolStates$$, {
                    PointSize[Large], 
                    Cyan}]}, $CellContext`BlochSphereCircles, \
$CellContext`BlochSphereAxes], ImageSize -> {500, 500}, ViewAngle -> Pi/10, 
                    Axes -> False, Boxed -> False]], "3D", 1}, {
                    Hold[
                    Show[
                    Join[{
                    $CellContext`PlotBlochAngleTraceFromState[
                    
                    Composition[$CellContext`XBasisFromZBasis, \
$CellContext`origTrace$$], {0, $CellContext`tM$$ $CellContext`tMax$$}, {
                    PlotStyle -> Red}], 
                    Graphics[{
                    PointSize[Large], Red, 
                    Point[
                    Map[$CellContext`BlochAngleCoordinatesFromState, 
                    Map[
                    
                    Composition[$CellContext`XBasisFromZBasis, \
$CellContext`origTrace$$], $CellContext`relevantTCoincidence$$]]]}], 
                    Graphics[{
                    PointSize[Large], Cyan, 
                    Point[
                    Map[$CellContext`BlochAngleCoordinatesFromState, 
                    
                    Map[$CellContext`XBasisFromZBasis, \
$CellContext`coolStates$$]]]}]}, 
                    Table[
                    $CellContext`PlotBlochAngleTraceFromState[
                    Composition[$CellContext`XBasisFromZBasis, 
                    Part[$CellContext`approxTraces$$, $CellContext`i]], {
                    0, $CellContext`tM$$ $CellContext`tMax$$}, PlotStyle -> 
                    Part[$CellContext`approxColors, 
                    
                    Part[$CellContext`calculatedOrders$$, $CellContext`i]]], \
{$CellContext`i, $CellContext`numSelectedOrders$$}], 
                    Table[
                    Graphics[{
                    PointSize[Large], 
                    Part[$CellContext`approxColors, 
                    Part[$CellContext`calculatedOrders$$, $CellContext`i]], 
                    Point[
                    Map[$CellContext`BlochAngleCoordinatesFromState, 
                    Map[
                    Composition[$CellContext`XBasisFromZBasis, 
                    
                    Part[$CellContext`approxTraces$$, $CellContext`i]], \
$CellContext`relevantTCoincidence$$]]]}], {$CellContext`i, \
$CellContext`numSelectedOrders$$}]], PlotRange -> {{-Pi, Pi}, {0, Pi}}, 
                    AxesOrigin -> {0, 0}, AspectRatio -> 0.5, 
                    ImageSize -> {800, 400}, 
                    AxesLabel -> {
                    "x-basis phase angle \[Phi]\n\[Phi] = arg(<\[Psi]|->) - \
arg(<\[Psi]|+>)\n'longitude'", 
                    "x-basis population angle \[Theta]\ncos(\[Theta]/2) = |<\
\[Psi]|+>|\n'latitude'"}, PlotLabel -> 
                    "Bloch angle coordinates in the X-basis"]], 
                    "Cartesian Bloch angle", 0}, {
                    Hold[
                    Show[
                    Join[{
                    $CellContext`PlotMercatorBlochTraceFromState[
                    
                    Composition[$CellContext`XBasisFromZBasis, \
$CellContext`origTrace$$], {0, $CellContext`tM$$ $CellContext`tMax$$}, 
                    PlotStyle -> Red], 
                    Graphics[{
                    PointSize[Large], Red, 
                    Point[
                    Map[$CellContext`MercatorCoordinatesFromBlochAngle, 
                    Map[$CellContext`BlochAngleCoordinatesFromState, 
                    Map[
                    
                    Composition[$CellContext`XBasisFromZBasis, \
$CellContext`origTrace$$], $CellContext`relevantTCoincidence$$]]]]}]}, 
                    Table[
                    $CellContext`PlotMercatorBlochTraceFromState[
                    Composition[$CellContext`XBasisFromZBasis, 
                    Part[$CellContext`approxTraces$$, $CellContext`i]], {
                    0, $CellContext`tM$$ $CellContext`tMax$$}, PlotStyle -> 
                    Part[$CellContext`approxColors, 
                    
                    Part[$CellContext`calculatedOrders$$, $CellContext`i]]], \
{$CellContext`i, $CellContext`numSelectedOrders$$}], 
                    Table[
                    Graphics[{
                    PointSize[Large], 
                    Part[$CellContext`approxColors, 
                    Part[$CellContext`calculatedOrders$$, $CellContext`i]], 
                    Point[
                    Map[$CellContext`MercatorCoordinatesFromBlochAngle, 
                    Map[$CellContext`BlochAngleCoordinatesFromState, 
                    Map[
                    Composition[$CellContext`XBasisFromZBasis, 
                    
                    Part[$CellContext`approxTraces$$, $CellContext`i]], \
$CellContext`relevantTCoincidence$$]]]]}], {$CellContext`i, \
$CellContext`numSelectedOrders$$}]], AspectRatio -> 0.5, 
                    ImageSize -> {800, 400}, 
                    PlotRange -> {{-Pi, Pi}, {-0.5, 0.5}}, 
                    AxesLabel -> {
                    "Mercator longitude \[Phi],\nx-basis phase angle \[Phi]\n\
\[Phi] = arg(<\[Psi]|->) - arg(<\[Psi]|+>)\n", 
                    "Mercator z-intersect z(\[Theta]),\nx-basis population \
angle \[Theta]\ncos(\[Theta]/2) = |<\[Psi]|+>|"}]], "Mercator", 
                    0}}, $CellContext`i, 2], {$CellContext`i, 
                 Length[{{
                    Hold[
                    Show[
                    Join[{
                    $CellContext`PlotBlochTraceFromState[$CellContext`\
origTrace$$, {0, $CellContext`tM$$ $CellContext`tMax$$}, PlotStyle -> Red], 
                    $CellContext`PlotBlochVectorFromState[
                    $CellContext`origTrace$$[$CellContext`tM$$ \
$CellContext`tMax$$], {Red, 
                    Thickness[0.015]}], 
                    $CellContext`PlotBlochVector[
                    $CellContext`RotationAxisFromHamiltonian[
                    $CellContext`hOrigFunc$$[$CellContext`tM$$ \
$CellContext`tMax$$, 0.]], {Gray, 
                    Thickness[0.01]}], 
                    $CellContext`PlotBlochPointsFromStates[
                    
                    Map[$CellContext`origTrace$$, \
$CellContext`relevantTCoincidence$$], {
                    PointSize[Large], Red}]}, 
                    Table[
                    $CellContext`PlotBlochTraceFromState[
                    Part[$CellContext`approxTraces$$, $CellContext`i], {
                    0, $CellContext`tM$$ $CellContext`tMax$$}, PlotStyle -> 
                    Part[$CellContext`approxColors, 
                    
                    Part[$CellContext`calculatedOrders$$, $CellContext`i]]], \
{$CellContext`i, $CellContext`numSelectedOrders$$}], 
                    Table[
                    $CellContext`PlotBlochPointsFromStates[
                    Map[
                    
                    Part[$CellContext`approxTraces$$, $CellContext`i], \
$CellContext`relevantTCoincidence$$], {
                    PointSize[Large], 
                    Part[$CellContext`approxColors, 
                    
                    Part[$CellContext`calculatedOrders$$, $CellContext`i]]}], \
{$CellContext`i, $CellContext`numSelectedOrders$$}], {
                    $CellContext`PlotBlochPointsFromStates[$CellContext`\
coolStates$$, {
                    PointSize[Large], 
                    Cyan}]}, $CellContext`BlochSphereCircles, \
$CellContext`BlochSphereAxes], ImageSize -> {500, 500}, ViewAngle -> Pi/10, 
                    Axes -> False, Boxed -> False]], "3D", 1}, {
                    Hold[
                    Show[
                    Join[{
                    $CellContext`PlotBlochAngleTraceFromState[
                    
                    Composition[$CellContext`XBasisFromZBasis, \
$CellContext`origTrace$$], {0, $CellContext`tM$$ $CellContext`tMax$$}, {
                    PlotStyle -> Red}], 
                    Graphics[{
                    PointSize[Large], Red, 
                    Point[
                    Map[$CellContext`BlochAngleCoordinatesFromState, 
                    Map[
                    
                    Composition[$CellContext`XBasisFromZBasis, \
$CellContext`origTrace$$], $CellContext`relevantTCoincidence$$]]]}], 
                    Graphics[{
                    PointSize[Large], Cyan, 
                    Point[
                    Map[$CellContext`BlochAngleCoordinatesFromState, 
                    
                    Map[$CellContext`XBasisFromZBasis, \
$CellContext`coolStates$$]]]}]}, 
                    Table[
                    $CellContext`PlotBlochAngleTraceFromState[
                    Composition[$CellContext`XBasisFromZBasis, 
                    Part[$CellContext`approxTraces$$, $CellContext`i]], {
                    0, $CellContext`tM$$ $CellContext`tMax$$}, PlotStyle -> 
                    Part[$CellContext`approxColors, 
                    
                    Part[$CellContext`calculatedOrders$$, $CellContext`i]]], \
{$CellContext`i, $CellContext`numSelectedOrders$$}], 
                    Table[
                    Graphics[{
                    PointSize[Large], 
                    Part[$CellContext`approxColors, 
                    Part[$CellContext`calculatedOrders$$, $CellContext`i]], 
                    Point[
                    Map[$CellContext`BlochAngleCoordinatesFromState, 
                    Map[
                    Composition[$CellContext`XBasisFromZBasis, 
                    
                    Part[$CellContext`approxTraces$$, $CellContext`i]], \
$CellContext`relevantTCoincidence$$]]]}], {$CellContext`i, \
$CellContext`numSelectedOrders$$}]], PlotRange -> {{-Pi, Pi}, {0, Pi}}, 
                    AxesOrigin -> {0, 0}, AspectRatio -> 0.5, 
                    ImageSize -> {800, 400}, 
                    AxesLabel -> {
                    "x-basis phase angle \[Phi]\n\[Phi] = arg(<\[Psi]|->) - \
arg(<\[Psi]|+>)\n'longitude'", 
                    "x-basis population angle \[Theta]\ncos(\[Theta]/2) = |<\
\[Psi]|+>|\n'latitude'"}, PlotLabel -> 
                    "Bloch angle coordinates in the X-basis"]], 
                    "Cartesian Bloch angle", 0}, {
                    Hold[
                    Show[
                    Join[{
                    $CellContext`PlotMercatorBlochTraceFromState[
                    
                    Composition[$CellContext`XBasisFromZBasis, \
$CellContext`origTrace$$], {0, $CellContext`tM$$ $CellContext`tMax$$}, 
                    PlotStyle -> Red], 
                    Graphics[{
                    PointSize[Large], Red, 
                    Point[
                    Map[$CellContext`MercatorCoordinatesFromBlochAngle, 
                    Map[$CellContext`BlochAngleCoordinatesFromState, 
                    Map[
                    
                    Composition[$CellContext`XBasisFromZBasis, \
$CellContext`origTrace$$], $CellContext`relevantTCoincidence$$]]]]}]}, 
                    Table[
                    $CellContext`PlotMercatorBlochTraceFromState[
                    Composition[$CellContext`XBasisFromZBasis, 
                    Part[$CellContext`approxTraces$$, $CellContext`i]], {
                    0, $CellContext`tM$$ $CellContext`tMax$$}, PlotStyle -> 
                    Part[$CellContext`approxColors, 
                    
                    Part[$CellContext`calculatedOrders$$, $CellContext`i]]], \
{$CellContext`i, $CellContext`numSelectedOrders$$}], 
                    Table[
                    Graphics[{
                    PointSize[Large], 
                    Part[$CellContext`approxColors, 
                    Part[$CellContext`calculatedOrders$$, $CellContext`i]], 
                    Point[
                    Map[$CellContext`MercatorCoordinatesFromBlochAngle, 
                    Map[$CellContext`BlochAngleCoordinatesFromState, 
                    Map[
                    Composition[$CellContext`XBasisFromZBasis, 
                    
                    Part[$CellContext`approxTraces$$, $CellContext`i]], \
$CellContext`relevantTCoincidence$$]]]]}], {$CellContext`i, \
$CellContext`numSelectedOrders$$}]], AspectRatio -> 0.5, 
                    ImageSize -> {800, 400}, 
                    PlotRange -> {{-Pi, Pi}, {-0.5, 0.5}}, 
                    AxesLabel -> {
                    "Mercator longitude \[Phi],\nx-basis phase angle \[Phi]\n\
\[Phi] = arg(<\[Psi]|->) - arg(<\[Psi]|+>)\n", 
                    "Mercator z-intersect z(\[Theta]),\nx-basis population \
angle \[Theta]\ncos(\[Theta]/2) = |<\[Psi]|+>|"}]], "Mercator", 0}}]}]], 
              ControlType -> CheckboxBar}}, "Options" :> {}, 
           "DefaultOptions" :> {}],
          ImageSizeCache->{905., {286., 291.}},
          SingleEvaluation->True],
         Deinitialization:>None,
         DynamicModuleValues:>{},
         SynchronousInitialization->True,
         UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
         UnsavedVariables:>{Typeset`initDone$$},
         UntrackedVariables:>{Typeset`size$$}], "Manipulate",
        Deployed->True,
        StripOnInput->False],
       Manipulate`InterpretManipulate[1]]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"],
  DynamicModuleValues:>{{DownValues[$CellContext`Omg1$$] = {HoldPattern[
         $CellContext`Omg1$$[
          Pattern[$CellContext`t0$, 
           Blank[]]]] :> 
       Complex[0., -3.141592653589793] (
         Rational[1, 4] $CellContext`sx $CellContext`H1[$CellContext`t0$] + 
         Rational[1, 8] $CellContext`ww^(-1) (
           Pi $CellContext`sx + $CellContext`sy 
            Cos[2 $CellContext`t0$ $CellContext`ww] + $CellContext`sx 
            Sin[2 $CellContext`t0$ $CellContext`ww]) 
          Derivative[1][$CellContext`H1][$CellContext`t0$])}}, {
    DownValues[$CellContext`Omg2$$] = {HoldPattern[
         $CellContext`Omg2$$[
          Pattern[$CellContext`t0$, 
           Blank[]]]] :> 
       Complex[0., -3.141592653589793] (
         Rational[1, 32] $CellContext`sz $CellContext`ww^(-1) (1 - 2 
           Cos[2 $CellContext`t0$ $CellContext`ww]) \
$CellContext`H1[$CellContext`t0$]^2 + 
         Rational[
           1, 32] $CellContext`sz $CellContext`ww^(-2) \
$CellContext`H1[$CellContext`t0$] (Pi - 2 Pi 
           Cos[2 $CellContext`t0$ $CellContext`ww] - 3 
           Sin[2 $CellContext`t0$ $CellContext`ww]) 
          Derivative[1][$CellContext`H1][$CellContext`t0$] + 
         Rational[1, 384] $CellContext`sz $CellContext`ww^(-3) (3 + 
           4 Pi^2 + (18 - 6 Pi^2) Cos[2 $CellContext`t0$ $CellContext`ww] + 
           18 Pi Sin[2 $CellContext`t0$ $CellContext`ww]) 
          Derivative[1][$CellContext`H1][$CellContext`t0$])}}, {
    DownValues[$CellContext`OmgCool$$] = {HoldPattern[
         $CellContext`OmgCool$$[
          Pattern[$CellContext`t0$, 
           Blank[]]]] :> {{
         Complex[0., 0.] + 
          Complex[0., -3.141592653589793] (
            0.000017331090593774992` $CellContext`t0$^2 (1 - 2 
              Cos[2. $CellContext`t0$]) + 
            0.000017331090593774992` $CellContext`t0$ (Pi - 2 Pi 
              Cos[2. $CellContext`t0$] - 3 Sin[2. $CellContext`t0$]) + 
            0.00006132770473807701 (3 + 
              4 Pi^2 + (18 - 6 Pi^2) Cos[2. $CellContext`t0$] + 
              18 Pi Sin[2. $CellContext`t0$])), Complex[0., 0.] + 
          Complex[0., -3.141592653589793] (
            0.005887459654855393 $CellContext`t0$ + 
            0.0029437298274276966` (Pi + 
              Complex[0, -1] Cos[2. $CellContext`t0$] + 
              Sin[2. $CellContext`t0$]))}, {
         Complex[0., 0.] + 
          Complex[0., -3.141592653589793] (
            0.005887459654855393 $CellContext`t0$ + 
            0.0029437298274276966` (Pi + 
              Complex[0, 1] Cos[2. $CellContext`t0$] + 
              Sin[2. $CellContext`t0$])), Complex[0., 0.] + 
          Complex[
            0., -3.141592653589793] ((-0.000017331090593774992`) \
$CellContext`t0$^2 (1 - 2 Cos[2. $CellContext`t0$]) - 
            0.000017331090593774992` $CellContext`t0$ (Pi - 2 Pi 
             Cos[2. $CellContext`t0$] - 3 Sin[2. $CellContext`t0$]) - 
            0.00006132770473807701 (3 + 
             4 Pi^2 + (18 - 6 Pi^2) Cos[2. $CellContext`t0$] + 
             18 Pi Sin[2. $CellContext`t0$]))}}}}}]], "Output",
 CellChangeTimes->{3.722079949481535*^9, 3.7220811641534243`*^9, 
  3.722081240747559*^9, 3.722081344000517*^9, 3.722081430700287*^9, 
  3.7220820420790243`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.721650138837017*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.721650147786075*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gateAngle", "=", "Pi"}], ";", 
  RowBox[{"H1avg", "=", "0.4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tMax", " ", "=", " ", 
   RowBox[{"2", "*", 
    RowBox[{"gateAngle", "/", "H1avg"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"selectedH1Profile", "=", 
   RowBox[{"H1pList", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H1func", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"t", ",", 
     RowBox[{
      RowBox[{"selectedH1Profile", "[", 
       RowBox[{"t", "/", "tMax"}], "]"}], "*", "H1avg"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vals", " ", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ww", "\[Rule]", "1"}], ",", 
     RowBox[{"Delta", "\[Rule]", "0"}], ",", 
     RowBox[{"phi", "\[Rule]", "0"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tC", "=", 
   RowBox[{"Pi", "/", "ww"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Omg1", "[", "t0_", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "I"}], " ", "tC", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"H1", "'"}], "[", "t0", "]"}], "/", " ", 
          RowBox[{"(", 
           RowBox[{"8", " ", "ww"}], ")"}]}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"2", "ww", " ", "t0"}], "]"}], "sx"}], "+", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "ww", " ", "t0"}], "]"}], "sy"}]}], ")"}]}], 
        ")"}]}], "/.", "vals"}], "/.", "pms"}], "/.", 
    RowBox[{"{", 
     RowBox[{"H1", "\[Rule]", "H1func"}], "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.721650134572432*^9, 3.721650218327557*^9}, {
  3.721650558952023*^9, 3.72165055942026*^9}, {3.7216513744086113`*^9, 
  3.721651381384774*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Omg1", "[", "ta", "]"}]], "Input",
 CellChangeTimes->{{3.721650190236567*^9, 3.721650195084791*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"0.`", "\[VeryThinSpace]", "-", 
        RowBox[{"0.02`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "ta"}], "]"}]}], "+", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "ta"}], "]"}]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"0.`", "\[VeryThinSpace]", "-", 
        RowBox[{"0.02`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "ta"}], "]"}]}], "+", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "ta"}], "]"}]}], ")"}]}], ",", "0"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.722079951250567*^9, 3.72208116521869*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"RotAx", "[", "ta_", "]"}], "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"RotationAxisFromHamiltonian", "[", 
     RowBox[{
      RowBox[{"Omg1", "[", "ta", "]"}], "*", 
      RowBox[{"I", "/", "Pi"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ta", ">", "0"}], ",", 
      RowBox[{"ww", ">", "0"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.721650257568095*^9, 3.7216504286040163`*^9}, {
  3.7216504972121277`*^9, 3.721650497495522*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.012732395447351628`", " ", 
    RowBox[{"Cos", "[", "ta", "]"}], " ", 
    RowBox[{"Sin", "[", "ta", "]"}]}], ",", 
   RowBox[{"0.006366197723675814`", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "ta"}], "]"}]}], ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{3.722079951349595*^9, 3.722081165313817*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"RotAx", "[", "t", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"RotAx", "[", "t", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tMax"}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"True", ",", "False"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<evolution start \!\(\*SubscriptBox[\(t\), \(0\)]\)\>\"", ",", 
      "\"\<rotation axis component\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRangePadding", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0.05"}], "}"}]}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "0", "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.721650432597056*^9, 3.721650463430464*^9}, {
  3.721650509356501*^9, 3.721650517374711*^9}, {3.721650576513815*^9, 
  3.721650698704221*^9}, {3.721650730053331*^9, 3.7216507429649982`*^9}, {
  3.7216509882332153`*^9, 3.721651001140594*^9}, {3.7216510425208797`*^9, 
  3.721651106415867*^9}, {3.7216512229928637`*^9, 3.721651286307774*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
d5zN7kj6VeSk2WlxYArNutU9cEDnMuTjH+pLwLoz//b4Se7Ga2//aJnZJAFJ
R04WWaruwR+KalQMtkrAV7PS57fXOmKxWv+a55YSoDDu9PG+1V58abacu+ag
BJxyNArcEeGMs3a6pHQkSoD2VqtstNsD5/Ffz1r8LAGj8ZHe71T9sLlU6Ljx
dwlQ1xoovXbVDw+pmBvHDUnAba/MP+Vi/lhj8+RXjmkJsPVVSOte9seF3ltU
BLklYVNlt7hJcyAufv31jvJaSfB1WWUxrxqKXxxVKt12UhLMD8P8hu0R+HK1
kI32GUnYd/NHuGhoBI7kXukVT5WE6blT/NFXI7Beas+q/suS0B2671zPVAS+
ez378LF7klDIZvSa/3wkTvx+ftHnoSSMj7W3UJ5F4iPUY+d3lkpCg2mwfeXX
SKxS5F6hXCUJxnx9nDGaUTizgiJR2SoJ6vq38hdeROHof2KFeR8lwfJl3UmJ
b1HYcRsHSvkiCWwresP3/kVh0Xf9/i5DkjCy0PrHdls0PvM5t2ZxQRKqTY74
mNZGY+aievhGFSmgMCL79pD3w71bpfmU1aWggl82+GsdAxsc57nJTZeC+4WJ
y53fGXiab6ShY70U6M3tLJOTYGJf2buUCEspOLBZeG97KBNbHMwsc7aTgogC
2dvtiUxMvXVmh9kuKXAJjg2E60z8neZHiLlIAaeMb8KhN0y8fxO99WGwFHiI
v4/NFCXwxhh5nysRUuArEB79k0Lep7HAchxTChiKebYP9Qn8wWJC0/6EFFiK
H1j02U3g4uQvVRtOS0FtrYyEuweBU96/c1RKIfu/9z0ZhxDYam/RsckMKeg8
62/yJJnAGlevS3dclYI6EelPFlcIzNWTUlSRLQW/cvPOQi6B+ylHzXLzyP3A
YmK3SB++8gr6lFwoBc1CC2peLwh8s/BQcHixFJwWSj95nvRE7NQOLucnUhCa
9mpWmfTGpqg1elqVUqDwNE4psIfArN4ctpgaKTCQCJ1qGCbwS2uZ1qZ6KXjA
aXks9AeBV56cva3cLAUjZQPZbr9JjyqzhYe2SUHR2s0KV/4S+MSZSLOaLilA
l6zrpEk/1c6Oikt+k4KjIetYPdwszHPo0IBXvxRIYGWpH/wsbFXf+qRsRAoe
DexlbSd9lrzOIoF/SgocAjemDYqwcNO1ckeXWSnwq1xn8470nTDPWvUH81Kg
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
GVqRQj5oqhSENxwyuvd/clTE/A==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
Df//v9R/AXYdaig=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"rotation axis component\"", TraditionalForm], None}, {
        FormBox[
        "\"evolution start \\!\\(\\*SubscriptBox[\\(t\\), \\(0\\)]\\)\"", 
         TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {{0}, {0}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 15.707963267948966`}, {-0.006366197708924445, 
       0.006366197723674506}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0.05, 0.05}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(\[Sigma]\\), \\(x\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(\[Sigma]\\), \\(y\\)]\\)\""}, "LineLegend",
       DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.722079951525215*^9, 3.722081166307661*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7217340139570217`*^9, 3.721734014996415*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1680, 919},
WindowMargins->{{261, Automatic}, {Automatic, 41}},
CellContext->Notebook,
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (October 9, \
2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 159, 2, 66, "Text"],
Cell[CellGroupData[{
Cell[742, 26, 137, 1, 64, "Section"],
Cell[882, 29, 244, 6, 49, "Text"],
Cell[1129, 37, 894, 25, 28, "Input"],
Cell[2026, 64, 169, 2, 30, "Text"],
Cell[2198, 68, 4883, 130, 170, "Input"],
Cell[CellGroupData[{
Cell[7106, 202, 1876, 50, 136, "Input"],
Cell[8985, 254, 137, 3, 47, "Output"],
Cell[9125, 259, 586, 17, 52, "Output"],
Cell[9714, 278, 1087, 32, 53, "Output"],
Cell[10804, 312, 1186, 36, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12027, 353, 242, 6, 28, "Input"],
Cell[12272, 361, 596, 16, 50, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[12917, 383, 270, 3, 64, "Section"],
Cell[13190, 388, 181, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[13396, 396, 10697, 260, 648, "Input"],
Cell[24096, 658, 192, 3, 40, "Output"],
Cell[24291, 663, 354, 7, 243, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[24694, 676, 186, 2, 64, "Section"],
Cell[24883, 680, 3904, 97, 199, "Input"],
Cell[28790, 779, 10988, 246, 743, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39815, 1030, 134, 1, 64, "Section"],
Cell[39952, 1033, 1815, 45, 63, "Input"],
Cell[41770, 1080, 512, 16, 28, "Input"],
Cell[42285, 1098, 4182, 100, 165, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46504, 1203, 111, 1, 64, "Section"],
Cell[46618, 1206, 12125, 302, 1015, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58780, 1513, 100, 1, 65, "Chapter"],
Cell[CellGroupData[{
Cell[58905, 1518, 97, 1, 64, "Section"],
Cell[59005, 1521, 14264, 267, 522, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73306, 1793, 163, 2, 64, "Section"],
Cell[73472, 1797, 8437, 189, 454, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81946, 1991, 99, 1, 64, "Section"],
Cell[82048, 1994, 9425, 195, 420, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91510, 2194, 174, 2, 64, "Section"],
Cell[91687, 2198, 30456, 657, 1416, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122180, 2860, 102, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[122307, 2865, 1124, 21, 97, "Input"],
Cell[123434, 2888, 175882, 3059, 827, "Output"]
}, Open  ]],
Cell[299331, 5950, 68, 1, 28, "Input"],
Cell[299402, 5953, 68, 1, 28, "Input"],
Cell[299473, 5956, 1965, 58, 131, "Input"],
Cell[CellGroupData[{
Cell[301463, 6018, 124, 2, 28, "Input"],
Cell[301590, 6022, 1022, 31, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[302649, 6058, 514, 14, 28, "Input"],
Cell[303166, 6074, 372, 9, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[303575, 6088, 1732, 45, 56, "Input"],
Cell[305310, 6135, 60908, 1048, 247, "Output"]
}, Open  ]],
Cell[366233, 7186, 94, 1, 28, "Input"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
